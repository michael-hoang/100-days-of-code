From: <Saved by Blink>
Snapshot-Content-Location: https://docs.python.org/3/library/turtle.html#input-methods
Subject: =?utf-8?Q?turtle=20=E2=80=94=20Turtle=20graphics=20=E2=80=94=20Python=203?=
 =?utf-8?Q?.10.7=20documentation?=
Date: Tue, 4 Oct 2022 08:46:57 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----"


------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: text/html
Content-ID: <frame-C88FD265BE6E5B8129DFD1DB17B00642@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.python.org/3/library/turtle.html#input-methods

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D=
"cid:css-96576a69-574d-4320-add6-579e2bbb4ff3@mhtml.blink" />
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0"><meta name=3D"generator" content=3D"Docutils 0.17.1: http://docutil=
s.sourceforge.net/">

    <title>turtle =E2=80=94 Turtle graphics =E2=80=94 Python 3.10.7 documen=
tation</title><meta name=3D"viewport" content=3D"width=3Ddevice-width, init=
ial-scale=3D1.0">
   =20
    <link rel=3D"stylesheet" href=3D"https://docs.python.org/3/_static/pygm=
ents.css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"https://docs.python.org/3/_static/pydo=
ctheme.css?2022.1" type=3D"text/css">
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
    <link rel=3D"search" type=3D"application/opensearchdescription+xml" tit=
le=3D"Search within Python 3.10.7 documentation" href=3D"https://docs.pytho=
n.org/3/_static/opensearch.xml">
    <link rel=3D"author" title=3D"About these documents" href=3D"https://do=
cs.python.org/3/about.html">
    <link rel=3D"index" title=3D"Index" href=3D"https://docs.python.org/3/g=
enindex.html">
    <link rel=3D"search" title=3D"Search" href=3D"https://docs.python.org/3=
/search.html">
    <link rel=3D"copyright" title=3D"Copyright" href=3D"https://docs.python=
.org/3/copyright.html">
    <link rel=3D"next" title=3D"cmd =E2=80=94 Support for line-oriented com=
mand interpreters" href=3D"https://docs.python.org/3/library/cmd.html">
    <link rel=3D"prev" title=3D"Program Frameworks" href=3D"https://docs.py=
thon.org/3/library/frameworks.html">
    <link rel=3D"canonical" href=3D"https://docs.python.org/3/library/turtl=
e.html">
   =20
     =20
   =20

   =20
   =20
<link rel=3D"shortcut icon" type=3D"image/png" href=3D"https://docs.python.=
org/3/_static/py.svg">
           =20
            =20

  </head>
<body>
<div class=3D"mobile-nav">
    <input type=3D"checkbox" id=3D"menuToggler" class=3D"toggler__input" ar=
ia-controls=3D"navigation" aria-pressed=3D"false" aria-expanded=3D"false" r=
ole=3D"button" aria-label=3D"Menu">
    <label for=3D"menuToggler" class=3D"toggler__label">
        <span></span>
    </label>
    <nav class=3D"nav-content" role=3D"navigation">
         <a href=3D"https://www.python.org/" class=3D"nav-logo">
             <img src=3D"https://docs.python.org/3/_static/py.svg" alt=3D"L=
ogo">
         </a>
        <div class=3D"version_switcher_placeholder"><select id=3D"version_s=
elect"><option value=3D"3.12">dev (3.12)</option><option value=3D"3.11">pre=
 (3.11)</option><option value=3D"3.10" selected=3D"selected">3.10.7</option=
><option value=3D"3.9">3.9</option><option value=3D"3.8">3.8</option><optio=
n value=3D"3.7">3.7</option><option value=3D"3.6">3.6</option><option value=
=3D"3.5">3.5</option><option value=3D"2.7">2.7</option></select></div>
        <form role=3D"search" class=3D"search" action=3D"https://docs.pytho=
n.org/3/search.html" method=3D"get">
            <svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"20" height=
=3D"20" viewBox=3D"0 0 24 24" class=3D"search-icon">
                <path fill-rule=3D"nonzero" d=3D"M15.5 14h-.79l-.28-.27a6.5=
 6.5 0 001.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 00-7.27 7.27c.3=
4 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 005.34-1.48l.27.28v.79l4.25 4.25c.41.41=
 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S=
7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" fill=3D"#444"></path>
            </svg>
            <input type=3D"text" name=3D"q" aria-label=3D"Quick search">
            <input type=3D"submit" value=3D"Go">
        </form>
    </nav>
    <div class=3D"menu-wrapper">
        <nav class=3D"menu" role=3D"navigation" aria-label=3D"main navigati=
on" tabindex=3D"-1">
            <div class=3D"language_switcher_placeholder"><select id=3D"lang=
uage_select"><option value=3D"en" selected=3D"selected">English</option><op=
tion value=3D"es">Spanish</option><option value=3D"fr">French</option><opti=
on value=3D"ja">Japanese</option><option value=3D"ko">Korean</option><optio=
n value=3D"pt-br">Brazilian Portuguese</option><option value=3D"zh-cn">Simp=
lified Chinese</option><option value=3D"zh-tw">Traditional Chinese</option>=
</select></div>
  <h3><a href=3D"https://docs.python.org/3/contents.html">Table of Contents=
</a></h3>
  <ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#"><code class=3D"xref py py-mod docutils literal notranslate=
"><span class=3D"pre">turtle</span></code> =E2=80=94 Turtle graphics</a><ul=
>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#introduction">Introduction</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#overview-of-available-turtle-and-screen-methods">Overview of=
 available Turtle and Screen methods</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#turtle-methods">Turtle methods</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#methods-of-turtlescreen-screen">Methods of TurtleScreen/Scre=
en</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#methods-of-rawturtle-turtle-and-corresponding-functions">Met=
hods of RawTurtle/Turtle and corresponding functions</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#turtle-motion">Turtle motion</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#tell-turtle-s-state">Tell Turtle=E2=80=99s state</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#settings-for-measurement">Settings for measurement</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#pen-control">Pen control</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#drawing-state">Drawing state</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#color-control">Color control</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#filling">Filling</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#more-drawing-control">More drawing control</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#turtle-state">Turtle state</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#visibility">Visibility</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#appearance">Appearance</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#using-events">Using events</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#special-turtle-methods">Special Turtle methods</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#compound-shapes">Compound shapes</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#methods-of-turtlescreen-screen-and-corresponding-functions">=
Methods of TurtleScreen/Screen and corresponding functions</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#window-control">Window control</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#animation-control">Animation control</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#using-screen-events">Using screen events</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#input-methods">Input methods</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#settings-and-special-methods">Settings and special methods</=
a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#methods-specific-to-screen-not-inherited-from-turtlescreen">=
Methods specific to Screen, not inherited from TurtleScreen</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#public-classes">Public classes</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#help-and-configuration">Help and configuration</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#how-to-use-help">How to use help</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#translation-of-docstrings-into-different-languages">Translat=
ion of docstrings into different languages</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#how-to-configure-screen-and-turtles">How to configure Screen=
 and Turtles</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#module-turtledemo"><code class=3D"xref py py-mod docutils li=
teral notranslate"><span class=3D"pre">turtledemo</span></code> =E2=80=94 D=
emo scripts</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#changes-since-python-2-6">Changes since Python 2.6</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#changes-since-python-3-0">Changes since Python 3.0</a></li>
</ul>
</li>
</ul>

  <h4>Previous topic</h4>
  <p class=3D"topless"><a href=3D"https://docs.python.org/3/library/framewo=
rks.html" title=3D"previous chapter">Program Frameworks</a></p>
  <h4>Next topic</h4>
  <p class=3D"topless"><a href=3D"https://docs.python.org/3/library/cmd.htm=
l" title=3D"next chapter"><code class=3D"xref py py-mod docutils literal no=
translate"><span class=3D"pre">cmd</span></code> =E2=80=94 Support for line=
-oriented command interpreters</a></p>
  <div role=3D"note" aria-label=3D"source link">
    <h3>This Page</h3>
    <ul class=3D"this-page-menu">
      <li><a href=3D"https://docs.python.org/3/bugs.html">Report a Bug</a><=
/li>
      <li>
        <a href=3D"https://github.com/python/cpython/blob/3.10/Doc/library/=
turtle.rst" rel=3D"nofollow">Show Source
        </a>
      </li>
    </ul>
  </div>
        </nav>
    </div>
</div>

 =20
    <div class=3D"related" role=3D"navigation" aria-label=3D"related naviga=
tion">
      <h3>Navigation</h3>
      <ul>
        <li class=3D"right" style=3D"margin-right: 10px">
          <a href=3D"https://docs.python.org/3/genindex.html" title=3D"Gene=
ral Index" accesskey=3D"I">index</a></li>
        <li class=3D"right">
          <a href=3D"https://docs.python.org/3/py-modindex.html" title=3D"P=
ython Module Index">modules</a> |</li>
        <li class=3D"right">
          <a href=3D"https://docs.python.org/3/library/cmd.html" title=3D"c=
md =E2=80=94 Support for line-oriented command interpreters" accesskey=3D"N=
">next</a> |</li>
        <li class=3D"right">
          <a href=3D"https://docs.python.org/3/library/frameworks.html" tit=
le=3D"Program Frameworks" accesskey=3D"P">previous</a> |</li>

          <li><img src=3D"https://docs.python.org/3/_static/py.svg" alt=3D"=
python logo" style=3D"vertical-align: middle; margin-top: -1px"></li>
          <li><a href=3D"https://www.python.org/">Python</a> =C2=BB</li>
          <li class=3D"switchers">
            <div class=3D"language_switcher_placeholder"><select id=3D"lang=
uage_select"><option value=3D"en" selected=3D"selected">English</option><op=
tion value=3D"es">Spanish</option><option value=3D"fr">French</option><opti=
on value=3D"ja">Japanese</option><option value=3D"ko">Korean</option><optio=
n value=3D"pt-br">Brazilian Portuguese</option><option value=3D"zh-cn">Simp=
lified Chinese</option><option value=3D"zh-tw">Traditional Chinese</option>=
</select></div>
            <div class=3D"version_switcher_placeholder"><select id=3D"versi=
on_select"><option value=3D"3.12">dev (3.12)</option><option value=3D"3.11"=
>pre (3.11)</option><option value=3D"3.10" selected=3D"selected">3.10.7</op=
tion><option value=3D"3.9">3.9</option><option value=3D"3.8">3.8</option><o=
ption value=3D"3.7">3.7</option><option value=3D"3.6">3.6</option><option v=
alue=3D"3.5">3.5</option><option value=3D"2.7">2.7</option></select></div>
          </li>
          <li>
             =20
          </li>
    <li id=3D"cpython-language-and-version">
      <a href=3D"https://docs.python.org/3/index.html">3.10.7 Documentation=
</a> =C2=BB
    </li>

          <li class=3D"nav-item nav-item-1"><a href=3D"https://docs.python.=
org/3/library/index.html">The Python Standard Library</a> =C2=BB</li>
          <li class=3D"nav-item nav-item-2"><a href=3D"https://docs.python.=
org/3/library/frameworks.html" accesskey=3D"U">Program Frameworks</a> =C2=
=BB</li>
        <li class=3D"nav-item nav-item-this"><a href=3D"https://docs.python=
.org/3/library/turtle.html"><code class=3D"xref py py-mod docutils literal =
notranslate"><span class=3D"pre">turtle</span></code> =E2=80=94 Turtle grap=
hics</a></li>
                <li class=3D"right">
                   =20

    <div class=3D"inline-search" role=3D"search">
        <form class=3D"inline-search" action=3D"https://docs.python.org/3/s=
earch.html" method=3D"get">
          <input placeholder=3D"Quick search" aria-label=3D"Quick search" t=
ype=3D"text" name=3D"q">
          <input type=3D"submit" value=3D"Go">
         =20
         =20
        </form>
    </div>
                     |
                </li>
           =20
      </ul>
    </div>   =20

    <div class=3D"document">
      <div class=3D"documentwrapper">
        <div class=3D"bodywrapper">
          <div class=3D"body" role=3D"main">
           =20
  <section id=3D"module-turtle">
<span id=3D"turtle-turtle-graphics"></span><h1><a class=3D"reference intern=
al" href=3D"https://docs.python.org/3/library/turtle.html#module-turtle" ti=
tle=3D"turtle: An educational framework for simple graphics applications"><=
code class=3D"xref py py-mod docutils literal notranslate"><span class=3D"p=
re">turtle</span></code></a> =E2=80=94 Turtle graphics<a class=3D"headerlin=
k" href=3D"https://docs.python.org/3/library/turtle.html#module-turtle" tit=
le=3D"Permalink to this headline">=C2=B6</a></h1>
<p><strong>Source code:</strong> <a class=3D"reference external" href=3D"ht=
tps://github.com/python/cpython/tree/3.10/Lib/turtle.py">Lib/turtle.py</a><=
/p>
<hr class=3D"docutils">
<section id=3D"introduction">
<h2>Introduction<a class=3D"headerlink" href=3D"https://docs.python.org/3/l=
ibrary/turtle.html#introduction" title=3D"Permalink to this headline">=C2=
=B6</a></h2>
<p>Turtle graphics is a popular way for introducing programming to kids.  I=
t was
part of the original Logo programming language developed by Wally Feurzeig,
Seymour Papert and Cynthia Solomon in 1967.</p>
<p>Imagine a robotic turtle starting at (0, 0) in the x-y plane.  After an =
<code class=3D"docutils literal notranslate"><span class=3D"pre">import</sp=
an> <span class=3D"pre">turtle</span></code>, give it the
command <code class=3D"docutils literal notranslate"><span class=3D"pre">tu=
rtle.forward(15)</span></code>, and it moves (on-screen!) 15 pixels in the
direction it is facing, drawing a line as it moves.  Give it the command
<code class=3D"docutils literal notranslate"><span class=3D"pre">turtle.rig=
ht(25)</span></code>, and it rotates in-place 25 degrees clockwise.</p>
<aside class=3D"sidebar">
<p class=3D"sidebar-title">Turtle star</p>
<p>Turtle can draw intricate shapes using programs that repeat simple
moves.</p>
<img alt=3D"../_images/turtle-star.png" class=3D"align-center" src=3D"https=
://docs.python.org/3/_images/turtle-star.png">
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><pre><span></span><span class=3D"kn">from</span> <=
span class=3D"nn">turtle</span> <span class=3D"kn">import</span> <span clas=
s=3D"o">*</span>
<span class=3D"n">color</span><span class=3D"p">(</span><span class=3D"s1">=
'red'</span><span class=3D"p">,</span> <span class=3D"s1">'yellow'</span><s=
pan class=3D"p">)</span>
<span class=3D"n">begin_fill</span><span class=3D"p">()</span>
<span class=3D"k">while</span> <span class=3D"kc">True</span><span class=3D=
"p">:</span>
    <span class=3D"n">forward</span><span class=3D"p">(</span><span class=
=3D"mi">200</span><span class=3D"p">)</span>
    <span class=3D"n">left</span><span class=3D"p">(</span><span class=3D"m=
i">170</span><span class=3D"p">)</span>
    <span class=3D"k">if</span> <span class=3D"nb">abs</span><span class=3D=
"p">(</span><span class=3D"n">pos</span><span class=3D"p">())</span> <span =
class=3D"o">&lt;</span> <span class=3D"mi">1</span><span class=3D"p">:</spa=
n>
        <span class=3D"k">break</span>
<span class=3D"n">end_fill</span><span class=3D"p">()</span>
<span class=3D"n">done</span><span class=3D"p">()</span>
</pre></div>
</div>
</aside>
<p>By combining together these and similar commands, intricate shapes and p=
ictures
can easily be drawn.</p>
<p>The <a class=3D"reference internal" href=3D"https://docs.python.org/3/li=
brary/turtle.html#module-turtle" title=3D"turtle: An educational framework =
for simple graphics applications"><code class=3D"xref py py-mod docutils li=
teral notranslate"><span class=3D"pre">turtle</span></code></a> module is a=
n extended reimplementation of the same-named
module from the Python standard distribution up to version Python 2.5.</p>
<p>It tries to keep the merits of the old turtle module and to be (nearly) =
100%
compatible with it.  This means in the first place to enable the learning
programmer to use all the commands, classes and methods interactively when =
using
the module from within IDLE run with the <code class=3D"docutils literal no=
translate"><span class=3D"pre">-n</span></code> switch.</p>
<p>The turtle module provides turtle graphics primitives, in both object-or=
iented
and procedure-oriented ways.  Because it uses <a class=3D"reference interna=
l" href=3D"https://docs.python.org/3/library/tkinter.html#module-tkinter" t=
itle=3D"tkinter: Interface to Tcl/Tk for graphical user interfaces"><code c=
lass=3D"xref py py-mod docutils literal notranslate"><span class=3D"pre">tk=
inter</span></code></a> for the underlying
graphics, it needs a version of Python installed with Tk support.</p>
<p>The object-oriented interface uses essentially two+two classes:</p>
<ol class=3D"arabic">
<li><p>The <a class=3D"reference internal" href=3D"https://docs.python.org/=
3/library/turtle.html#turtle.TurtleScreen" title=3D"turtle.TurtleScreen"><c=
ode class=3D"xref py py-class docutils literal notranslate"><span class=3D"=
pre">TurtleScreen</span></code></a> class defines graphics windows as a pla=
yground for
the drawing turtles.  Its constructor needs a <code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">tkinter.Canvas</span><=
/code> or a
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.ScrolledCanvas" title=3D"turtle.ScrolledCanvas"><code cla=
ss=3D"xref py py-class docutils literal notranslate"><span class=3D"pre">Sc=
rolledCanvas</span></code></a> as argument.  It should be used when <a clas=
s=3D"reference internal" href=3D"https://docs.python.org/3/library/turtle.h=
tml#module-turtle" title=3D"turtle: An educational framework for simple gra=
phics applications"><code class=3D"xref py py-mod docutils literal notransl=
ate"><span class=3D"pre">turtle</span></code></a> is
used as part of some application.</p>
<p>The function <a class=3D"reference internal" href=3D"https://docs.python=
.org/3/library/turtle.html#turtle.Screen" title=3D"turtle.Screen"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">Scr=
een()</span></code></a> returns a singleton object of a
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.TurtleScreen" title=3D"turtle.TurtleScreen"><code class=
=3D"xref py py-class docutils literal notranslate"><span class=3D"pre">Turt=
leScreen</span></code></a> subclass. This function should be used when
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#module-turtle" title=3D"turtle: An educational framework for sim=
ple graphics applications"><code class=3D"xref py py-mod docutils literal n=
otranslate"><span class=3D"pre">turtle</span></code></a> is used as a stand=
alone tool for doing graphics.
As a singleton object, inheriting from its class is not possible.</p>
<p>All methods of TurtleScreen/Screen also exist as functions, i.e. as part=
 of
the procedure-oriented interface.</p>
</li>
<li><p><a class=3D"reference internal" href=3D"https://docs.python.org/3/li=
brary/turtle.html#turtle.RawTurtle" title=3D"turtle.RawTurtle"><code class=
=3D"xref py py-class docutils literal notranslate"><span class=3D"pre">RawT=
urtle</span></code></a> (alias: <a class=3D"reference internal" href=3D"htt=
ps://docs.python.org/3/library/turtle.html#turtle.RawPen" title=3D"turtle.R=
awPen"><code class=3D"xref py py-class docutils literal notranslate"><span =
class=3D"pre">RawPen</span></code></a>) defines Turtle objects which draw
on a <a class=3D"reference internal" href=3D"https://docs.python.org/3/libr=
ary/turtle.html#turtle.TurtleScreen" title=3D"turtle.TurtleScreen"><code cl=
ass=3D"xref py py-class docutils literal notranslate"><span class=3D"pre">T=
urtleScreen</span></code></a>.  Its constructor needs a Canvas, ScrolledCan=
vas
or TurtleScreen as argument, so the RawTurtle objects know where to draw.</=
p>
<p>Derived from RawTurtle is the subclass <a class=3D"reference internal" h=
ref=3D"https://docs.python.org/3/library/turtle.html#turtle.Turtle" title=
=3D"turtle.Turtle"><code class=3D"xref py py-class docutils literal notrans=
late"><span class=3D"pre">Turtle</span></code></a> (alias: <code class=3D"x=
ref py py-class docutils literal notranslate"><span class=3D"pre">Pen</span=
></code>),
which draws on =E2=80=9Cthe=E2=80=9D <a class=3D"reference internal" href=
=3D"https://docs.python.org/3/library/turtle.html#turtle.Screen" title=3D"t=
urtle.Screen"><code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">Screen</span></code></a> instance which is automatical=
ly
created, if not already present.</p>
<p>All methods of RawTurtle/Turtle also exist as functions, i.e. part of th=
e
procedure-oriented interface.</p>
</li>
</ol>
<p>The procedural interface provides functions which are derived from the m=
ethods
of the classes <a class=3D"reference internal" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.Screen" title=3D"turtle.Screen"><code clas=
s=3D"xref py py-class docutils literal notranslate"><span class=3D"pre">Scr=
een</span></code></a> and <a class=3D"reference internal" href=3D"https://d=
ocs.python.org/3/library/turtle.html#turtle.Turtle" title=3D"turtle.Turtle"=
><code class=3D"xref py py-class docutils literal notranslate"><span class=
=3D"pre">Turtle</span></code></a>.  They have the same names as
the corresponding methods.  A screen object is automatically created whenev=
er a
function derived from a Screen method is called.  An (unnamed) turtle objec=
t is
automatically created whenever any of the functions derived from a Turtle m=
ethod
is called.</p>
<p>To use multiple turtles on a screen one has to use the object-oriented i=
nterface.</p>
<div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>In the following documentation the argument list for functions is given.
Methods, of course, have the additional first argument <em>self</em> which =
is
omitted here.</p>
</div>
</section>
<section id=3D"overview-of-available-turtle-and-screen-methods">
<h2>Overview of available Turtle and Screen methods<a class=3D"headerlink" =
href=3D"https://docs.python.org/3/library/turtle.html#overview-of-available=
-turtle-and-screen-methods" title=3D"Permalink to this headline">=C2=B6</a>=
</h2>
<section id=3D"turtle-methods">
<h3>Turtle methods<a class=3D"headerlink" href=3D"https://docs.python.org/3=
/library/turtle.html#turtle-methods" title=3D"Permalink to this headline">=
=C2=B6</a></h3>
<dl>
<dt>Turtle motion</dt><dd><dl>
<dt>Move and draw</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.forward" title=3D"turtle.forward"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">forward()</span></code></a> | <a class=3D"reference internal" href=3D"ht=
tps://docs.python.org/3/library/turtle.html#turtle.fd" title=3D"turtle.fd">=
<code class=3D"xref py py-func docutils literal notranslate"><span class=3D=
"pre">fd()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.backward" title=3D"turtle.backward"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">backward()</span></code></a> | <a class=3D"reference internal" href=3D=
"https://docs.python.org/3/library/turtle.html#turtle.bk" title=3D"turtle.b=
k"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">bk()</span></code></a> | <a class=3D"reference internal" href=3D"h=
ttps://docs.python.org/3/library/turtle.html#turtle.back" title=3D"turtle.b=
ack"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">back()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.right" title=3D"turtle.right"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">r=
ight()</span></code></a> | <a class=3D"reference internal" href=3D"https://=
docs.python.org/3/library/turtle.html#turtle.rt" title=3D"turtle.rt"><code =
class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">=
rt()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.left" title=3D"turtle.left"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">lef=
t()</span></code></a> | <a class=3D"reference internal" href=3D"https://doc=
s.python.org/3/library/turtle.html#turtle.lt" title=3D"turtle.lt"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">lt(=
)</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.goto" title=3D"turtle.goto"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">got=
o()</span></code></a> | <a class=3D"reference internal" href=3D"https://doc=
s.python.org/3/library/turtle.html#turtle.setpos" title=3D"turtle.setpos"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">setpos()</span></code></a> | <a class=3D"reference internal" href=3D"h=
ttps://docs.python.org/3/library/turtle.html#turtle.setposition" title=3D"t=
urtle.setposition"><code class=3D"xref py py-func docutils literal notransl=
ate"><span class=3D"pre">setposition()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.setx" title=3D"turtle.setx"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">set=
x()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.sety" title=3D"turtle.sety"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">set=
y()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.setheading" title=3D"turtle.setheadin=
g"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">setheading()</span></code></a> | <a class=3D"reference internal" h=
ref=3D"https://docs.python.org/3/library/turtle.html#turtle.seth" title=3D"=
turtle.seth"><code class=3D"xref py py-func docutils literal notranslate"><=
span class=3D"pre">seth()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.home" title=3D"turtle.home"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">hom=
e()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.circle" title=3D"turtle.circle"><code=
 class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre"=
>circle()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.dot" title=3D"turtle.dot"><code class=
=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">dot()=
</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.stamp" title=3D"turtle.stamp"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">s=
tamp()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.clearstamp" title=3D"turtle.clearstam=
p"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">clearstamp()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.clearstamps" title=3D"turtle.clearsta=
mps"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">clearstamps()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.undo" title=3D"turtle.undo"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">und=
o()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.speed" title=3D"turtle.speed"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">s=
peed()</span></code></a></div>
</div>
</dd>
<dt>Tell Turtle=E2=80=99s state</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.position" title=3D"turtle.position"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">position()</span></code></a> | <a class=3D"reference internal" href=3D=
"https://docs.python.org/3/library/turtle.html#turtle.pos" title=3D"turtle.=
pos"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">pos()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.towards" title=3D"turtle.towards"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">towards()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.xcor" title=3D"turtle.xcor"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">xco=
r()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.ycor" title=3D"turtle.ycor"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">yco=
r()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.heading" title=3D"turtle.heading"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">heading()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.distance" title=3D"turtle.distance"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">distance()</span></code></a></div>
</div>
</dd>
<dt>Setting and measurement</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.degrees" title=3D"turtle.degrees"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">degrees()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.radians" title=3D"turtle.radians"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">radians()</span></code></a></div>
</div>
</dd>
</dl>
</dd>
<dt>Pen control</dt><dd><dl>
<dt>Drawing state</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.pendown" title=3D"turtle.pendown"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">pendown()</span></code></a> | <a class=3D"reference internal" href=3D"ht=
tps://docs.python.org/3/library/turtle.html#turtle.pd" title=3D"turtle.pd">=
<code class=3D"xref py py-func docutils literal notranslate"><span class=3D=
"pre">pd()</span></code></a> | <a class=3D"reference internal" href=3D"http=
s://docs.python.org/3/library/turtle.html#turtle.down" title=3D"turtle.down=
"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">down()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.penup" title=3D"turtle.penup"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">p=
enup()</span></code></a> | <a class=3D"reference internal" href=3D"https://=
docs.python.org/3/library/turtle.html#turtle.pu" title=3D"turtle.pu"><code =
class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">=
pu()</span></code></a> | <a class=3D"reference internal" href=3D"https://do=
cs.python.org/3/library/turtle.html#turtle.up" title=3D"turtle.up"><code cl=
ass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">up=
()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.pensize" title=3D"turtle.pensize"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">pensize()</span></code></a> | <a class=3D"reference internal" href=3D"ht=
tps://docs.python.org/3/library/turtle.html#turtle.width" title=3D"turtle.w=
idth"><code class=3D"xref py py-func docutils literal notranslate"><span cl=
ass=3D"pre">width()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.pen" title=3D"turtle.pen"><code class=
=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">pen()=
</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.isdown" title=3D"turtle.isdown"><code=
 class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre"=
>isdown()</span></code></a></div>
</div>
</dd>
<dt>Color control</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.color" title=3D"turtle.color"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">c=
olor()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.pencolor" title=3D"turtle.pencolor"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">pencolor()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.fillcolor" title=3D"turtle.fillcolor"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">fillcolor()</span></code></a></div>
</div>
</dd>
<dt>Filling</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.filling" title=3D"turtle.filling"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">filling()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.begin_fill" title=3D"turtle.begin_fil=
l"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">begin_fill()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.end_fill" title=3D"turtle.end_fill"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">end_fill()</span></code></a></div>
</div>
</dd>
<dt>More drawing control</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.reset" title=3D"turtle.reset"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">r=
eset()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.clear" title=3D"turtle.clear"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">c=
lear()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.write" title=3D"turtle.write"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">w=
rite()</span></code></a></div>
</div>
</dd>
</dl>
</dd>
<dt>Turtle state</dt><dd><dl>
<dt>Visibility</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.showturtle" title=3D"turtle.showturtl=
e"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">showturtle()</span></code></a> | <a class=3D"reference internal" h=
ref=3D"https://docs.python.org/3/library/turtle.html#turtle.st" title=3D"tu=
rtle.st"><code class=3D"xref py py-func docutils literal notranslate"><span=
 class=3D"pre">st()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.hideturtle" title=3D"turtle.hideturtl=
e"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">hideturtle()</span></code></a> | <a class=3D"reference internal" h=
ref=3D"https://docs.python.org/3/library/turtle.html#turtle.ht" title=3D"tu=
rtle.ht"><code class=3D"xref py py-func docutils literal notranslate"><span=
 class=3D"pre">ht()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.isvisible" title=3D"turtle.isvisible"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">isvisible()</span></code></a></div>
</div>
</dd>
<dt>Appearance</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.shape" title=3D"turtle.shape"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">s=
hape()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.resizemode" title=3D"turtle.resizemod=
e"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">resizemode()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.shapesize" title=3D"turtle.shapesize"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">shapesize()</span></code></a> | <a class=3D"reference internal" hr=
ef=3D"https://docs.python.org/3/library/turtle.html#turtle.turtlesize" titl=
e=3D"turtle.turtlesize"><code class=3D"xref py py-func docutils literal not=
ranslate"><span class=3D"pre">turtlesize()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.shearfactor" title=3D"turtle.shearfac=
tor"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">shearfactor()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.settiltangle" title=3D"turtle.settilt=
angle"><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">settiltangle()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.tiltangle" title=3D"turtle.tiltangle"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">tiltangle()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.tilt" title=3D"turtle.tilt"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">til=
t()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.shapetransform" title=3D"turtle.shape=
transform"><code class=3D"xref py py-func docutils literal notranslate"><sp=
an class=3D"pre">shapetransform()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.get_shapepoly" title=3D"turtle.get_sh=
apepoly"><code class=3D"xref py py-func docutils literal notranslate"><span=
 class=3D"pre">get_shapepoly()</span></code></a></div>
</div>
</dd>
</dl>
</dd>
<dt>Using events</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.onclick" title=3D"turtle.onclick"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">onclick()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.onrelease" title=3D"turtle.onrelease"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">onrelease()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.ondrag" title=3D"turtle.ondrag"><code=
 class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre"=
>ondrag()</span></code></a></div>
</div>
</dd>
<dt>Special Turtle methods</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.begin_poly" title=3D"turtle.begin_pol=
y"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">begin_poly()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.end_poly" title=3D"turtle.end_poly"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">end_poly()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.get_poly" title=3D"turtle.get_poly"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">get_poly()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.clone" title=3D"turtle.clone"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">c=
lone()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.getturtle" title=3D"turtle.getturtle"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">getturtle()</span></code></a> | <a class=3D"reference internal" hr=
ef=3D"https://docs.python.org/3/library/turtle.html#turtle.getpen" title=3D=
"turtle.getpen"><code class=3D"xref py py-func docutils literal notranslate=
"><span class=3D"pre">getpen()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.getscreen" title=3D"turtle.getscreen"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">getscreen()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.setundobuffer" title=3D"turtle.setund=
obuffer"><code class=3D"xref py py-func docutils literal notranslate"><span=
 class=3D"pre">setundobuffer()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.undobufferentries" title=3D"turtle.un=
dobufferentries"><code class=3D"xref py py-func docutils literal notranslat=
e"><span class=3D"pre">undobufferentries()</span></code></a></div>
</div>
</dd>
</dl>
</section>
<section id=3D"methods-of-turtlescreen-screen">
<h3>Methods of TurtleScreen/Screen<a class=3D"headerlink" href=3D"https://d=
ocs.python.org/3/library/turtle.html#methods-of-turtlescreen-screen" title=
=3D"Permalink to this headline">=C2=B6</a></h3>
<dl>
<dt>Window control</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.bgcolor" title=3D"turtle.bgcolor"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">bgcolor()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.bgpic" title=3D"turtle.bgpic"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">b=
gpic()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.clearscreen" title=3D"turtle.clearscr=
een"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">clearscreen()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.resetscreen" title=3D"turtle.resetscr=
een"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">resetscreen()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.screensize" title=3D"turtle.screensiz=
e"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">screensize()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.setworldcoordinates" title=3D"turtle.=
setworldcoordinates"><code class=3D"xref py py-func docutils literal notran=
slate"><span class=3D"pre">setworldcoordinates()</span></code></a></div>
</div>
</dd>
<dt>Animation control</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.delay" title=3D"turtle.delay"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">d=
elay()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.tracer" title=3D"turtle.tracer"><code=
 class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre"=
>tracer()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.update" title=3D"turtle.update"><code=
 class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre"=
>update()</span></code></a></div>
</div>
</dd>
<dt>Using screen events</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.listen" title=3D"turtle.listen"><code=
 class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre"=
>listen()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.onkey" title=3D"turtle.onkey"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">o=
nkey()</span></code></a> | <a class=3D"reference internal" href=3D"https://=
docs.python.org/3/library/turtle.html#turtle.onkeyrelease" title=3D"turtle.=
onkeyrelease"><code class=3D"xref py py-func docutils literal notranslate">=
<span class=3D"pre">onkeyrelease()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.onkeypress" title=3D"turtle.onkeypres=
s"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">onkeypress()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.onclick" title=3D"turtle.onclick"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">onclick()</span></code></a> | <a class=3D"reference internal" href=3D"ht=
tps://docs.python.org/3/library/turtle.html#turtle.onscreenclick" title=3D"=
turtle.onscreenclick"><code class=3D"xref py py-func docutils literal notra=
nslate"><span class=3D"pre">onscreenclick()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.ontimer" title=3D"turtle.ontimer"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">ontimer()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.mainloop" title=3D"turtle.mainloop"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">mainloop()</span></code></a> | <a class=3D"reference internal" href=3D=
"https://docs.python.org/3/library/turtle.html#turtle.done" title=3D"turtle=
.done"><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">done()</span></code></a></div>
</div>
</dd>
<dt>Settings and special methods</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.mode" title=3D"turtle.mode"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">mod=
e()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.colormode" title=3D"turtle.colormode"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">colormode()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.getcanvas" title=3D"turtle.getcanvas"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">getcanvas()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.getshapes" title=3D"turtle.getshapes"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">getshapes()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.register_shape" title=3D"turtle.regis=
ter_shape"><code class=3D"xref py py-func docutils literal notranslate"><sp=
an class=3D"pre">register_shape()</span></code></a> | <a class=3D"reference=
 internal" href=3D"https://docs.python.org/3/library/turtle.html#turtle.add=
shape" title=3D"turtle.addshape"><code class=3D"xref py py-func docutils li=
teral notranslate"><span class=3D"pre">addshape()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.turtles" title=3D"turtle.turtles"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">turtles()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.window_height" title=3D"turtle.window=
_height"><code class=3D"xref py py-func docutils literal notranslate"><span=
 class=3D"pre">window_height()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.window_width" title=3D"turtle.window_=
width"><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">window_width()</span></code></a></div>
</div>
</dd>
<dt>Input methods</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.textinput" title=3D"turtle.textinput"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">textinput()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.numinput" title=3D"turtle.numinput"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">numinput()</span></code></a></div>
</div>
</dd>
<dt>Methods specific to Screen</dt><dd><div class=3D"line-block">
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.bye" title=3D"turtle.bye"><code class=
=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">bye()=
</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.exitonclick" title=3D"turtle.exitoncl=
ick"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">exitonclick()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.setup" title=3D"turtle.setup"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">s=
etup()</span></code></a></div>
<div class=3D"line"><a class=3D"reference internal" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.title" title=3D"turtle.title"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">t=
itle()</span></code></a></div>
</div>
</dd>
</dl>
</section>
</section>
<section id=3D"methods-of-rawturtle-turtle-and-corresponding-functions">
<h2>Methods of RawTurtle/Turtle and corresponding functions<a class=3D"head=
erlink" href=3D"https://docs.python.org/3/library/turtle.html#methods-of-ra=
wturtle-turtle-and-corresponding-functions" title=3D"Permalink to this head=
line">=C2=B6</a></h2>
<p>Most of the examples in this section refer to a Turtle instance called
<code class=3D"docutils literal notranslate"><span class=3D"pre">turtle</sp=
an></code>.</p>
<section id=3D"turtle-motion">
<h3>Turtle motion<a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#turtle-motion" title=3D"Permalink to this headline">=C2=
=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.forward">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">forward</code><span class=3D"sig-paren">(</span><em class=3D=
"sig-param"><span class=3D"n">distance</span></em><span class=3D"sig-paren"=
>)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/=
turtle.html#turtle.forward" title=3D"Permalink to this definition">=C2=B6</=
a></dt>
<dt id=3D"turtle.fd">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">fd</code><span class=3D"sig-paren">(</span><em class=3D"sig-=
param"><span class=3D"n">distance</span></em><span class=3D"sig-paren">)</s=
pan><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtl=
e.html#turtle.fd" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>distance</strong> =E2=80=93 a number (in=
teger or float)</p>
</dd>
</dl>
<p>Move the turtle forward by the specified <em>distance</em>, in the direc=
tion the
turtle is headed.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">position</span><=
span class=3D"p">()</span>
<span class=3D"go">(0.00,0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">forward</span><span class=3D"p">(</s=
pan><span class=3D"mi">25</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(25.00,0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">forward</span><span class=3D"p">(</s=
pan><span class=3D"o">-</span><span class=3D"mi">75</span><span class=3D"p"=
>)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(-50.00,0.00)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.back">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">back</code><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n">distance</span></em><span class=3D"sig-paren">)<=
/span><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/tur=
tle.html#turtle.back" title=3D"Permalink to this definition">=C2=B6</a></dt=
>
<dt id=3D"turtle.bk">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">bk</code><span class=3D"sig-paren">(</span><em class=3D"sig-=
param"><span class=3D"n">distance</span></em><span class=3D"sig-paren">)</s=
pan><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtl=
e.html#turtle.bk" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.backward">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">backward</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">distance</span></em><span class=3D"sig-par=
en">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#turtle.backward" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>distance</strong> =E2=80=93 a number</p>
</dd>
</dl>
<p>Move the turtle backward by <em>distance</em>, opposite to the direction=
 the
turtle is headed.  Do not change the turtle=E2=80=99s heading.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">position</span><=
span class=3D"p">()</span>
<span class=3D"go">(0.00,0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">backward</span><span class=3D"p">(</=
span><span class=3D"mi">30</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(-30.00,0.00)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.right">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">right</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">angle</span></em><span class=3D"sig-paren">)</s=
pan><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtl=
e.html#turtle.right" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.rt">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">rt</code><span class=3D"sig-paren">(</span><em class=3D"sig-=
param"><span class=3D"n">angle</span></em><span class=3D"sig-paren">)</span=
><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.h=
tml#turtle.rt" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>angle</strong> =E2=80=93 a number (integ=
er or float)</p>
</dd>
</dl>
<p>Turn turtle right by <em>angle</em> units.  (Units are by default degree=
s, but
can be set via the <a class=3D"reference internal" href=3D"https://docs.pyt=
hon.org/3/library/turtle.html#turtle.degrees" title=3D"turtle.degrees"><cod=
e class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre=
">degrees()</span></code></a> and <a class=3D"reference internal" href=3D"h=
ttps://docs.python.org/3/library/turtle.html#turtle.radians" title=3D"turtl=
e.radians"><code class=3D"xref py py-func docutils literal notranslate"><sp=
an class=3D"pre">radians()</span></code></a> functions.)  Angle
orientation depends on the turtle mode, see <a class=3D"reference internal"=
 href=3D"https://docs.python.org/3/library/turtle.html#turtle.mode" title=
=3D"turtle.mode"><code class=3D"xref py py-func docutils literal notranslat=
e"><span class=3D"pre">mode()</span></code></a>.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">heading</span><s=
pan class=3D"p">()</span>
<span class=3D"go">22.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">right</span><span class=3D"p">(</spa=
n><span class=3D"mi">45</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">337.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.left">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">left</code><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n">angle</span></em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle=
.html#turtle.left" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.lt">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">lt</code><span class=3D"sig-paren">(</span><em class=3D"sig-=
param"><span class=3D"n">angle</span></em><span class=3D"sig-paren">)</span=
><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.h=
tml#turtle.lt" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>angle</strong> =E2=80=93 a number (integ=
er or float)</p>
</dd>
</dl>
<p>Turn turtle left by <em>angle</em> units.  (Units are by default degrees=
, but
can be set via the <a class=3D"reference internal" href=3D"https://docs.pyt=
hon.org/3/library/turtle.html#turtle.degrees" title=3D"turtle.degrees"><cod=
e class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre=
">degrees()</span></code></a> and <a class=3D"reference internal" href=3D"h=
ttps://docs.python.org/3/library/turtle.html#turtle.radians" title=3D"turtl=
e.radians"><code class=3D"xref py py-func docutils literal notranslate"><sp=
an class=3D"pre">radians()</span></code></a> functions.)  Angle
orientation depends on the turtle mode, see <a class=3D"reference internal"=
 href=3D"https://docs.python.org/3/library/turtle.html#turtle.mode" title=
=3D"turtle.mode"><code class=3D"xref py py-func docutils literal notranslat=
e"><span class=3D"pre">mode()</span></code></a>.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">heading</span><s=
pan class=3D"p">()</span>
<span class=3D"go">22.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">45</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">67.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.goto">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">goto</code><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n">x</span></em>, <em class=3D"sig-param"><span cla=
ss=3D"n">y</span><span class=3D"o">=3D</span><span class=3D"default_value">=
None</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlink" h=
ref=3D"https://docs.python.org/3/library/turtle.html#turtle.goto" title=3D"=
Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.setpos">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">setpos</code><span class=3D"sig-paren">(</span><em class=3D"=
sig-param"><span class=3D"n">x</span></em>, <em class=3D"sig-param"><span c=
lass=3D"n">y</span><span class=3D"o">=3D</span><span class=3D"default_value=
">None</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlink"=
 href=3D"https://docs.python.org/3/library/turtle.html#turtle.setpos" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.setposition">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">setposition</code><span class=3D"sig-paren">(</span><em clas=
s=3D"sig-param"><span class=3D"n">x</span></em>, <em class=3D"sig-param"><s=
pan class=3D"n">y</span><span class=3D"o">=3D</span><span class=3D"default_=
value">None</span></em><span class=3D"sig-paren">)</span><a class=3D"header=
link" href=3D"https://docs.python.org/3/library/turtle.html#turtle.setposit=
ion" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>x</strong> =E2=80=93 a number or a pair/vector of numbers</p=
></li>
<li><p><strong>y</strong> =E2=80=93 a number or <code class=3D"docutils lit=
eral notranslate"><span class=3D"pre">None</span></code></p></li>
</ul>
</dd>
</dl>
<p>If <em>y</em> is <code class=3D"docutils literal notranslate"><span clas=
s=3D"pre">None</span></code>, <em>x</em> must be a pair of coordinates or a=
 <a class=3D"reference internal" href=3D"https://docs.python.org/3/library/=
turtle.html#turtle.Vec2D" title=3D"turtle.Vec2D"><code class=3D"xref py py-=
class docutils literal notranslate"><span class=3D"pre">Vec2D</span></code>=
</a>
(e.g. as returned by <a class=3D"reference internal" href=3D"https://docs.p=
ython.org/3/library/turtle.html#turtle.pos" title=3D"turtle.pos"><code clas=
s=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">pos(=
)</span></code></a>).</p>
<p>Move turtle to an absolute position.  If the pen is down, draw line.  Do
not change the turtle=E2=80=99s orientation.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><pre><span></span><span class=3D"go"> &gt;&gt;&gt; =
tp =3D turtle.pos()</span>
<span class=3D"go"> &gt;&gt;&gt; tp</span>
<span class=3D"go"> (0.00,0.00)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.setpos(60,30)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pos()</span>
<span class=3D"go"> (60.00,30.00)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.setpos((20,80))</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pos()</span>
<span class=3D"go"> (20.00,80.00)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.setpos(tp)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pos()</span>
<span class=3D"go"> (0.00,0.00)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.setx">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">setx</code><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n">x</span></em><span class=3D"sig-paren">)</span><=
a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.htm=
l#turtle.setx" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>x</strong> =E2=80=93 a number (integer o=
r float)</p>
</dd>
</dl>
<p>Set the turtle=E2=80=99s first coordinate to <em>x</em>, leave second co=
ordinate
unchanged.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">position</span><=
span class=3D"p">()</span>
<span class=3D"go">(0.00,240.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">setx</span><span class=3D"p">(</span=
><span class=3D"mi">10</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(10.00,240.00)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.sety">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">sety</code><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n">y</span></em><span class=3D"sig-paren">)</span><=
a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.htm=
l#turtle.sety" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>y</strong> =E2=80=93 a number (integer o=
r float)</p>
</dd>
</dl>
<p>Set the turtle=E2=80=99s second coordinate to <em>y</em>, leave first co=
ordinate unchanged.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">position</span><=
span class=3D"p">()</span>
<span class=3D"go">(0.00,40.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">sety</span><span class=3D"p">(</span=
><span class=3D"o">-</span><span class=3D"mi">10</span><span class=3D"p">)<=
/span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(0.00,-10.00)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.setheading">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">setheading</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">to_angle</span></em><span class=3D"sig-par=
en">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#turtle.setheading" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dt id=3D"turtle.seth">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">seth</code><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n">to_angle</span></em><span class=3D"sig-paren">)<=
/span><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/tur=
tle.html#turtle.seth" title=3D"Permalink to this definition">=C2=B6</a></dt=
>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>to_angle</strong> =E2=80=93 a number (in=
teger or float)</p>
</dd>
</dl>
<p>Set the orientation of the turtle to <em>to_angle</em>.  Here are some c=
ommon
directions in degrees:</p>
<div class=3D"responsive-table__container"><table class=3D"docutils align-d=
efault">
<colgroup>
<col style=3D"width: 49%">
<col style=3D"width: 51%">
</colgroup>
<thead>
<tr class=3D"row-odd"><th class=3D"head"><p>standard mode</p></th>
<th class=3D"head"><p>logo mode</p></th>
</tr>
</thead>
<tbody>
<tr class=3D"row-even"><td><p>0 - east</p></td>
<td><p>0 - north</p></td>
</tr>
<tr class=3D"row-odd"><td><p>90 - north</p></td>
<td><p>90 - east</p></td>
</tr>
<tr class=3D"row-even"><td><p>180 - west</p></td>
<td><p>180 - south</p></td>
</tr>
<tr class=3D"row-odd"><td><p>270 - south</p></td>
<td><p>270 - west</p></td>
</tr>
</tbody>
</table></div>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">setheading</span=
><span class=3D"p">(</span><span class=3D"mi">90</span><span class=3D"p">)<=
/span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">90.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.home">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">home</code><span class=3D"sig-paren">(</span><span class=3D"=
sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/=
3/library/turtle.html#turtle.home" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Move turtle to the origin =E2=80=93 coordinates (0,0) =E2=80=93 and =
set its heading to
its start-orientation (which depends on the mode, see <a class=3D"reference=
 internal" href=3D"https://docs.python.org/3/library/turtle.html#turtle.mod=
e" title=3D"turtle.mode"><code class=3D"xref py py-func docutils literal no=
translate"><span class=3D"pre">mode()</span></code></a>).</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">heading</span><s=
pan class=3D"p">()</span>
<span class=3D"go">90.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(0.00,-10.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">home</span><span class=3D"p">()</spa=
n>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(0.00,0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">0.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.circle">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">circle</code><span class=3D"sig-paren">(</span><em class=3D"=
sig-param"><span class=3D"n">radius</span></em>, <em class=3D"sig-param"><s=
pan class=3D"n">extent</span><span class=3D"o">=3D</span><span class=3D"def=
ault_value">None</span></em>, <em class=3D"sig-param"><span class=3D"n">ste=
ps</span><span class=3D"o">=3D</span><span class=3D"default_value">None</sp=
an></em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"h=
ttps://docs.python.org/3/library/turtle.html#turtle.circle" title=3D"Permal=
ink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>radius</strong> =E2=80=93 a number</p></li>
<li><p><strong>extent</strong> =E2=80=93 a number (or <code class=3D"docuti=
ls literal notranslate"><span class=3D"pre">None</span></code>)</p></li>
<li><p><strong>steps</strong> =E2=80=93 an integer (or <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">None</span></code>)</p></li>
</ul>
</dd>
</dl>
<p>Draw a circle with given <em>radius</em>.  The center is <em>radius</em>=
 units left of
the turtle; <em>extent</em> =E2=80=93 an angle =E2=80=93 determines which p=
art of the circle
is drawn.  If <em>extent</em> is not given, draw the entire circle.  If <em=
>extent</em>
is not a full circle, one endpoint of the arc is the current pen
position.  Draw the arc in counterclockwise direction if <em>radius</em> is
positive, otherwise in clockwise direction.  Finally the direction of the
turtle is changed by the amount of <em>extent</em>.</p>
<p>As the circle is approximated by an inscribed regular polygon, <em>steps=
</em>
determines the number of steps to use.  If not given, it will be
calculated automatically.  May be used to draw regular polygons.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(0.00,0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">0.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">circle</span><span class=3D"p">(</sp=
an><span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(-0.00,0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">0.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">circle</span><span class=3D"p">(</sp=
an><span class=3D"mi">120</span><span class=3D"p">,</span> <span class=3D"m=
i">180</span><span class=3D"p">)</span>  <span class=3D"c1"># draw a semici=
rcle</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(0.00,240.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">180.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.dot">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">dot</code><span class=3D"sig-paren">(</span><em class=3D"sig=
-param"><span class=3D"n">size</span><span class=3D"o">=3D</span><span clas=
s=3D"default_value">None</span></em>, <em class=3D"sig-param"><span class=
=3D"o">*</span><span class=3D"n">color</span></em><span class=3D"sig-paren"=
>)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/=
turtle.html#turtle.dot" title=3D"Permalink to this definition">=C2=B6</a></=
dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>size</strong> =E2=80=93 an integer &gt;=3D 1 (if given)</p><=
/li>
<li><p><strong>color</strong> =E2=80=93 a colorstring or a numeric color tu=
ple</p></li>
</ul>
</dd>
</dl>
<p>Draw a circular dot with diameter <em>size</em>, using <em>color</em>.  =
If <em>size</em> is
not given, the maximum of pensize+4 and 2*pensize is used.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">dot</span><span class=3D"p">()</span=
>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">50</span><span class=3D"p">);</span> <span class=3D"n">tu=
rtle</span><span class=3D"o">.</span><span class=3D"n">dot</span><span clas=
s=3D"p">(</span><span class=3D"mi">20</span><span class=3D"p">,</span> <spa=
n class=3D"s2">"blue"</span><span class=3D"p">);</span> <span class=3D"n">t=
urtle</span><span class=3D"o">.</span><span class=3D"n">fd</span><span clas=
s=3D"p">(</span><span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(100.00,-0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">0.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.stamp">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">stamp</code><span class=3D"sig-paren">(</span><span class=3D=
"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org=
/3/library/turtle.html#turtle.stamp" title=3D"Permalink to this definition"=
>=C2=B6</a></dt>
<dd><p>Stamp a copy of the turtle shape onto the canvas at the current turt=
le
position.  Return a stamp_id for that stamp, which can be used to delete
it by calling <code class=3D"docutils literal notranslate"><span class=3D"p=
re">clearstamp(stamp_id)</span></code>.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">color</span><spa=
n class=3D"p">(</span><span class=3D"s2">"blue"</span><span class=3D"p">)</=
span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">stamp</span><span class=3D"p">()</sp=
an>
<span class=3D"go">11</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">50</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.clearstamp">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">clearstamp</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">stampid</span></em><span class=3D"sig-pare=
n">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/librar=
y/turtle.html#turtle.clearstamp" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>stampid</strong> =E2=80=93 an integer, m=
ust be return value of previous
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.stamp" title=3D"turtle.stamp"><code class=3D"xref py py-f=
unc docutils literal notranslate"><span class=3D"pre">stamp()</span></code>=
</a> call</p>
</dd>
</dl>
<p>Delete stamp with given <em>stampid</em>.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">position</span><=
span class=3D"p">()</span>
<span class=3D"go">(150.00,-0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">color</span><span class=3D"p">(</spa=
n><span class=3D"s2">"blue"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">astamp</span> <spa=
n class=3D"o">=3D</span> <span class=3D"n">turtle</span><span class=3D"o">.=
</span><span class=3D"n">stamp</span><span class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(200.00,-0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">clearstamp</span><span class=3D"p">(=
</span><span class=3D"n">astamp</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(200.00,-0.00)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.clearstamps">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">clearstamps</code><span class=3D"sig-paren">(</span><em clas=
s=3D"sig-param"><span class=3D"n">n</span><span class=3D"o">=3D</span><span=
 class=3D"default_value">None</span></em><span class=3D"sig-paren">)</span>=
<a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.ht=
ml#turtle.clearstamps" title=3D"Permalink to this definition">=C2=B6</a></d=
t>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>n</strong> =E2=80=93 an integer (or <cod=
e class=3D"docutils literal notranslate"><span class=3D"pre">None</span></c=
ode>)</p>
</dd>
</dl>
<p>Delete all or first/last <em>n</em> of turtle=E2=80=99s stamps.  If <em>=
n</em> is <code class=3D"docutils literal notranslate"><span class=3D"pre">=
None</span></code>, delete
all stamps, if <em>n</em> &gt; 0 delete first <em>n</em> stamps, else if <e=
m>n</em> &lt; 0 delete
last <em>n</em> stamps.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k=
">for</span> <span class=3D"n">i</span> <span class=3D"ow">in</span> <span =
class=3D"nb">range</span><span class=3D"p">(</span><span class=3D"mi">8</sp=
an><span class=3D"p">):</span>
<span class=3D"gp">... </span>    <span class=3D"n">turtle</span><span clas=
s=3D"o">.</span><span class=3D"n">stamp</span><span class=3D"p">();</span> =
<span class=3D"n">turtle</span><span class=3D"o">.</span><span class=3D"n">=
fd</span><span class=3D"p">(</span><span class=3D"mi">30</span><span class=
=3D"p">)</span>
<span class=3D"go">13</span>
<span class=3D"go">14</span>
<span class=3D"go">15</span>
<span class=3D"go">16</span>
<span class=3D"go">17</span>
<span class=3D"go">18</span>
<span class=3D"go">19</span>
<span class=3D"go">20</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">clearstamps</span><span class=3D"p">=
(</span><span class=3D"mi">2</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">clearstamps</span><span class=3D"p">=
(</span><span class=3D"o">-</span><span class=3D"mi">2</span><span class=3D=
"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">clearstamps</span><span class=3D"p">=
()</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.undo">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">undo</code><span class=3D"sig-paren">(</span><span class=3D"=
sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/=
3/library/turtle.html#turtle.undo" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Undo (repeatedly) the last turtle action(s).  Number of available
undo actions is determined by the size of the undobuffer.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k=
">for</span> <span class=3D"n">i</span> <span class=3D"ow">in</span> <span =
class=3D"nb">range</span><span class=3D"p">(</span><span class=3D"mi">4</sp=
an><span class=3D"p">):</span>
<span class=3D"gp">... </span>    <span class=3D"n">turtle</span><span clas=
s=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><span =
class=3D"mi">50</span><span class=3D"p">);</span> <span class=3D"n">turtle<=
/span><span class=3D"o">.</span><span class=3D"n">lt</span><span class=3D"p=
">(</span><span class=3D"mi">80</span><span class=3D"p">)</span>
<span class=3D"gp">...</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">for</span> <span c=
lass=3D"n">i</span> <span class=3D"ow">in</span> <span class=3D"nb">range</=
span><span class=3D"p">(</span><span class=3D"mi">8</span><span class=3D"p"=
>):</span>
<span class=3D"gp">... </span>    <span class=3D"n">turtle</span><span clas=
s=3D"o">.</span><span class=3D"n">undo</span><span class=3D"p">()</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.speed">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">speed</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">speed</span><span class=3D"o">=3D</span><span c=
lass=3D"default_value">None</span></em><span class=3D"sig-paren">)</span><a=
 class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html=
#turtle.speed" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>speed</strong> =E2=80=93 an integer in t=
he range 0..10 or a speedstring (see below)</p>
</dd>
</dl>
<p>Set the turtle=E2=80=99s speed to an integer value in the range 0..10.  =
If no
argument is given, return current speed.</p>
<p>If input is a number greater than 10 or smaller than 0.5, speed is set
to 0.  Speedstrings are mapped to speedvalues as follows:</p>
<ul class=3D"simple">
<li><p>=E2=80=9Cfastest=E2=80=9D:  0</p></li>
<li><p>=E2=80=9Cfast=E2=80=9D:  10</p></li>
<li><p>=E2=80=9Cnormal=E2=80=9D:  6</p></li>
<li><p>=E2=80=9Cslow=E2=80=9D:  3</p></li>
<li><p>=E2=80=9Cslowest=E2=80=9D:  1</p></li>
</ul>
<p>Speeds from 1 to 10 enforce increasingly faster animation of line drawin=
g
and turtle turning.</p>
<p>Attention: <em>speed</em> =3D 0 means that <em>no</em> animation takes
place. forward/back makes turtle jump and likewise left/right make the
turtle turn instantly.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">speed</span><spa=
n class=3D"p">()</span>
<span class=3D"go">3</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">speed</span><span class=3D"p">(</spa=
n><span class=3D"s1">'normal'</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">speed</span><span class=3D"p">()</sp=
an>
<span class=3D"go">6</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">speed</span><span class=3D"p">(</spa=
n><span class=3D"mi">9</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">speed</span><span class=3D"p">()</sp=
an>
<span class=3D"go">9</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"tell-turtle-s-state">
<h3>Tell Turtle=E2=80=99s state<a class=3D"headerlink" href=3D"https://docs=
.python.org/3/library/turtle.html#tell-turtle-s-state" title=3D"Permalink t=
o this headline">=C2=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.position">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">position</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.position" title=3D"Permalink to this defin=
ition">=C2=B6</a></dt>
<dt id=3D"turtle.pos">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">pos</code><span class=3D"sig-paren">(</span><span class=3D"s=
ig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3=
/library/turtle.html#turtle.pos" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Return the turtle=E2=80=99s current location (x,y) (as a <a class=3D=
"reference internal" href=3D"https://docs.python.org/3/library/turtle.html#=
turtle.Vec2D" title=3D"turtle.Vec2D"><code class=3D"xref py py-class docuti=
ls literal notranslate"><span class=3D"pre">Vec2D</span></code></a> vector)=
.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">pos</span><span =
class=3D"p">()</span>
<span class=3D"go">(440.00,-0.00)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.towards">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">towards</code><span class=3D"sig-paren">(</span><em class=3D=
"sig-param"><span class=3D"n">x</span></em>, <em class=3D"sig-param"><span =
class=3D"n">y</span><span class=3D"o">=3D</span><span class=3D"default_valu=
e">None</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlink=
" href=3D"https://docs.python.org/3/library/turtle.html#turtle.towards" tit=
le=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>x</strong> =E2=80=93 a number or a pair/vector of numbers or=
 a turtle instance</p></li>
<li><p><strong>y</strong> =E2=80=93 a number if <em>x</em> is a number, els=
e <code class=3D"docutils literal notranslate"><span class=3D"pre">None</sp=
an></code></p></li>
</ul>
</dd>
</dl>
<p>Return the angle between the line from turtle position to position speci=
fied
by (x,y), the vector or the other turtle.  This depends on the turtle=E2=80=
=99s start
orientation which depends on the mode - =E2=80=9Cstandard=E2=80=9D/=E2=80=
=9Dworld=E2=80=9D or =E2=80=9Clogo=E2=80=9D.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">goto</span><span=
 class=3D"p">(</span><span class=3D"mi">10</span><span class=3D"p">,</span>=
 <span class=3D"mi">10</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">towards</span><span class=3D"p">(</s=
pan><span class=3D"mi">0</span><span class=3D"p">,</span><span class=3D"mi"=
>0</span><span class=3D"p">)</span>
<span class=3D"go">225.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.xcor">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">xcor</code><span class=3D"sig-paren">(</span><span class=3D"=
sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/=
3/library/turtle.html#turtle.xcor" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Return the turtle=E2=80=99s x coordinate.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">forward</span><span class=3D"p">(</s=
pan><span class=3D"mi">100</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">pos</span><span class=3D"p">()</span=
>
<span class=3D"go">(64.28,76.60)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">print</span><span=
 class=3D"p">(</span><span class=3D"nb">round</span><span class=3D"p">(</sp=
an><span class=3D"n">turtle</span><span class=3D"o">.</span><span class=3D"=
n">xcor</span><span class=3D"p">(),</span> <span class=3D"mi">5</span><span=
 class=3D"p">))</span>
<span class=3D"go">64.27876</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.ycor">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">ycor</code><span class=3D"sig-paren">(</span><span class=3D"=
sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/=
3/library/turtle.html#turtle.ycor" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Return the turtle=E2=80=99s y coordinate.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">60</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">forward</span><span class=3D"p">(</s=
pan><span class=3D"mi">100</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">print</span><span=
 class=3D"p">(</span><span class=3D"n">turtle</span><span class=3D"o">.</sp=
an><span class=3D"n">pos</span><span class=3D"p">())</span>
<span class=3D"go">(50.00,86.60)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">print</span><span=
 class=3D"p">(</span><span class=3D"nb">round</span><span class=3D"p">(</sp=
an><span class=3D"n">turtle</span><span class=3D"o">.</span><span class=3D"=
n">ycor</span><span class=3D"p">(),</span> <span class=3D"mi">5</span><span=
 class=3D"p">))</span>
<span class=3D"go">86.60254</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.heading">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">heading</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.heading" title=3D"Permalink to this defini=
tion">=C2=B6</a></dt>
<dd><p>Return the turtle=E2=80=99s current heading (value depends on the tu=
rtle mode, see
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.mode" title=3D"turtle.mode"><code class=3D"xref py py-fun=
c docutils literal notranslate"><span class=3D"pre">mode()</span></code></a=
>).</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">67</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">67.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.distance">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">distance</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">x</span></em>, <em class=3D"sig-param"><sp=
an class=3D"n">y</span><span class=3D"o">=3D</span><span class=3D"default_v=
alue">None</span></em><span class=3D"sig-paren">)</span><a class=3D"headerl=
ink" href=3D"https://docs.python.org/3/library/turtle.html#turtle.distance"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>x</strong> =E2=80=93 a number or a pair/vector of numbers or=
 a turtle instance</p></li>
<li><p><strong>y</strong> =E2=80=93 a number if <em>x</em> is a number, els=
e <code class=3D"docutils literal notranslate"><span class=3D"pre">None</sp=
an></code></p></li>
</ul>
</dd>
</dl>
<p>Return the distance from the turtle to (x,y), the given vector, or the g=
iven
other turtle, in turtle step units.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">distance</span><span class=3D"p">(</=
span><span class=3D"mi">30</span><span class=3D"p">,</span><span class=3D"m=
i">40</span><span class=3D"p">)</span>
<span class=3D"go">50.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">distance</span><span class=3D"p">((<=
/span><span class=3D"mi">30</span><span class=3D"p">,</span><span class=3D"=
mi">40</span><span class=3D"p">))</span>
<span class=3D"go">50.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">joe</span> <span c=
lass=3D"o">=3D</span> <span class=3D"n">Turtle</span><span class=3D"p">()</=
span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">joe</span><span cl=
ass=3D"o">.</span><span class=3D"n">forward</span><span class=3D"p">(</span=
><span class=3D"mi">77</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">distance</span><span class=3D"p">(</=
span><span class=3D"n">joe</span><span class=3D"p">)</span>
<span class=3D"go">77.0</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"settings-for-measurement">
<h3>Settings for measurement<a class=3D"headerlink" href=3D"https://docs.py=
thon.org/3/library/turtle.html#settings-for-measurement" title=3D"Permalink=
 to this headline">=C2=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.degrees">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">degrees</code><span class=3D"sig-paren">(</span><em class=3D=
"sig-param"><span class=3D"n">fullcircle</span><span class=3D"o">=3D</span>=
<span class=3D"default_value">360.0</span></em><span class=3D"sig-paren">)<=
/span><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/tur=
tle.html#turtle.degrees" title=3D"Permalink to this definition">=C2=B6</a><=
/dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>fullcircle</strong> =E2=80=93 a number</=
p>
</dd>
</dl>
<p>Set angle measurement units, i.e. set number of =E2=80=9Cdegrees=E2=80=
=9D for a full circle.
Default value is 360 degrees.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">90</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">90.0</span>

<span class=3D"go">Change angle measurement unit to grad (also known as gon=
,</span>
<span class=3D"go">grade, or gradian and equals 1/100-th of the right angle=
.)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">degrees</span><span class=3D"p">(</s=
pan><span class=3D"mf">400.0</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">100.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">degrees</span><span class=3D"p">(</s=
pan><span class=3D"mi">360</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">90.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.radians">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">radians</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.radians" title=3D"Permalink to this defini=
tion">=C2=B6</a></dt>
<dd><p>Set the angle measurement units to radians.  Equivalent to
<code class=3D"docutils literal notranslate"><span class=3D"pre">degrees(2*=
math.pi)</span></code>.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">90</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">90.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">radians</span><span class=3D"p">()</=
span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">1.5707963267948966</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"pen-control">
<h3>Pen control<a class=3D"headerlink" href=3D"https://docs.python.org/3/li=
brary/turtle.html#pen-control" title=3D"Permalink to this headline">=C2=B6<=
/a></h3>
<section id=3D"drawing-state">
<h4>Drawing state<a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#drawing-state" title=3D"Permalink to this headline">=C2=
=B6</a></h4>
<dl class=3D"py function">
<dt id=3D"turtle.pendown">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">pendown</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.pendown" title=3D"Permalink to this defini=
tion">=C2=B6</a></dt>
<dt id=3D"turtle.pd">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">pd</code><span class=3D"sig-paren">(</span><span class=3D"si=
g-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#turtle.pd" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dt id=3D"turtle.down">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">down</code><span class=3D"sig-paren">(</span><span class=3D"=
sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/=
3/library/turtle.html#turtle.down" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Pull the pen down =E2=80=93 drawing when moving.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.penup">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">penup</code><span class=3D"sig-paren">(</span><span class=3D=
"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org=
/3/library/turtle.html#turtle.penup" title=3D"Permalink to this definition"=
>=C2=B6</a></dt>
<dt id=3D"turtle.pu">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">pu</code><span class=3D"sig-paren">(</span><span class=3D"si=
g-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#turtle.pu" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dt id=3D"turtle.up">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">up</code><span class=3D"sig-paren">(</span><span class=3D"si=
g-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#turtle.up" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Pull the pen up =E2=80=93 no drawing when moving.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.pensize">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">pensize</code><span class=3D"sig-paren">(</span><em class=3D=
"sig-param"><span class=3D"n">width</span><span class=3D"o">=3D</span><span=
 class=3D"default_value">None</span></em><span class=3D"sig-paren">)</span>=
<a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.ht=
ml#turtle.pensize" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.width">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">width</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">width</span><span class=3D"o">=3D</span><span c=
lass=3D"default_value">None</span></em><span class=3D"sig-paren">)</span><a=
 class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html=
#turtle.width" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>width</strong> =E2=80=93 a positive numb=
er</p>
</dd>
</dl>
<p>Set the line thickness to <em>width</em> or return it.  If resizemode is=
 set to
=E2=80=9Cauto=E2=80=9D and turtleshape is a polygon, that polygon is drawn =
with the same line
thickness.  If no argument is given, the current pensize is returned.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">pensize</span><s=
pan class=3D"p">()</span>
<span class=3D"go">1</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">pensize</span><span class=3D"p">(</s=
pan><span class=3D"mi">10</span><span class=3D"p">)</span>   <span class=3D=
"c1"># from here on lines of width 10 are drawn</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.pen">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">pen</code><span class=3D"sig-paren">(</span><em class=3D"sig=
-param"><span class=3D"n">pen</span><span class=3D"o">=3D</span><span class=
=3D"default_value">None</span></em>, <em class=3D"sig-param"><span class=3D=
"o">**</span><span class=3D"n">pendict</span></em><span class=3D"sig-paren"=
>)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/=
turtle.html#turtle.pen" title=3D"Permalink to this definition">=C2=B6</a></=
dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>pen</strong> =E2=80=93 a dictionary with some or all of the =
below listed keys</p></li>
<li><p><strong>pendict</strong> =E2=80=93 one or more keyword-arguments wit=
h the below listed keys as keywords</p></li>
</ul>
</dd>
</dl>
<p>Return or set the pen=E2=80=99s attributes in a =E2=80=9Cpen-dictionary=
=E2=80=9D with the following
key/value pairs:</p>
<ul class=3D"simple">
<li><p>=E2=80=9Cshown=E2=80=9D: True/False</p></li>
<li><p>=E2=80=9Cpendown=E2=80=9D: True/False</p></li>
<li><p>=E2=80=9Cpencolor=E2=80=9D: color-string or color-tuple</p></li>
<li><p>=E2=80=9Cfillcolor=E2=80=9D: color-string or color-tuple</p></li>
<li><p>=E2=80=9Cpensize=E2=80=9D: positive number</p></li>
<li><p>=E2=80=9Cspeed=E2=80=9D: number in range 0..10</p></li>
<li><p>=E2=80=9Cresizemode=E2=80=9D: =E2=80=9Cauto=E2=80=9D or =E2=80=9Cuse=
r=E2=80=9D or =E2=80=9Cnoresize=E2=80=9D</p></li>
<li><p>=E2=80=9Cstretchfactor=E2=80=9D: (positive number, positive number)<=
/p></li>
<li><p>=E2=80=9Coutline=E2=80=9D: positive number</p></li>
<li><p>=E2=80=9Ctilt=E2=80=9D: number</p></li>
</ul>
<p>This dictionary can be used as argument for a subsequent call to <a clas=
s=3D"reference internal" href=3D"https://docs.python.org/3/library/turtle.h=
tml#turtle.pen" title=3D"turtle.pen"><code class=3D"xref py py-func docutil=
s literal notranslate"><span class=3D"pre">pen()</span></code></a>
to restore the former pen-state.  Moreover one or more of these attributes
can be provided as keyword-arguments.  This can be used to set several pen
attributes in one statement.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">pen</span><span =
class=3D"p">(</span><span class=3D"n">fillcolor</span><span class=3D"o">=3D=
</span><span class=3D"s2">"black"</span><span class=3D"p">,</span> <span cl=
ass=3D"n">pencolor</span><span class=3D"o">=3D</span><span class=3D"s2">"re=
d"</span><span class=3D"p">,</span> <span class=3D"n">pensize</span><span c=
lass=3D"o">=3D</span><span class=3D"mi">10</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">sorted</span><spa=
n class=3D"p">(</span><span class=3D"n">turtle</span><span class=3D"o">.</s=
pan><span class=3D"n">pen</span><span class=3D"p">()</span><span class=3D"o=
">.</span><span class=3D"n">items</span><span class=3D"p">())</span>
<span class=3D"go">[('fillcolor', 'black'), ('outline', 1), ('pencolor', 'r=
ed'),</span>
<span class=3D"go"> ('pendown', True), ('pensize', 10), ('resizemode', 'nor=
esize'),</span>
<span class=3D"go"> ('shearfactor', 0.0), ('shown', True), ('speed', 9),</s=
pan>
<span class=3D"go"> ('stretchfactor', (1.0, 1.0)), ('tilt', 0.0)]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">penstate</span><sp=
an class=3D"o">=3D</span><span class=3D"n">turtle</span><span class=3D"o">.=
</span><span class=3D"n">pen</span><span class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">color</span><span class=3D"p">(</spa=
n><span class=3D"s2">"yellow"</span><span class=3D"p">,</span> <span class=
=3D"s2">""</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">penup</span><span class=3D"p">()</sp=
an>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">sorted</span><spa=
n class=3D"p">(</span><span class=3D"n">turtle</span><span class=3D"o">.</s=
pan><span class=3D"n">pen</span><span class=3D"p">()</span><span class=3D"o=
">.</span><span class=3D"n">items</span><span class=3D"p">())[:</span><span=
 class=3D"mi">3</span><span class=3D"p">]</span>
<span class=3D"go">[('fillcolor', ''), ('outline', 1), ('pencolor', 'yellow=
')]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">pen</span><span class=3D"p">(</span>=
<span class=3D"n">penstate</span><span class=3D"p">,</span> <span class=3D"=
n">fillcolor</span><span class=3D"o">=3D</span><span class=3D"s2">"green"</=
span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">sorted</span><spa=
n class=3D"p">(</span><span class=3D"n">turtle</span><span class=3D"o">.</s=
pan><span class=3D"n">pen</span><span class=3D"p">()</span><span class=3D"o=
">.</span><span class=3D"n">items</span><span class=3D"p">())[:</span><span=
 class=3D"mi">3</span><span class=3D"p">]</span>
<span class=3D"go">[('fillcolor', 'green'), ('outline', 1), ('pencolor', 'r=
ed')]</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.isdown">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">isdown</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.isdown" title=3D"Permalink to this definit=
ion">=C2=B6</a></dt>
<dd><p>Return <code class=3D"docutils literal notranslate"><span class=3D"p=
re">True</span></code> if pen is down, <code class=3D"docutils literal notr=
anslate"><span class=3D"pre">False</span></code> if it=E2=80=99s up.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">penup</span><spa=
n class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">isdown</span><span class=3D"p">()</s=
pan>
<span class=3D"go">False</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">pendown</span><span class=3D"p">()</=
span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">isdown</span><span class=3D"p">()</s=
pan>
<span class=3D"go">True</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"color-control">
<h4>Color control<a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#color-control" title=3D"Permalink to this headline">=C2=
=B6</a></h4>
<dl class=3D"py function">
<dt id=3D"turtle.pencolor">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">pencolor</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"o">*</span><span class=3D"n">args</span></em>=
<span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://d=
ocs.python.org/3/library/turtle.html#turtle.pencolor" title=3D"Permalink to=
 this definition">=C2=B6</a></dt>
<dd><p>Return or set the pencolor.</p>
<p>Four input formats are allowed:</p>
<dl class=3D"simple">
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">pencol=
or()</span></code></dt><dd><p>Return the current pencolor as color specific=
ation string or
as a tuple (see example).  May be used as input to another
color/pencolor/fillcolor call.</p>
</dd>
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">pencol=
or(colorstring)</span></code></dt><dd><p>Set pencolor to <em>colorstring</e=
m>, which is a Tk color specification string,
such as <code class=3D"docutils literal notranslate"><span class=3D"pre">"r=
ed"</span></code>, <code class=3D"docutils literal notranslate"><span class=
=3D"pre">"yellow"</span></code>, or <code class=3D"docutils literal notrans=
late"><span class=3D"pre">"#33cc8c"</span></code>.</p>
</dd>
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">pencol=
or((r,</span> <span class=3D"pre">g,</span> <span class=3D"pre">b))</span><=
/code></dt><dd><p>Set pencolor to the RGB color represented by the tuple of=
 <em>r</em>, <em>g</em>, and
<em>b</em>.  Each of <em>r</em>, <em>g</em>, and <em>b</em> must be in the =
range 0..colormode, where
colormode is either 1.0 or 255 (see <a class=3D"reference internal" href=3D=
"https://docs.python.org/3/library/turtle.html#turtle.colormode" title=3D"t=
urtle.colormode"><code class=3D"xref py py-func docutils literal notranslat=
e"><span class=3D"pre">colormode()</span></code></a>).</p>
</dd>
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">pencol=
or(r,</span> <span class=3D"pre">g,</span> <span class=3D"pre">b)</span></c=
ode></dt><dd><p>Set pencolor to the RGB color represented by <em>r</em>, <e=
m>g</em>, and <em>b</em>.  Each of
<em>r</em>, <em>g</em>, and <em>b</em> must be in the range 0..colormode.</=
p>
</dd>
</dl>
<p>If turtleshape is a polygon, the outline of that polygon is drawn with t=
he
newly set pencolor.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><pre><span></span><span class=3D"go"> &gt;&gt;&gt; =
colormode()</span>
<span class=3D"go"> 1.0</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor()</span>
<span class=3D"go"> 'red'</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor("brown")</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor()</span>
<span class=3D"go"> 'brown'</span>
<span class=3D"go"> &gt;&gt;&gt; tup =3D (0.2, 0.8, 0.55)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor(tup)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor()</span>
<span class=3D"go"> (0.2, 0.8, 0.5490196078431373)</span>
<span class=3D"go"> &gt;&gt;&gt; colormode(255)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor()</span>
<span class=3D"go"> (51.0, 204.0, 140.0)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor('#32c18f')</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor()</span>
<span class=3D"go"> (50.0, 193.0, 143.0)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.fillcolor">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">fillcolor</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"o">*</span><span class=3D"n">args</span></em>=
<span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://d=
ocs.python.org/3/library/turtle.html#turtle.fillcolor" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><p>Return or set the fillcolor.</p>
<p>Four input formats are allowed:</p>
<dl class=3D"simple">
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">fillco=
lor()</span></code></dt><dd><p>Return the current fillcolor as color specif=
ication string, possibly
in tuple format (see example).  May be used as input to another
color/pencolor/fillcolor call.</p>
</dd>
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">fillco=
lor(colorstring)</span></code></dt><dd><p>Set fillcolor to <em>colorstring<=
/em>, which is a Tk color specification string,
such as <code class=3D"docutils literal notranslate"><span class=3D"pre">"r=
ed"</span></code>, <code class=3D"docutils literal notranslate"><span class=
=3D"pre">"yellow"</span></code>, or <code class=3D"docutils literal notrans=
late"><span class=3D"pre">"#33cc8c"</span></code>.</p>
</dd>
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">fillco=
lor((r,</span> <span class=3D"pre">g,</span> <span class=3D"pre">b))</span>=
</code></dt><dd><p>Set fillcolor to the RGB color represented by the tuple =
of <em>r</em>, <em>g</em>, and
<em>b</em>.  Each of <em>r</em>, <em>g</em>, and <em>b</em> must be in the =
range 0..colormode, where
colormode is either 1.0 or 255 (see <a class=3D"reference internal" href=3D=
"https://docs.python.org/3/library/turtle.html#turtle.colormode" title=3D"t=
urtle.colormode"><code class=3D"xref py py-func docutils literal notranslat=
e"><span class=3D"pre">colormode()</span></code></a>).</p>
</dd>
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">fillco=
lor(r,</span> <span class=3D"pre">g,</span> <span class=3D"pre">b)</span></=
code></dt><dd><p>Set fillcolor to the RGB color represented by <em>r</em>, =
<em>g</em>, and <em>b</em>.  Each of
<em>r</em>, <em>g</em>, and <em>b</em> must be in the range 0..colormode.</=
p>
</dd>
</dl>
<p>If turtleshape is a polygon, the interior of that polygon is drawn
with the newly set fillcolor.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><pre><span></span><span class=3D"go"> &gt;&gt;&gt; =
turtle.fillcolor("violet")</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.fillcolor()</span>
<span class=3D"go"> 'violet'</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.pencolor()</span>
<span class=3D"go"> (50.0, 193.0, 143.0)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.fillcolor((50, 193, 143))  # Intege=
rs, not floats</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.fillcolor()</span>
<span class=3D"go"> (50.0, 193.0, 143.0)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.fillcolor('#ffffff')</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.fillcolor()</span>
<span class=3D"go"> (255.0, 255.0, 255.0)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.color">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">color</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"o">*</span><span class=3D"n">args</span></em><span=
 class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.p=
ython.org/3/library/turtle.html#turtle.color" title=3D"Permalink to this de=
finition">=C2=B6</a></dt>
<dd><p>Return or set pencolor and fillcolor.</p>
<p>Several input formats are allowed.  They use 0 to 3 arguments as
follows:</p>
<dl class=3D"simple">
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">color(=
)</span></code></dt><dd><p>Return the current pencolor and the current fill=
color as a pair of color
specification strings or tuples as returned by <a class=3D"reference intern=
al" href=3D"https://docs.python.org/3/library/turtle.html#turtle.pencolor" =
title=3D"turtle.pencolor"><code class=3D"xref py py-func docutils literal n=
otranslate"><span class=3D"pre">pencolor()</span></code></a> and
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.fillcolor" title=3D"turtle.fillcolor"><code class=3D"xref=
 py py-func docutils literal notranslate"><span class=3D"pre">fillcolor()</=
span></code></a>.</p>
</dd>
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">color(=
colorstring)</span></code>, <code class=3D"docutils literal notranslate"><s=
pan class=3D"pre">color((r,g,b))</span></code>, <code class=3D"docutils lit=
eral notranslate"><span class=3D"pre">color(r,g,b)</span></code></dt><dd><p=
>Inputs as in <a class=3D"reference internal" href=3D"https://docs.python.o=
rg/3/library/turtle.html#turtle.pencolor" title=3D"turtle.pencolor"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">p=
encolor()</span></code></a>, set both, fillcolor and pencolor, to the
given value.</p>
</dd>
<dt><code class=3D"docutils literal notranslate"><span class=3D"pre">color(=
colorstring1,</span> <span class=3D"pre">colorstring2)</span></code>, <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">color((r1,g1,b1=
),</span> <span class=3D"pre">(r2,g2,b2))</span></code></dt><dd><p>Equivale=
nt to <code class=3D"docutils literal notranslate"><span class=3D"pre">penc=
olor(colorstring1)</span></code> and <code class=3D"docutils literal notran=
slate"><span class=3D"pre">fillcolor(colorstring2)</span></code>
and analogously if the other input format is used.</p>
</dd>
</dl>
<p>If turtleshape is a polygon, outline and interior of that polygon is dra=
wn
with the newly set colors.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><pre><span></span><span class=3D"go"> &gt;&gt;&gt; =
turtle.color("red", "green")</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.color()</span>
<span class=3D"go"> ('red', 'green')</span>
<span class=3D"go"> &gt;&gt;&gt; color("#285078", "#a0c8f0")</span>
<span class=3D"go"> &gt;&gt;&gt; color()</span>
<span class=3D"go"> ((40.0, 80.0, 120.0), (160.0, 200.0, 240.0))</span>
</pre></div>
</div>
</dd></dl>

<p>See also: Screen method <a class=3D"reference internal" href=3D"https://=
docs.python.org/3/library/turtle.html#turtle.colormode" title=3D"turtle.col=
ormode"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">colormode()</span></code></a>.</p>
</section>
<section id=3D"filling">
<h4>Filling<a class=3D"headerlink" href=3D"https://docs.python.org/3/librar=
y/turtle.html#filling" title=3D"Permalink to this headline">=C2=B6</a></h4>
<dl class=3D"py function">
<dt id=3D"turtle.filling">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">filling</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.filling" title=3D"Permalink to this defini=
tion">=C2=B6</a></dt>
<dd><p>Return fillstate (<code class=3D"docutils literal notranslate"><span=
 class=3D"pre">True</span></code> if filling, <code class=3D"docutils liter=
al notranslate"><span class=3D"pre">False</span></code> else).</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><pre><span></span><span class=3D"go"> &gt;&gt;&gt; =
turtle.begin_fill()</span>
<span class=3D"go"> &gt;&gt;&gt; if turtle.filling():</span>
<span class=3D"go"> ...    turtle.pensize(5)</span>
<span class=3D"go"> ... else:</span>
<span class=3D"go"> ...    turtle.pensize(3)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.begin_fill">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">begin_fill</code><span class=3D"sig-paren">(</span><span cla=
ss=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.pytho=
n.org/3/library/turtle.html#turtle.begin_fill" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dd><p>To be called just before drawing a shape to be filled.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.end_fill">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">end_fill</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.end_fill" title=3D"Permalink to this defin=
ition">=C2=B6</a></dt>
<dd><p>Fill the shape drawn after the last call to <a class=3D"reference in=
ternal" href=3D"https://docs.python.org/3/library/turtle.html#turtle.begin_=
fill" title=3D"turtle.begin_fill"><code class=3D"xref py py-func docutils l=
iteral notranslate"><span class=3D"pre">begin_fill()</span></code></a>.</p>
<p>Whether or not overlap regions for self-intersecting polygons
or multiple shapes are filled depends on the operating system graphics,
type of overlap, and number of overlaps.  For example, the Turtle star
above may be either all yellow or have some white regions.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">color</span><spa=
n class=3D"p">(</span><span class=3D"s2">"black"</span><span class=3D"p">,<=
/span> <span class=3D"s2">"red"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">begin_fill</span><span class=3D"p">(=
)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">circle</span><span class=3D"p">(</sp=
an><span class=3D"mi">80</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">end_fill</span><span class=3D"p">()<=
/span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"more-drawing-control">
<h4>More drawing control<a class=3D"headerlink" href=3D"https://docs.python=
.org/3/library/turtle.html#more-drawing-control" title=3D"Permalink to this=
 headline">=C2=B6</a></h4>
<dl class=3D"py function">
<dt id=3D"turtle.reset">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">reset</code><span class=3D"sig-paren">(</span><span class=3D=
"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org=
/3/library/turtle.html#turtle.reset" title=3D"Permalink to this definition"=
>=C2=B6</a></dt>
<dd><p>Delete the turtle=E2=80=99s drawings from the screen, re-center the =
turtle and set
variables to the default values.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">goto</span><span=
 class=3D"p">(</span><span class=3D"mi">0</span><span class=3D"p">,</span><=
span class=3D"o">-</span><span class=3D"mi">22</span><span class=3D"p">)</s=
pan>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">100</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(0.00,-22.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">100.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">reset</span><span class=3D"p">()</sp=
an>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">position</span><span class=3D"p">()<=
/span>
<span class=3D"go">(0.00,0.00)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">heading</span><span class=3D"p">()</=
span>
<span class=3D"go">0.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.clear">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">clear</code><span class=3D"sig-paren">(</span><span class=3D=
"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org=
/3/library/turtle.html#turtle.clear" title=3D"Permalink to this definition"=
>=C2=B6</a></dt>
<dd><p>Delete the turtle=E2=80=99s drawings from the screen.  Do not move t=
urtle.  State and
position of the turtle as well as drawings of other turtles are not affecte=
d.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.write">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">write</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">arg</span></em>, <em class=3D"sig-param"><span =
class=3D"n">move</span><span class=3D"o">=3D</span><span class=3D"default_v=
alue">False</span></em>, <em class=3D"sig-param"><span class=3D"n">align</s=
pan><span class=3D"o">=3D</span><span class=3D"default_value">'left'</span>=
</em>, <em class=3D"sig-param"><span class=3D"n">font</span><span class=3D"=
o">=3D</span><span class=3D"default_value">('Arial', 8, 'normal')</span></e=
m><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https:/=
/docs.python.org/3/library/turtle.html#turtle.write" title=3D"Permalink to =
this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>arg</strong> =E2=80=93 object to be written to the TurtleScr=
een</p></li>
<li><p><strong>move</strong> =E2=80=93 True/False</p></li>
<li><p><strong>align</strong> =E2=80=93 one of the strings =E2=80=9Cleft=E2=
=80=9D, =E2=80=9Ccenter=E2=80=9D or right=E2=80=9D</p></li>
<li><p><strong>font</strong> =E2=80=93 a triple (fontname, fontsize, fontty=
pe)</p></li>
</ul>
</dd>
</dl>
<p>Write text - the string representation of <em>arg</em> - at the current =
turtle
position according to <em>align</em> (=E2=80=9Cleft=E2=80=9D, =E2=80=9Ccent=
er=E2=80=9D or =E2=80=9Cright=E2=80=9D) and with the given
font.  If <em>move</em> is true, the pen is moved to the bottom-right corne=
r of the
text.  By default, <em>move</em> is <code class=3D"docutils literal notrans=
late"><span class=3D"pre">False</span></code>.</p>
<div class=3D"doctest highlight-default notranslate" style=3D"position: rel=
ative;"><div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide t=
he prompts and output" style=3D"cursor: pointer; position: absolute; top: 0=
px; right: 0px; border-color: rgb(170, 204, 153); border-style: solid; bord=
er-width: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-l=
eft: 0.2em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;=
&gt;</span><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span c=
lass=3D"n">turtle</span><span class=3D"o">.</span><span class=3D"n">write</=
span><span class=3D"p">(</span><span class=3D"s2">"Home =3D "</span><span c=
lass=3D"p">,</span> <span class=3D"kc">True</span><span class=3D"p">,</span=
> <span class=3D"n">align</span><span class=3D"o">=3D</span><span class=3D"=
s2">"center"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">write</span><span class=3D"p">((</sp=
an><span class=3D"mi">0</span><span class=3D"p">,</span><span class=3D"mi">=
0</span><span class=3D"p">),</span> <span class=3D"kc">True</span><span cla=
ss=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

</section>
</section>
<section id=3D"turtle-state">
<h3>Turtle state<a class=3D"headerlink" href=3D"https://docs.python.org/3/l=
ibrary/turtle.html#turtle-state" title=3D"Permalink to this headline">=C2=
=B6</a></h3>
<section id=3D"visibility">
<h4>Visibility<a class=3D"headerlink" href=3D"https://docs.python.org/3/lib=
rary/turtle.html#visibility" title=3D"Permalink to this headline">=C2=B6</a=
></h4>
<dl class=3D"py function">
<dt id=3D"turtle.hideturtle">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">hideturtle</code><span class=3D"sig-paren">(</span><span cla=
ss=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.pytho=
n.org/3/library/turtle.html#turtle.hideturtle" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dt id=3D"turtle.ht">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">ht</code><span class=3D"sig-paren">(</span><span class=3D"si=
g-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#turtle.ht" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Make the turtle invisible.  It=E2=80=99s a good idea to do this whil=
e you=E2=80=99re in the
middle of doing some complex drawing, because hiding the turtle speeds up t=
he
drawing observably.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">hideturtle</span=
><span class=3D"p">()</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.showturtle">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">showturtle</code><span class=3D"sig-paren">(</span><span cla=
ss=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.pytho=
n.org/3/library/turtle.html#turtle.showturtle" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dt id=3D"turtle.st">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">st</code><span class=3D"sig-paren">(</span><span class=3D"si=
g-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#turtle.st" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Make the turtle visible.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">showturtle</span=
><span class=3D"p">()</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.isvisible">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">isvisible</code><span class=3D"sig-paren">(</span><span clas=
s=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python=
.org/3/library/turtle.html#turtle.isvisible" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dd><p>Return <code class=3D"docutils literal notranslate"><span class=3D"p=
re">True</span></code> if the Turtle is shown, <code class=3D"docutils lite=
ral notranslate"><span class=3D"pre">False</span></code> if it=E2=80=99s hi=
dden.</p>
<div class=3D"doctest highlight-default notranslate" style=3D"position: rel=
ative;"><div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide t=
he prompts and output" style=3D"cursor: pointer; position: absolute; top: 0=
px; right: 0px; border-color: rgb(170, 204, 153); border-style: solid; bord=
er-width: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-l=
eft: 0.2em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;=
&gt;</span><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span c=
lass=3D"n">turtle</span><span class=3D"o">.</span><span class=3D"n">hidetur=
tle</span><span class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">isvisible</span><span class=3D"p">()=
</span>
<span class=3D"go">False</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">showturtle</span><span class=3D"p">(=
)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">isvisible</span><span class=3D"p">()=
</span>
<span class=3D"go">True</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"appearance">
<h4>Appearance<a class=3D"headerlink" href=3D"https://docs.python.org/3/lib=
rary/turtle.html#appearance" title=3D"Permalink to this headline">=C2=B6</a=
></h4>
<dl class=3D"py function">
<dt id=3D"turtle.shape">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">shape</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">name</span><span class=3D"o">=3D</span><span cl=
ass=3D"default_value">None</span></em><span class=3D"sig-paren">)</span><a =
class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html#=
turtle.shape" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>name</strong> =E2=80=93 a string which i=
s a valid shapename</p>
</dd>
</dl>
<p>Set turtle shape to shape with given <em>name</em> or, if name is not gi=
ven, return
name of current shape.  Shape with <em>name</em> must exist in the TurtleSc=
reen=E2=80=99s
shape dictionary.  Initially there are the following polygon shapes: =E2=80=
=9Carrow=E2=80=9D,
=E2=80=9Cturtle=E2=80=9D, =E2=80=9Ccircle=E2=80=9D, =E2=80=9Csquare=E2=80=
=9D, =E2=80=9Ctriangle=E2=80=9D, =E2=80=9Cclassic=E2=80=9D.  To learn about=
 how to
deal with shapes see Screen method <a class=3D"reference internal" href=3D"=
https://docs.python.org/3/library/turtle.html#turtle.register_shape" title=
=3D"turtle.register_shape"><code class=3D"xref py py-func docutils literal =
notranslate"><span class=3D"pre">register_shape()</span></code></a>.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">shape</span><spa=
n class=3D"p">()</span>
<span class=3D"go">'classic'</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shape</span><span class=3D"p">(</spa=
n><span class=3D"s2">"turtle"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shape</span><span class=3D"p">()</sp=
an>
<span class=3D"go">'turtle'</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.resizemode">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">resizemode</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">rmode</span><span class=3D"o">=3D</span><s=
pan class=3D"default_value">None</span></em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle=
.html#turtle.resizemode" title=3D"Permalink to this definition">=C2=B6</a><=
/dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>rmode</strong> =E2=80=93 one of the stri=
ngs =E2=80=9Cauto=E2=80=9D, =E2=80=9Cuser=E2=80=9D, =E2=80=9Cnoresize=E2=80=
=9D</p>
</dd>
</dl>
<p>Set resizemode to one of the values: =E2=80=9Cauto=E2=80=9D, =E2=80=9Cus=
er=E2=80=9D, =E2=80=9Cnoresize=E2=80=9D.  If <em>rmode</em>
is not given, return current resizemode.  Different resizemodes have the
following effects:</p>
<ul class=3D"simple">
<li><p>=E2=80=9Cauto=E2=80=9D: adapts the appearance of the turtle correspo=
nding to the value of pensize.</p></li>
<li><p>=E2=80=9Cuser=E2=80=9D: adapts the appearance of the turtle accordin=
g to the values of
stretchfactor and outlinewidth (outline), which are set by
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.shapesize" title=3D"turtle.shapesize"><code class=3D"xref=
 py py-func docutils literal notranslate"><span class=3D"pre">shapesize()</=
span></code></a>.</p></li>
<li><p>=E2=80=9Cnoresize=E2=80=9D: no adaption of the turtle=E2=80=99s appe=
arance takes place.</p></li>
</ul>
<p><code class=3D"docutils literal notranslate"><span class=3D"pre">resizem=
ode("user")</span></code> is called by <a class=3D"reference internal" href=
=3D"https://docs.python.org/3/library/turtle.html#turtle.shapesize" title=
=3D"turtle.shapesize"><code class=3D"xref py py-func docutils literal notra=
nslate"><span class=3D"pre">shapesize()</span></code></a> when used with ar=
guments.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">resizemode</span=
><span class=3D"p">()</span>
<span class=3D"go">'noresize'</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">resizemode</span><span class=3D"p">(=
</span><span class=3D"s2">"auto"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">resizemode</span><span class=3D"p">(=
)</span>
<span class=3D"go">'auto'</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.shapesize">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">shapesize</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">stretch_wid</span><span class=3D"o">=3D</s=
pan><span class=3D"default_value">None</span></em>, <em class=3D"sig-param"=
><span class=3D"n">stretch_len</span><span class=3D"o">=3D</span><span clas=
s=3D"default_value">None</span></em>, <em class=3D"sig-param"><span class=
=3D"n">outline</span><span class=3D"o">=3D</span><span class=3D"default_val=
ue">None</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlin=
k" href=3D"https://docs.python.org/3/library/turtle.html#turtle.shapesize" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.turtlesize">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">turtlesize</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">stretch_wid</span><span class=3D"o">=3D</s=
pan><span class=3D"default_value">None</span></em>, <em class=3D"sig-param"=
><span class=3D"n">stretch_len</span><span class=3D"o">=3D</span><span clas=
s=3D"default_value">None</span></em>, <em class=3D"sig-param"><span class=
=3D"n">outline</span><span class=3D"o">=3D</span><span class=3D"default_val=
ue">None</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlin=
k" href=3D"https://docs.python.org/3/library/turtle.html#turtle.turtlesize"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>stretch_wid</strong> =E2=80=93 positive number</p></li>
<li><p><strong>stretch_len</strong> =E2=80=93 positive number</p></li>
<li><p><strong>outline</strong> =E2=80=93 positive number</p></li>
</ul>
</dd>
</dl>
<p>Return or set the pen=E2=80=99s attributes x/y-stretchfactors and/or out=
line.  Set
resizemode to =E2=80=9Cuser=E2=80=9D.  If and only if resizemode is set to =
=E2=80=9Cuser=E2=80=9D, the turtle
will be displayed stretched according to its stretchfactors: <em>stretch_wi=
d</em> is
stretchfactor perpendicular to its orientation, <em>stretch_len</em> is
stretchfactor in direction of its orientation, <em>outline</em> determines =
the width
of the shapes=E2=80=99s outline.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">shapesize</span>=
<span class=3D"p">()</span>
<span class=3D"go">(1.0, 1.0, 1)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">resizemode</span><span class=3D"p">(=
</span><span class=3D"s2">"user"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapesize</span><span class=3D"p">(<=
/span><span class=3D"mi">5</span><span class=3D"p">,</span> <span class=3D"=
mi">5</span><span class=3D"p">,</span> <span class=3D"mi">12</span><span cl=
ass=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapesize</span><span class=3D"p">()=
</span>
<span class=3D"go">(5, 5, 12)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapesize</span><span class=3D"p">(<=
/span><span class=3D"n">outline</span><span class=3D"o">=3D</span><span cla=
ss=3D"mi">8</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapesize</span><span class=3D"p">()=
</span>
<span class=3D"go">(5, 5, 8)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.shearfactor">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">shearfactor</code><span class=3D"sig-paren">(</span><em clas=
s=3D"sig-param"><span class=3D"n">shear</span><span class=3D"o">=3D</span><=
span class=3D"default_value">None</span></em><span class=3D"sig-paren">)</s=
pan><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtl=
e.html#turtle.shearfactor" title=3D"Permalink to this definition">=C2=B6</a=
></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>shear</strong> =E2=80=93 number (optiona=
l)</p>
</dd>
</dl>
<p>Set or return the current shearfactor. Shear the turtleshape according t=
o
the given shearfactor shear, which is the tangent of the shear angle.
Do <em>not</em> change the turtle=E2=80=99s heading (direction of movement)=
.
If shear is not given: return the current shearfactor, i. e. the
tangent of the shear angle, by which lines parallel to the
heading of the turtle are sheared.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><pre><span></span><span class=3D"go"> &gt;&gt;&gt; =
turtle.shape("circle")</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.shapesize(5,2)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.shearfactor(0.5)</span>
<span class=3D"go"> &gt;&gt;&gt; turtle.shearfactor()</span>
<span class=3D"go"> 0.5</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.tilt">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">tilt</code><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n">angle</span></em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle=
.html#turtle.tilt" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>angle</strong> =E2=80=93 a number</p>
</dd>
</dl>
<p>Rotate the turtleshape by <em>angle</em> from its current tilt-angle, bu=
t do <em>not</em>
change the turtle=E2=80=99s heading (direction of movement).</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">reset</span><spa=
n class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shape</span><span class=3D"p">(</spa=
n><span class=3D"s2">"circle"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapesize</span><span class=3D"p">(<=
/span><span class=3D"mi">5</span><span class=3D"p">,</span><span class=3D"m=
i">2</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">tilt</span><span class=3D"p">(</span=
><span class=3D"mi">30</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">tilt</span><span class=3D"p">(</span=
><span class=3D"mi">30</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">50</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.settiltangle">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">settiltangle</code><span class=3D"sig-paren">(</span><em cla=
ss=3D"sig-param"><span class=3D"n">angle</span></em><span class=3D"sig-pare=
n">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/librar=
y/turtle.html#turtle.settiltangle" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>angle</strong> =E2=80=93 a number</p>
</dd>
</dl>
<p>Rotate the turtleshape to point in the direction specified by <em>angle<=
/em>,
regardless of its current tilt-angle.  <em>Do not</em> change the turtle=E2=
=80=99s heading
(direction of movement).</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">reset</span><spa=
n class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shape</span><span class=3D"p">(</spa=
n><span class=3D"s2">"circle"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapesize</span><span class=3D"p">(<=
/span><span class=3D"mi">5</span><span class=3D"p">,</span><span class=3D"m=
i">2</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">settiltangle</span><span class=3D"p"=
>(</span><span class=3D"mi">45</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">settiltangle</span><span class=3D"p"=
>(</span><span class=3D"o">-</span><span class=3D"mi">45</span><span class=
=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">50</span><span class=3D"p">)</span>
</pre></div>
</div>
<div class=3D"deprecated">
<p><span class=3D"versionmodified deprecated">Deprecated since version 3.1.=
</span></p>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.tiltangle">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">tiltangle</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">angle</span><span class=3D"o">=3D</span><s=
pan class=3D"default_value">None</span></em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle=
.html#turtle.tiltangle" title=3D"Permalink to this definition">=C2=B6</a></=
dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>angle</strong> =E2=80=93 a number (optio=
nal)</p>
</dd>
</dl>
<p>Set or return the current tilt-angle. If angle is given, rotate the
turtleshape to point in the direction specified by angle,
regardless of its current tilt-angle. Do <em>not</em> change the turtle=E2=
=80=99s
heading (direction of movement).
If angle is not given: return the current tilt-angle, i. e. the angle
between the orientation of the turtleshape and the heading of the
turtle (its direction of movement).</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">reset</span><spa=
n class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shape</span><span class=3D"p">(</spa=
n><span class=3D"s2">"circle"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapesize</span><span class=3D"p">(<=
/span><span class=3D"mi">5</span><span class=3D"p">,</span><span class=3D"m=
i">2</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">tilt</span><span class=3D"p">(</span=
><span class=3D"mi">45</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">tiltangle</span><span class=3D"p">()=
</span>
<span class=3D"go">45.0</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.shapetransform">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">shapetransform</code><span class=3D"sig-paren">(</span><em c=
lass=3D"sig-param"><span class=3D"n">t11</span><span class=3D"o">=3D</span>=
<span class=3D"default_value">None</span></em>, <em class=3D"sig-param"><sp=
an class=3D"n">t12</span><span class=3D"o">=3D</span><span class=3D"default=
_value">None</span></em>, <em class=3D"sig-param"><span class=3D"n">t21</sp=
an><span class=3D"o">=3D</span><span class=3D"default_value">None</span></e=
m>, <em class=3D"sig-param"><span class=3D"n">t22</span><span class=3D"o">=
=3D</span><span class=3D"default_value">None</span></em><span class=3D"sig-=
paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/li=
brary/turtle.html#turtle.shapetransform" title=3D"Permalink to this definit=
ion">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>t11</strong> =E2=80=93 a number (optional)</p></li>
<li><p><strong>t12</strong> =E2=80=93 a number (optional)</p></li>
<li><p><strong>t21</strong> =E2=80=93 a number (optional)</p></li>
<li><p><strong>t12</strong> =E2=80=93 a number (optional)</p></li>
</ul>
</dd>
</dl>
<p>Set or return the current transformation matrix of the turtle shape.</p>
<p>If none of the matrix elements are given, return the transformation
matrix as a tuple of 4 elements.
Otherwise set the given elements and transform the turtleshape
according to the matrix consisting of first row t11, t12 and
second row t21, t22. The determinant t11 * t22 - t12 * t21 must not be
zero, otherwise an error is raised.
Modify stretchfactor, shearfactor and tiltangle according to the
given matrix.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span> <span class=3D"o">=3D</span> <span class=3D"n">Turtle</span=
><span class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shape</span><span class=3D"p">(</spa=
n><span class=3D"s2">"square"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapesize</span><span class=3D"p">(<=
/span><span class=3D"mi">4</span><span class=3D"p">,</span><span class=3D"m=
i">2</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shearfactor</span><span class=3D"p">=
(</span><span class=3D"o">-</span><span class=3D"mf">0.5</span><span class=
=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapetransform</span><span class=3D"=
p">()</span>
<span class=3D"go">(4.0, -1.0, -0.0, 2.0)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.get_shapepoly">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">get_shapepoly</code><span class=3D"sig-paren">(</span><span =
class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.get_shapepoly" title=3D"Permalink to =
this definition">=C2=B6</a></dt>
<dd><p>Return the current shape polygon as tuple of coordinate pairs. This
can be used to define a new shape or components of a compound shape.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">shape</span><spa=
n class=3D"p">(</span><span class=3D"s2">"square"</span><span class=3D"p">)=
</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">shapetransform</span><span class=3D"=
p">(</span><span class=3D"mi">4</span><span class=3D"p">,</span> <span clas=
s=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">,</span> <span=
 class=3D"mi">0</span><span class=3D"p">,</span> <span class=3D"mi">2</span=
><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">get_shapepoly</span><span class=3D"p=
">()</span>
<span class=3D"go">((50, -20), (30, 20), (-50, 20), (-30, -20))</span>
</pre></div>
</div>
</dd></dl>

</section>
</section>
<section id=3D"using-events">
<h3>Using events<a class=3D"headerlink" href=3D"https://docs.python.org/3/l=
ibrary/turtle.html#using-events" title=3D"Permalink to this headline">=C2=
=B6</a></h3>
<dl class=3D"py function">
<dt>
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">onclick</code><span class=3D"sig-paren">(</span><em class=3D=
"sig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param"><spa=
n class=3D"n">btn</span><span class=3D"o">=3D</span><span class=3D"default_=
value">1</span></em>, <em class=3D"sig-param"><span class=3D"n">add</span><=
span class=3D"o">=3D</span><span class=3D"default_value">None</span></em><s=
pan class=3D"sig-paren">)</span></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>fun</strong> =E2=80=93 a function with two arguments which w=
ill be called with the
coordinates of the clicked point on the canvas</p></li>
<li><p><strong>btn</strong> =E2=80=93 number of the mouse-button, defaults =
to 1 (left mouse button)</p></li>
<li><p><strong>add</strong> =E2=80=93 <code class=3D"docutils literal notra=
nslate"><span class=3D"pre">True</span></code> or <code class=3D"docutils l=
iteral notranslate"><span class=3D"pre">False</span></code> =E2=80=93 if <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">True</span><=
/code>, a new binding will be
added, otherwise it will replace a former binding</p></li>
</ul>
</dd>
</dl>
<p>Bind <em>fun</em> to mouse-click events on this turtle.  If <em>fun</em>=
 is <code class=3D"docutils literal notranslate"><span class=3D"pre">None</=
span></code>,
existing bindings are removed.  Example for the anonymous turtle, i.e. the
procedural way:</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k=
">def</span> <span class=3D"nf">turn</span><span class=3D"p">(</span><span =
class=3D"n">x</span><span class=3D"p">,</span> <span class=3D"n">y</span><s=
pan class=3D"p">):</span>
<span class=3D"gp">... </span>    <span class=3D"n">left</span><span class=
=3D"p">(</span><span class=3D"mi">180</span><span class=3D"p">)</span>
<span class=3D"gp">...</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">onclick</span><spa=
n class=3D"p">(</span><span class=3D"n">turn</span><span class=3D"p">)</spa=
n>  <span class=3D"c1"># Now clicking into the turtle will turn it.</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">onclick</span><spa=
n class=3D"p">(</span><span class=3D"kc">None</span><span class=3D"p">)</sp=
an>  <span class=3D"c1"># event-binding will be removed</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.onrelease">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">onrelease</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param"><=
span class=3D"n">btn</span><span class=3D"o">=3D</span><span class=3D"defau=
lt_value">1</span></em>, <em class=3D"sig-param"><span class=3D"n">add</spa=
n><span class=3D"o">=3D</span><span class=3D"default_value">None</span></em=
><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://=
docs.python.org/3/library/turtle.html#turtle.onrelease" title=3D"Permalink =
to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>fun</strong> =E2=80=93 a function with two arguments which w=
ill be called with the
coordinates of the clicked point on the canvas</p></li>
<li><p><strong>btn</strong> =E2=80=93 number of the mouse-button, defaults =
to 1 (left mouse button)</p></li>
<li><p><strong>add</strong> =E2=80=93 <code class=3D"docutils literal notra=
nslate"><span class=3D"pre">True</span></code> or <code class=3D"docutils l=
iteral notranslate"><span class=3D"pre">False</span></code> =E2=80=93 if <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">True</span><=
/code>, a new binding will be
added, otherwise it will replace a former binding</p></li>
</ul>
</dd>
</dl>
<p>Bind <em>fun</em> to mouse-button-release events on this turtle.  If <em=
>fun</em> is
<code class=3D"docutils literal notranslate"><span class=3D"pre">None</span=
></code>, existing bindings are removed.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k=
">class</span> <span class=3D"nc">MyTurtle</span><span class=3D"p">(</span>=
<span class=3D"n">Turtle</span><span class=3D"p">):</span>
<span class=3D"gp">... </span>    <span class=3D"k">def</span> <span class=
=3D"nf">glow</span><span class=3D"p">(</span><span class=3D"bp">self</span>=
<span class=3D"p">,</span><span class=3D"n">x</span><span class=3D"p">,</sp=
an><span class=3D"n">y</span><span class=3D"p">):</span>
<span class=3D"gp">... </span>        <span class=3D"bp">self</span><span c=
lass=3D"o">.</span><span class=3D"n">fillcolor</span><span class=3D"p">(</s=
pan><span class=3D"s2">"red"</span><span class=3D"p">)</span>
<span class=3D"gp">... </span>    <span class=3D"k">def</span> <span class=
=3D"nf">unglow</span><span class=3D"p">(</span><span class=3D"bp">self</spa=
n><span class=3D"p">,</span><span class=3D"n">x</span><span class=3D"p">,</=
span><span class=3D"n">y</span><span class=3D"p">):</span>
<span class=3D"gp">... </span>        <span class=3D"bp">self</span><span c=
lass=3D"o">.</span><span class=3D"n">fillcolor</span><span class=3D"p">(</s=
pan><span class=3D"s2">""</span><span class=3D"p">)</span>
<span class=3D"gp">...</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span> <spa=
n class=3D"o">=3D</span> <span class=3D"n">MyTurtle</span><span class=3D"p"=
>()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">onclick</span><span class=3D"p">(</s=
pan><span class=3D"n">turtle</span><span class=3D"o">.</span><span class=3D=
"n">glow</span><span class=3D"p">)</span>     <span class=3D"c1"># clicking=
 on turtle turns fillcolor red,</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">onrelease</span><span class=3D"p">(<=
/span><span class=3D"n">turtle</span><span class=3D"o">.</span><span class=
=3D"n">unglow</span><span class=3D"p">)</span> <span class=3D"c1"># releasi=
ng turns it to transparent.</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.ondrag">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">ondrag</code><span class=3D"sig-paren">(</span><em class=3D"=
sig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param"><span=
 class=3D"n">btn</span><span class=3D"o">=3D</span><span class=3D"default_v=
alue">1</span></em>, <em class=3D"sig-param"><span class=3D"n">add</span><s=
pan class=3D"o">=3D</span><span class=3D"default_value">None</span></em><sp=
an class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs=
.python.org/3/library/turtle.html#turtle.ondrag" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>fun</strong> =E2=80=93 a function with two arguments which w=
ill be called with the
coordinates of the clicked point on the canvas</p></li>
<li><p><strong>btn</strong> =E2=80=93 number of the mouse-button, defaults =
to 1 (left mouse button)</p></li>
<li><p><strong>add</strong> =E2=80=93 <code class=3D"docutils literal notra=
nslate"><span class=3D"pre">True</span></code> or <code class=3D"docutils l=
iteral notranslate"><span class=3D"pre">False</span></code> =E2=80=93 if <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">True</span><=
/code>, a new binding will be
added, otherwise it will replace a former binding</p></li>
</ul>
</dd>
</dl>
<p>Bind <em>fun</em> to mouse-move events on this turtle.  If <em>fun</em> =
is <code class=3D"docutils literal notranslate"><span class=3D"pre">None</s=
pan></code>,
existing bindings are removed.</p>
<p>Remark: Every sequence of mouse-move-events on a turtle is preceded by a
mouse-click event on that turtle.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">ondrag</span><sp=
an class=3D"p">(</span><span class=3D"n">turtle</span><span class=3D"o">.</=
span><span class=3D"n">goto</span><span class=3D"p">)</span>
</pre></div>
</div>
<p>Subsequently, clicking and dragging the Turtle will move it across
the screen thereby producing handdrawings (if pen is down).</p>
</dd></dl>

</section>
<section id=3D"special-turtle-methods">
<h3>Special Turtle methods<a class=3D"headerlink" href=3D"https://docs.pyth=
on.org/3/library/turtle.html#special-turtle-methods" title=3D"Permalink to =
this headline">=C2=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.begin_poly">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">begin_poly</code><span class=3D"sig-paren">(</span><span cla=
ss=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.pytho=
n.org/3/library/turtle.html#turtle.begin_poly" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dd><p>Start recording the vertices of a polygon.  Current turtle position =
is first
vertex of polygon.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.end_poly">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">end_poly</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.end_poly" title=3D"Permalink to this defin=
ition">=C2=B6</a></dt>
<dd><p>Stop recording the vertices of a polygon.  Current turtle position i=
s last
vertex of polygon.  This will be connected with the first vertex.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.get_poly">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">get_poly</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.get_poly" title=3D"Permalink to this defin=
ition">=C2=B6</a></dt>
<dd><p>Return the last recorded polygon.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">home</span><span=
 class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">begin_poly</span><span class=3D"p">(=
)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">100</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">20</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">30</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">left</span><span class=3D"p">(</span=
><span class=3D"mi">60</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><=
span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">end_poly</span><span class=3D"p">()<=
/span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">p</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"n">turtle</span><span class=3D"o">.</spa=
n><span class=3D"n">get_poly</span><span class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">register_shape</sp=
an><span class=3D"p">(</span><span class=3D"s2">"myFavouriteShape"</span><s=
pan class=3D"p">,</span> <span class=3D"n">p</span><span class=3D"p">)</spa=
n>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.clone">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">clone</code><span class=3D"sig-paren">(</span><span class=3D=
"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org=
/3/library/turtle.html#turtle.clone" title=3D"Permalink to this definition"=
>=C2=B6</a></dt>
<dd><p>Create and return a clone of the turtle with same position, heading =
and
turtle properties.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">mick</span> <span class=3D"o">=3D</span> <span class=3D"n">Turtle</span><=
span class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">joe</span> <span c=
lass=3D"o">=3D</span> <span class=3D"n">mick</span><span class=3D"o">.</spa=
n><span class=3D"n">clone</span><span class=3D"p">()</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.getturtle">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">getturtle</code><span class=3D"sig-paren">(</span><span clas=
s=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python=
.org/3/library/turtle.html#turtle.getturtle" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dt id=3D"turtle.getpen">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">getpen</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.getpen" title=3D"Permalink to this definit=
ion">=C2=B6</a></dt>
<dd><p>Return the Turtle object itself.  Only reasonable use: as a function=
 to
return the =E2=80=9Canonymous turtle=E2=80=9D:</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">pet</span> <span class=3D"o">=3D</span> <span class=3D"n">getturtle</span=
><span class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">pet</span><span cl=
ass=3D"o">.</span><span class=3D"n">fd</span><span class=3D"p">(</span><spa=
n class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">pet</span>
<span class=3D"go">&lt;turtle.Turtle object at 0x...&gt;</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.getscreen">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">getscreen</code><span class=3D"sig-paren">(</span><span clas=
s=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python=
.org/3/library/turtle.html#turtle.getscreen" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dd><p>Return the <a class=3D"reference internal" href=3D"https://docs.pyth=
on.org/3/library/turtle.html#turtle.TurtleScreen" title=3D"turtle.TurtleScr=
een"><code class=3D"xref py py-class docutils literal notranslate"><span cl=
ass=3D"pre">TurtleScreen</span></code></a> object the turtle is drawing on.
TurtleScreen methods can then be called for that object.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">ts</span> <span class=3D"o">=3D</span> <span class=3D"n">turtle</span><sp=
an class=3D"o">.</span><span class=3D"n">getscreen</span><span class=3D"p">=
()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">ts</span>
<span class=3D"go">&lt;turtle._Screen object at 0x...&gt;</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">ts</span><span cla=
ss=3D"o">.</span><span class=3D"n">bgcolor</span><span class=3D"p">(</span>=
<span class=3D"s2">"pink"</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.setundobuffer">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">setundobuffer</code><span class=3D"sig-paren">(</span><em cl=
ass=3D"sig-param"><span class=3D"n">size</span></em><span class=3D"sig-pare=
n">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/librar=
y/turtle.html#turtle.setundobuffer" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>size</strong> =E2=80=93 an integer or <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">None</span><=
/code></p>
</dd>
</dl>
<p>Set or disable undobuffer.  If <em>size</em> is an integer, an empty und=
obuffer of
given size is installed.  <em>size</em> gives the maximum number of turtle =
actions
that can be undone by the <a class=3D"reference internal" href=3D"https://d=
ocs.python.org/3/library/turtle.html#turtle.undo" title=3D"turtle.undo"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">undo()</span></code></a> method/function.  If <em>size</em> is
<code class=3D"docutils literal notranslate"><span class=3D"pre">None</span=
></code>, the undobuffer is disabled.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">turtle</span><span class=3D"o">.</span><span class=3D"n">setundobuffer</s=
pan><span class=3D"p">(</span><span class=3D"mi">42</span><span class=3D"p"=
>)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.undobufferentries">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">undobufferentries</code><span class=3D"sig-paren">(</span><s=
pan class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://doc=
s.python.org/3/library/turtle.html#turtle.undobufferentries" title=3D"Perma=
link to this definition">=C2=B6</a></dt>
<dd><p>Return number of entries in the undobuffer.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k=
">while</span> <span class=3D"n">undobufferentries</span><span class=3D"p">=
():</span>
<span class=3D"gp">... </span>    <span class=3D"n">undo</span><span class=
=3D"p">()</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"compound-shapes">
<span id=3D"compoundshapes"></span><h3>Compound shapes<a class=3D"headerlin=
k" href=3D"https://docs.python.org/3/library/turtle.html#compound-shapes" t=
itle=3D"Permalink to this headline">=C2=B6</a></h3>
<p>To use compound turtle shapes, which consist of several polygons of diff=
erent
color, you must use the helper class <a class=3D"reference internal" href=
=3D"https://docs.python.org/3/library/turtle.html#turtle.Shape" title=3D"tu=
rtle.Shape"><code class=3D"xref py py-class docutils literal notranslate"><=
span class=3D"pre">Shape</span></code></a> explicitly as described
below:</p>
<ol class=3D"arabic">
<li><p>Create an empty Shape object of type =E2=80=9Ccompound=E2=80=9D.</p>=
</li>
<li><p>Add as many components to this object as desired, using the
<code class=3D"xref py py-meth docutils literal notranslate"><span class=3D=
"pre">addcomponent()</span></code> method.</p>
<p>For example:</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">s</span> <span class=3D"o">=3D</span> <span class=3D"n">Shape</span><span=
 class=3D"p">(</span><span class=3D"s2">"compound"</span><span class=3D"p">=
)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">poly1</span> <span=
 class=3D"o">=3D</span> <span class=3D"p">((</span><span class=3D"mi">0</sp=
an><span class=3D"p">,</span><span class=3D"mi">0</span><span class=3D"p">)=
,(</span><span class=3D"mi">10</span><span class=3D"p">,</span><span class=
=3D"o">-</span><span class=3D"mi">5</span><span class=3D"p">),(</span><span=
 class=3D"mi">0</span><span class=3D"p">,</span><span class=3D"mi">10</span=
><span class=3D"p">),(</span><span class=3D"o">-</span><span class=3D"mi">1=
0</span><span class=3D"p">,</span><span class=3D"o">-</span><span class=3D"=
mi">5</span><span class=3D"p">))</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">s</span><span clas=
s=3D"o">.</span><span class=3D"n">addcomponent</span><span class=3D"p">(</s=
pan><span class=3D"n">poly1</span><span class=3D"p">,</span> <span class=3D=
"s2">"red"</span><span class=3D"p">,</span> <span class=3D"s2">"blue"</span=
><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">poly2</span> <span=
 class=3D"o">=3D</span> <span class=3D"p">((</span><span class=3D"mi">0</sp=
an><span class=3D"p">,</span><span class=3D"mi">0</span><span class=3D"p">)=
,(</span><span class=3D"mi">10</span><span class=3D"p">,</span><span class=
=3D"o">-</span><span class=3D"mi">5</span><span class=3D"p">),(</span><span=
 class=3D"o">-</span><span class=3D"mi">10</span><span class=3D"p">,</span>=
<span class=3D"o">-</span><span class=3D"mi">5</span><span class=3D"p">))</=
span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">s</span><span clas=
s=3D"o">.</span><span class=3D"n">addcomponent</span><span class=3D"p">(</s=
pan><span class=3D"n">poly2</span><span class=3D"p">,</span> <span class=3D=
"s2">"blue"</span><span class=3D"p">,</span> <span class=3D"s2">"red"</span=
><span class=3D"p">)</span>
</pre></div>
</div>
</li>
<li><p>Now add the Shape to the Screen=E2=80=99s shapelist and use it:</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">register_shape</span><span class=3D"p">(</span><span class=3D"s2">"myshap=
e"</span><span class=3D"p">,</span> <span class=3D"n">s</span><span class=
=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">shape</span><span =
class=3D"p">(</span><span class=3D"s2">"myshape"</span><span class=3D"p">)<=
/span>
</pre></div>
</div>
</li>
</ol>
<div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>The <a class=3D"reference internal" href=3D"https://docs.python.org/3/li=
brary/turtle.html#turtle.Shape" title=3D"turtle.Shape"><code class=3D"xref =
py py-class docutils literal notranslate"><span class=3D"pre">Shape</span><=
/code></a> class is used internally by the <a class=3D"reference internal" =
href=3D"https://docs.python.org/3/library/turtle.html#turtle.register_shape=
" title=3D"turtle.register_shape"><code class=3D"xref py py-func docutils l=
iteral notranslate"><span class=3D"pre">register_shape()</span></code></a>
method in different ways.  The application programmer has to deal with the
Shape class <em>only</em> when using compound shapes like shown above!</p>
</div>
</section>
</section>
<section id=3D"methods-of-turtlescreen-screen-and-corresponding-functions">
<h2>Methods of TurtleScreen/Screen and corresponding functions<a class=3D"h=
eaderlink" href=3D"https://docs.python.org/3/library/turtle.html#methods-of=
-turtlescreen-screen-and-corresponding-functions" title=3D"Permalink to thi=
s headline">=C2=B6</a></h2>
<p>Most of the examples in this section refer to a TurtleScreen instance ca=
lled
<code class=3D"docutils literal notranslate"><span class=3D"pre">screen</sp=
an></code>.</p>
<section id=3D"window-control">
<h3>Window control<a class=3D"headerlink" href=3D"https://docs.python.org/3=
/library/turtle.html#window-control" title=3D"Permalink to this headline">=
=C2=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.bgcolor">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">bgcolor</code><span class=3D"sig-paren">(</span><em class=3D=
"sig-param"><span class=3D"o">*</span><span class=3D"n">args</span></em><sp=
an class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs=
.python.org/3/library/turtle.html#turtle.bgcolor" title=3D"Permalink to thi=
s definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>args</strong> =E2=80=93 a color string o=
r three numbers in the range 0..colormode or a
3-tuple of such numbers</p>
</dd>
</dl>
<p>Set or return background color of the TurtleScreen.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">bgcolor</span><s=
pan class=3D"p">(</span><span class=3D"s2">"orange"</span><span class=3D"p"=
>)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">bgcolor</span><span class=3D"p">()</=
span>
<span class=3D"go">'orange'</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">bgcolor</span><span class=3D"p">(</s=
pan><span class=3D"s2">"#800080"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">bgcolor</span><span class=3D"p">()</=
span>
<span class=3D"go">(128.0, 0.0, 128.0)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.bgpic">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">bgpic</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">picname</span><span class=3D"o">=3D</span><span=
 class=3D"default_value">None</span></em><span class=3D"sig-paren">)</span>=
<a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.ht=
ml#turtle.bgpic" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>picname</strong> =E2=80=93 a string, nam=
e of a gif-file or <code class=3D"docutils literal notranslate"><span class=
=3D"pre">"nopic"</span></code>, or <code class=3D"docutils literal notransl=
ate"><span class=3D"pre">None</span></code></p>
</dd>
</dl>
<p>Set background image or return name of current backgroundimage.  If <em>=
picname</em>
is a filename, set the corresponding image as background.  If <em>picname</=
em> is
<code class=3D"docutils literal notranslate"><span class=3D"pre">"nopic"</s=
pan></code>, delete background image, if present.  If <em>picname</em> is <=
code class=3D"docutils literal notranslate"><span class=3D"pre">None</span>=
</code>,
return the filename of the current backgroundimage.</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">screen</span><span class=3D"o">.</span><span class=3D"n">bgpic</span><sp=
an class=3D"p">()</span>
<span class=3D"go">'nopic'</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">bgpic</span><span class=3D"p">(</spa=
n><span class=3D"s2">"landscape.gif"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">bgpic</span><span class=3D"p">()</sp=
an>
<span class=3D"go">"landscape.gif"</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt>
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">clear</code><span class=3D"sig-paren">(</span><span class=3D=
"sig-paren">)</span></dt>
<dd><div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>This TurtleScreen method is available as a global function only under th=
e
name <code class=3D"docutils literal notranslate"><span class=3D"pre">clear=
screen</span></code>.  The global function <code class=3D"docutils literal =
notranslate"><span class=3D"pre">clear</span></code> is a different one
derived from the Turtle method <code class=3D"docutils literal notranslate"=
><span class=3D"pre">clear</span></code>.</p>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.clearscreen">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">clearscreen</code><span class=3D"sig-paren">(</span><span cl=
ass=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.pyth=
on.org/3/library/turtle.html#turtle.clearscreen" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><p>Delete all drawings and all turtles from the TurtleScreen.  Reset th=
e now
empty TurtleScreen to its initial state: white background, no background
image, no event bindings and tracing on.</p>
</dd></dl>

<dl class=3D"py function">
<dt>
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">reset</code><span class=3D"sig-paren">(</span><span class=3D=
"sig-paren">)</span></dt>
<dd><div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>This TurtleScreen method is available as a global function only under th=
e
name <code class=3D"docutils literal notranslate"><span class=3D"pre">reset=
screen</span></code>.  The global function <code class=3D"docutils literal =
notranslate"><span class=3D"pre">reset</span></code> is another one
derived from the Turtle method <code class=3D"docutils literal notranslate"=
><span class=3D"pre">reset</span></code>.</p>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.resetscreen">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">resetscreen</code><span class=3D"sig-paren">(</span><span cl=
ass=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.pyth=
on.org/3/library/turtle.html#turtle.resetscreen" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><p>Reset all Turtles on the Screen to their initial state.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.screensize">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">screensize</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">canvwidth</span><span class=3D"o">=3D</spa=
n><span class=3D"default_value">None</span></em>, <em class=3D"sig-param"><=
span class=3D"n">canvheight</span><span class=3D"o">=3D</span><span class=
=3D"default_value">None</span></em>, <em class=3D"sig-param"><span class=3D=
"n">bg</span><span class=3D"o">=3D</span><span class=3D"default_value">None=
</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"https://docs.python.org/3/library/turtle.html#turtle.screensize" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>canvwidth</strong> =E2=80=93 positive integer, new width of =
canvas in pixels</p></li>
<li><p><strong>canvheight</strong> =E2=80=93 positive integer, new height o=
f canvas in pixels</p></li>
<li><p><strong>bg</strong> =E2=80=93 colorstring or color-tuple, new backgr=
ound color</p></li>
</ul>
</dd>
</dl>
<p>If no arguments are given, return current (canvaswidth, canvasheight).  =
Else
resize the canvas the turtles are drawing on.  Do not alter the drawing
window.  To observe hidden parts of the canvas, use the scrollbars. With th=
is
method, one can make visible those parts of a drawing which were outside th=
e
canvas before.</p>
<div class=3D"doctest highlight-default notranslate" style=3D"position: rel=
ative;"><div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide t=
he prompts and output" style=3D"cursor: pointer; position: absolute; top: 0=
px; right: 0px; border-color: rgb(170, 204, 153); border-style: solid; bord=
er-width: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-l=
eft: 0.2em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;=
&gt;</span><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span c=
lass=3D"n">screen</span><span class=3D"o">.</span><span class=3D"n">screens=
ize</span><span class=3D"p">()</span>
<span class=3D"go">(400, 300)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">screensize</span><span class=3D"p">(=
</span><span class=3D"mi">2000</span><span class=3D"p">,</span><span class=
=3D"mi">1500</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">screensize</span><span class=3D"p">(=
)</span>
<span class=3D"go">(2000, 1500)</span>
</pre></div>
</div>
<p>e.g. to search for an erroneously escaped turtle ;-)</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.setworldcoordinates">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">setworldcoordinates</code><span class=3D"sig-paren">(</span>=
<em class=3D"sig-param"><span class=3D"n">llx</span></em>, <em class=3D"sig=
-param"><span class=3D"n">lly</span></em>, <em class=3D"sig-param"><span cl=
ass=3D"n">urx</span></em>, <em class=3D"sig-param"><span class=3D"n">ury</s=
pan></em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"=
https://docs.python.org/3/library/turtle.html#turtle.setworldcoordinates" t=
itle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>llx</strong> =E2=80=93 a number, x-coordinate of lower left =
corner of canvas</p></li>
<li><p><strong>lly</strong> =E2=80=93 a number, y-coordinate of lower left =
corner of canvas</p></li>
<li><p><strong>urx</strong> =E2=80=93 a number, x-coordinate of upper right=
 corner of canvas</p></li>
<li><p><strong>ury</strong> =E2=80=93 a number, y-coordinate of upper right=
 corner of canvas</p></li>
</ul>
</dd>
</dl>
<p>Set up user-defined coordinate system and switch to mode =E2=80=9Cworld=
=E2=80=9D if
necessary.  This performs a <code class=3D"docutils literal notranslate"><s=
pan class=3D"pre">screen.reset()</span></code>.  If mode =E2=80=9Cworld=E2=
=80=9D is already
active, all drawings are redrawn according to the new coordinates.</p>
<p><strong>ATTENTION</strong>: in user-defined coordinate systems angles ma=
y appear
distorted.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">reset</span><spa=
n class=3D"p">()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">setworldcoordinates</span><span clas=
s=3D"p">(</span><span class=3D"o">-</span><span class=3D"mi">50</span><span=
 class=3D"p">,</span><span class=3D"o">-</span><span class=3D"mf">7.5</span=
><span class=3D"p">,</span><span class=3D"mi">50</span><span class=3D"p">,<=
/span><span class=3D"mf">7.5</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">for</span> <span c=
lass=3D"n">_</span> <span class=3D"ow">in</span> <span class=3D"nb">range</=
span><span class=3D"p">(</span><span class=3D"mi">72</span><span class=3D"p=
">):</span>
<span class=3D"gp">... </span>    <span class=3D"n">left</span><span class=
=3D"p">(</span><span class=3D"mi">10</span><span class=3D"p">)</span>
<span class=3D"gp">...</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">for</span> <span c=
lass=3D"n">_</span> <span class=3D"ow">in</span> <span class=3D"nb">range</=
span><span class=3D"p">(</span><span class=3D"mi">8</span><span class=3D"p"=
>):</span>
<span class=3D"gp">... </span>    <span class=3D"n">left</span><span class=
=3D"p">(</span><span class=3D"mi">45</span><span class=3D"p">);</span> <spa=
n class=3D"n">fd</span><span class=3D"p">(</span><span class=3D"mi">2</span=
><span class=3D"p">)</span>   <span class=3D"c1"># a regular octagon</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"animation-control">
<h3>Animation control<a class=3D"headerlink" href=3D"https://docs.python.or=
g/3/library/turtle.html#animation-control" title=3D"Permalink to this headl=
ine">=C2=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.delay">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">delay</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">delay</span><span class=3D"o">=3D</span><span c=
lass=3D"default_value">None</span></em><span class=3D"sig-paren">)</span><a=
 class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html=
#turtle.delay" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>delay</strong> =E2=80=93 positive intege=
r</p>
</dd>
</dl>
<p>Set or return the drawing <em>delay</em> in milliseconds.  (This is appr=
oximately
the time interval between two consecutive canvas updates.)  The longer the
drawing delay, the slower the animation.</p>
<p>Optional argument:</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">delay</span><spa=
n class=3D"p">()</span>
<span class=3D"go">10</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">delay</span><span class=3D"p">(</spa=
n><span class=3D"mi">5</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">delay</span><span class=3D"p">()</sp=
an>
<span class=3D"go">5</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.tracer">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">tracer</code><span class=3D"sig-paren">(</span><em class=3D"=
sig-param"><span class=3D"n">n</span><span class=3D"o">=3D</span><span clas=
s=3D"default_value">None</span></em>, <em class=3D"sig-param"><span class=
=3D"n">delay</span><span class=3D"o">=3D</span><span class=3D"default_value=
">None</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlink"=
 href=3D"https://docs.python.org/3/library/turtle.html#turtle.tracer" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>n</strong> =E2=80=93 nonnegative integer</p></li>
<li><p><strong>delay</strong> =E2=80=93 nonnegative integer</p></li>
</ul>
</dd>
</dl>
<p>Turn turtle animation on/off and set delay for update drawings.  If
<em>n</em> is given, only each n-th regular screen update is really
performed.  (Can be used to accelerate the drawing of complex
graphics.)  When called without arguments, returns the currently
stored value of n. Second argument sets delay value (see
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.delay" title=3D"turtle.delay"><code class=3D"xref py py-f=
unc docutils literal notranslate"><span class=3D"pre">delay()</span></code>=
</a>).</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">tracer</span><sp=
an class=3D"p">(</span><span class=3D"mi">8</span><span class=3D"p">,</span=
> <span class=3D"mi">25</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">dist</span> <span =
class=3D"o">=3D</span> <span class=3D"mi">2</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">for</span> <span c=
lass=3D"n">i</span> <span class=3D"ow">in</span> <span class=3D"nb">range</=
span><span class=3D"p">(</span><span class=3D"mi">200</span><span class=3D"=
p">):</span>
<span class=3D"gp">... </span>    <span class=3D"n">fd</span><span class=3D=
"p">(</span><span class=3D"n">dist</span><span class=3D"p">)</span>
<span class=3D"gp">... </span>    <span class=3D"n">rt</span><span class=3D=
"p">(</span><span class=3D"mi">90</span><span class=3D"p">)</span>
<span class=3D"gp">... </span>    <span class=3D"n">dist</span> <span class=
=3D"o">+=3D</span> <span class=3D"mi">2</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.update">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">update</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.update" title=3D"Permalink to this definit=
ion">=C2=B6</a></dt>
<dd><p>Perform a TurtleScreen update. To be used when tracer is turned off.=
</p>
</dd></dl>

<p>See also the RawTurtle/Turtle method <a class=3D"reference internal" hre=
f=3D"https://docs.python.org/3/library/turtle.html#turtle.speed" title=3D"t=
urtle.speed"><code class=3D"xref py py-func docutils literal notranslate"><=
span class=3D"pre">speed()</span></code></a>.</p>
</section>
<section id=3D"using-screen-events">
<h3>Using screen events<a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#using-screen-events" title=3D"Permalink to this h=
eadline">=C2=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.listen">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">listen</code><span class=3D"sig-paren">(</span><em class=3D"=
sig-param"><span class=3D"n">xdummy</span><span class=3D"o">=3D</span><span=
 class=3D"default_value">None</span></em>, <em class=3D"sig-param"><span cl=
ass=3D"n">ydummy</span><span class=3D"o">=3D</span><span class=3D"default_v=
alue">None</span></em><span class=3D"sig-paren">)</span><a class=3D"headerl=
ink" href=3D"https://docs.python.org/3/library/turtle.html#turtle.listen" t=
itle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set focus on TurtleScreen (in order to collect key-events).  Dummy a=
rguments
are provided in order to be able to pass <a class=3D"reference internal" hr=
ef=3D"https://docs.python.org/3/library/turtle.html#turtle.listen" title=3D=
"turtle.listen"><code class=3D"xref py py-func docutils literal notranslate=
"><span class=3D"pre">listen()</span></code></a> to the onclick method.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.onkey">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">onkey</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param"><span =
class=3D"n">key</span></em><span class=3D"sig-paren">)</span><a class=3D"he=
aderlink" href=3D"https://docs.python.org/3/library/turtle.html#turtle.onke=
y" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.onkeyrelease">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">onkeyrelease</code><span class=3D"sig-paren">(</span><em cla=
ss=3D"sig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param"=
><span class=3D"n">key</span></em><span class=3D"sig-paren">)</span><a clas=
s=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html#turt=
le.onkeyrelease" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>fun</strong> =E2=80=93 a function with no arguments or <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">None</span></co=
de></p></li>
<li><p><strong>key</strong> =E2=80=93 a string: key (e.g. =E2=80=9Ca=E2=80=
=9D) or key-symbol (e.g. =E2=80=9Cspace=E2=80=9D)</p></li>
</ul>
</dd>
</dl>
<p>Bind <em>fun</em> to key-release event of key.  If <em>fun</em> is <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">None</span></co=
de>, event bindings
are removed. Remark: in order to be able to register key-events, TurtleScre=
en
must have the focus. (See method <a class=3D"reference internal" href=3D"ht=
tps://docs.python.org/3/library/turtle.html#turtle.listen" title=3D"turtle.=
listen"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">listen()</span></code></a>.)</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k=
">def</span> <span class=3D"nf">f</span><span class=3D"p">():</span>
<span class=3D"gp">... </span>    <span class=3D"n">fd</span><span class=3D=
"p">(</span><span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">... </span>    <span class=3D"n">lt</span><span class=3D=
"p">(</span><span class=3D"mi">60</span><span class=3D"p">)</span>
<span class=3D"gp">...</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">onkey</span><span class=3D"p">(</spa=
n><span class=3D"n">f</span><span class=3D"p">,</span> <span class=3D"s2">"=
Up"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">listen</span><span class=3D"p">()</s=
pan>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.onkeypress">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">onkeypress</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param"><=
span class=3D"n">key</span><span class=3D"o">=3D</span><span class=3D"defau=
lt_value">None</span></em><span class=3D"sig-paren">)</span><a class=3D"hea=
derlink" href=3D"https://docs.python.org/3/library/turtle.html#turtle.onkey=
press" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>fun</strong> =E2=80=93 a function with no arguments or <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">None</span></co=
de></p></li>
<li><p><strong>key</strong> =E2=80=93 a string: key (e.g. =E2=80=9Ca=E2=80=
=9D) or key-symbol (e.g. =E2=80=9Cspace=E2=80=9D)</p></li>
</ul>
</dd>
</dl>
<p>Bind <em>fun</em> to key-press event of key if key is given,
or to any key-press-event if no key is given.
Remark: in order to be able to register key-events, TurtleScreen
must have focus. (See method <a class=3D"reference internal" href=3D"https:=
//docs.python.org/3/library/turtle.html#turtle.listen" title=3D"turtle.list=
en"><code class=3D"xref py py-func docutils literal notranslate"><span clas=
s=3D"pre">listen()</span></code></a>.)</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k=
">def</span> <span class=3D"nf">f</span><span class=3D"p">():</span>
<span class=3D"gp">... </span>    <span class=3D"n">fd</span><span class=3D=
"p">(</span><span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">...</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">onkey</span><span class=3D"p">(</spa=
n><span class=3D"n">f</span><span class=3D"p">,</span> <span class=3D"s2">"=
Up"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">listen</span><span class=3D"p">()</s=
pan>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.onclick">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">onclick</code><span class=3D"sig-paren">(</span><em class=3D=
"sig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param"><spa=
n class=3D"n">btn</span><span class=3D"o">=3D</span><span class=3D"default_=
value">1</span></em>, <em class=3D"sig-param"><span class=3D"n">add</span><=
span class=3D"o">=3D</span><span class=3D"default_value">None</span></em><s=
pan class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://doc=
s.python.org/3/library/turtle.html#turtle.onclick" title=3D"Permalink to th=
is definition">=C2=B6</a></dt>
<dt id=3D"turtle.onscreenclick">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">onscreenclick</code><span class=3D"sig-paren">(</span><em cl=
ass=3D"sig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param=
"><span class=3D"n">btn</span><span class=3D"o">=3D</span><span class=3D"de=
fault_value">1</span></em>, <em class=3D"sig-param"><span class=3D"n">add</=
span><span class=3D"o">=3D</span><span class=3D"default_value">None</span><=
/em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https=
://docs.python.org/3/library/turtle.html#turtle.onscreenclick" title=3D"Per=
malink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>fun</strong> =E2=80=93 a function with two arguments which w=
ill be called with the
coordinates of the clicked point on the canvas</p></li>
<li><p><strong>btn</strong> =E2=80=93 number of the mouse-button, defaults =
to 1 (left mouse button)</p></li>
<li><p><strong>add</strong> =E2=80=93 <code class=3D"docutils literal notra=
nslate"><span class=3D"pre">True</span></code> or <code class=3D"docutils l=
iteral notranslate"><span class=3D"pre">False</span></code> =E2=80=93 if <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">True</span><=
/code>, a new binding will be
added, otherwise it will replace a former binding</p></li>
</ul>
</dd>
</dl>
<p>Bind <em>fun</em> to mouse-click events on this screen.  If <em>fun</em>=
 is <code class=3D"docutils literal notranslate"><span class=3D"pre">None</=
span></code>,
existing bindings are removed.</p>
<p>Example for a TurtleScreen instance named <code class=3D"docutils litera=
l notranslate"><span class=3D"pre">screen</span></code> and a Turtle instan=
ce
named <code class=3D"docutils literal notranslate"><span class=3D"pre">turt=
le</span></code>:</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">onclick</span><s=
pan class=3D"p">(</span><span class=3D"n">turtle</span><span class=3D"o">.<=
/span><span class=3D"n">goto</span><span class=3D"p">)</span> <span class=
=3D"c1"># Subsequently clicking into the TurtleScreen will</span>
<span class=3D"gp">&gt;&gt;&gt; </span>                            <span cl=
ass=3D"c1"># make the turtle move to the clicked point.</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">onclick</span><span class=3D"p">(</s=
pan><span class=3D"kc">None</span><span class=3D"p">)</span>        <span c=
lass=3D"c1"># remove event binding again</span>
</pre></div>
</div>
<div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>This TurtleScreen method is available as a global function only under th=
e
name <code class=3D"docutils literal notranslate"><span class=3D"pre">onscr=
eenclick</span></code>.  The global function <code class=3D"docutils litera=
l notranslate"><span class=3D"pre">onclick</span></code> is another one
derived from the Turtle method <code class=3D"docutils literal notranslate"=
><span class=3D"pre">onclick</span></code>.</p>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.ontimer">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">ontimer</code><span class=3D"sig-paren">(</span><em class=3D=
"sig-param"><span class=3D"n">fun</span></em>, <em class=3D"sig-param"><spa=
n class=3D"n">t</span><span class=3D"o">=3D</span><span class=3D"default_va=
lue">0</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlink"=
 href=3D"https://docs.python.org/3/library/turtle.html#turtle.ontimer" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>fun</strong> =E2=80=93 a function with no arguments</p></li>
<li><p><strong>t</strong> =E2=80=93 a number &gt;=3D 0</p></li>
</ul>
</dd>
</dl>
<p>Install a timer that calls <em>fun</em> after <em>t</em> milliseconds.</=
p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">running</span> <span class=3D"o">=3D</span> <span class=3D"kc">True</span=
>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">def</span> <span c=
lass=3D"nf">f</span><span class=3D"p">():</span>
<span class=3D"gp">... </span>    <span class=3D"k">if</span> <span class=
=3D"n">running</span><span class=3D"p">:</span>
<span class=3D"gp">... </span>        <span class=3D"n">fd</span><span clas=
s=3D"p">(</span><span class=3D"mi">50</span><span class=3D"p">)</span>
<span class=3D"gp">... </span>        <span class=3D"n">lt</span><span clas=
s=3D"p">(</span><span class=3D"mi">60</span><span class=3D"p">)</span>
<span class=3D"gp">... </span>        <span class=3D"n">screen</span><span =
class=3D"o">.</span><span class=3D"n">ontimer</span><span class=3D"p">(</sp=
an><span class=3D"n">f</span><span class=3D"p">,</span> <span class=3D"mi">=
250</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">f</span><span clas=
s=3D"p">()</span>   <span class=3D"c1">### makes the turtle march around</s=
pan>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">running</span> <sp=
an class=3D"o">=3D</span> <span class=3D"kc">False</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.mainloop">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">mainloop</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.mainloop" title=3D"Permalink to this defin=
ition">=C2=B6</a></dt>
<dt id=3D"turtle.done">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">done</code><span class=3D"sig-paren">(</span><span class=3D"=
sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/=
3/library/turtle.html#turtle.done" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Starts event loop - calling Tkinter=E2=80=99s mainloop function.
Must be the last statement in a turtle graphics program.
Must <em>not</em> be used if a script is run from within IDLE in -n mode
(No subprocess) - for interactive use of turtle graphics.</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">screen</span><span class=3D"o">.</span><span class=3D"n">mainloop</span>=
<span class=3D"p">()</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"input-methods">
<h3>Input methods<a class=3D"headerlink" href=3D"https://docs.python.org/3/=
library/turtle.html#input-methods" title=3D"Permalink to this headline">=C2=
=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.textinput">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">textinput</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">title</span></em>, <em class=3D"sig-param"=
><span class=3D"n">prompt</span></em><span class=3D"sig-paren">)</span><a c=
lass=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html#t=
urtle.textinput" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>title</strong> =E2=80=93 string</p></li>
<li><p><strong>prompt</strong> =E2=80=93 string</p></li>
</ul>
</dd>
</dl>
<p>Pop up a dialog window for input of a string. Parameter title is
the title of the dialog window, prompt is a text mostly describing
what information to input.
Return the string input. If the dialog is canceled, return <code class=3D"d=
ocutils literal notranslate"><span class=3D"pre">None</span></code>.</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">screen</span><span class=3D"o">.</span><span class=3D"n">textinput</span=
><span class=3D"p">(</span><span class=3D"s2">"NIM"</span><span class=3D"p"=
>,</span> <span class=3D"s2">"Name of first player:"</span><span class=3D"p=
">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.numinput">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">numinput</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">title</span></em>, <em class=3D"sig-param"=
><span class=3D"n">prompt</span></em>, <em class=3D"sig-param"><span class=
=3D"n">default</span><span class=3D"o">=3D</span><span class=3D"default_val=
ue">None</span></em>, <em class=3D"sig-param"><span class=3D"n">minval</spa=
n><span class=3D"o">=3D</span><span class=3D"default_value">None</span></em=
>, <em class=3D"sig-param"><span class=3D"n">maxval</span><span class=3D"o"=
>=3D</span><span class=3D"default_value">None</span></em><span class=3D"sig=
-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/l=
ibrary/turtle.html#turtle.numinput" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>title</strong> =E2=80=93 string</p></li>
<li><p><strong>prompt</strong> =E2=80=93 string</p></li>
<li><p><strong>default</strong> =E2=80=93 number (optional)</p></li>
<li><p><strong>minval</strong> =E2=80=93 number (optional)</p></li>
<li><p><strong>maxval</strong> =E2=80=93 number (optional)</p></li>
</ul>
</dd>
</dl>
<p>Pop up a dialog window for input of a number. title is the title of the
dialog window, prompt is a text mostly describing what numerical informatio=
n
to input. default: default value, minval: minimum value for input,
maxval: maximum value for input
The number input must be in the range minval .. maxval if these are
given. If not, a hint is issued and the dialog remains open for
correction.
Return the number input. If the dialog is canceled,  return <code class=3D"=
docutils literal notranslate"><span class=3D"pre">None</span></code>.</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">screen</span><span class=3D"o">.</span><span class=3D"n">numinput</span>=
<span class=3D"p">(</span><span class=3D"s2">"Poker"</span><span class=3D"p=
">,</span> <span class=3D"s2">"Your stakes:"</span><span class=3D"p">,</spa=
n> <span class=3D"mi">1000</span><span class=3D"p">,</span> <span class=3D"=
n">minval</span><span class=3D"o">=3D</span><span class=3D"mi">10</span><sp=
an class=3D"p">,</span> <span class=3D"n">maxval</span><span class=3D"o">=
=3D</span><span class=3D"mi">10000</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"settings-and-special-methods">
<h3>Settings and special methods<a class=3D"headerlink" href=3D"https://doc=
s.python.org/3/library/turtle.html#settings-and-special-methods" title=3D"P=
ermalink to this headline">=C2=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.mode">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">mode</code><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n">mode</span><span class=3D"o">=3D</span><span cla=
ss=3D"default_value">None</span></em><span class=3D"sig-paren">)</span><a c=
lass=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html#t=
urtle.mode" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>mode</strong> =E2=80=93 one of the strin=
gs =E2=80=9Cstandard=E2=80=9D, =E2=80=9Clogo=E2=80=9D or =E2=80=9Cworld=E2=
=80=9D</p>
</dd>
</dl>
<p>Set turtle mode (=E2=80=9Cstandard=E2=80=9D, =E2=80=9Clogo=E2=80=9D or =
=E2=80=9Cworld=E2=80=9D) and perform reset.  If mode
is not given, current mode is returned.</p>
<p>Mode =E2=80=9Cstandard=E2=80=9D is compatible with old <a class=3D"refer=
ence internal" href=3D"https://docs.python.org/3/library/turtle.html#module=
-turtle" title=3D"turtle: An educational framework for simple graphics appl=
ications"><code class=3D"xref py py-mod docutils literal notranslate"><span=
 class=3D"pre">turtle</span></code></a>.  Mode =E2=80=9Clogo=E2=80=9D is
compatible with most Logo turtle graphics.  Mode =E2=80=9Cworld=E2=80=9D us=
es user-defined
=E2=80=9Cworld coordinates=E2=80=9D. <strong>Attention</strong>: in this mo=
de angles appear distorted if
<code class=3D"docutils literal notranslate"><span class=3D"pre">x/y</span>=
</code> unit-ratio doesn=E2=80=99t equal 1.</p>
<div class=3D"responsive-table__container"><table class=3D"docutils align-d=
efault">
<colgroup>
<col style=3D"width: 21%">
<col style=3D"width: 45%">
<col style=3D"width: 34%">
</colgroup>
<thead>
<tr class=3D"row-odd"><th class=3D"head"><p>Mode</p></th>
<th class=3D"head"><p>Initial turtle heading</p></th>
<th class=3D"head"><p>positive angles</p></th>
</tr>
</thead>
<tbody>
<tr class=3D"row-even"><td><p>=E2=80=9Cstandard=E2=80=9D</p></td>
<td><p>to the right (east)</p></td>
<td><p>counterclockwise</p></td>
</tr>
<tr class=3D"row-odd"><td><p>=E2=80=9Clogo=E2=80=9D</p></td>
<td><p>upward    (north)</p></td>
<td><p>clockwise</p></td>
</tr>
</tbody>
</table></div>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">mode</span><span class=3D"p">(</span><span class=3D"s2">"logo"</span><spa=
n class=3D"p">)</span>   <span class=3D"c1"># resets turtle heading to nort=
h</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">mode</span><span c=
lass=3D"p">()</span>
<span class=3D"go">'logo'</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.colormode">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">colormode</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">cmode</span><span class=3D"o">=3D</span><s=
pan class=3D"default_value">None</span></em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle=
.html#turtle.colormode" title=3D"Permalink to this definition">=C2=B6</a></=
dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>cmode</strong> =E2=80=93 one of the valu=
es 1.0 or 255</p>
</dd>
</dl>
<p>Return the colormode or set it to 1.0 or 255.  Subsequently <em>r</em>, =
<em>g</em>, <em>b</em>
values of color triples have to be in the range 0..<em>cmode</em>.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">colormode</span>=
<span class=3D"p">(</span><span class=3D"mi">1</span><span class=3D"p">)</s=
pan>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">pencolor</span><span class=3D"p">(</=
span><span class=3D"mi">240</span><span class=3D"p">,</span> <span class=3D=
"mi">160</span><span class=3D"p">,</span> <span class=3D"mi">80</span><span=
 class=3D"p">)</span>
<span class=3D"gt">Traceback (most recent call last):</span>
     <span class=3D"o">...</span>
<span class=3D"gr">TurtleGraphicsError</span><span>: </span><span class=3D"=
n">bad color sequence: (240, 160, 80)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">colormode</span><span class=3D"p">()=
</span>
<span class=3D"go">1.0</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">colormode</span><span class=3D"p">(<=
/span><span class=3D"mi">255</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">colormode</span><span class=3D"p">()=
</span>
<span class=3D"go">255</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">turtle</span><span=
 class=3D"o">.</span><span class=3D"n">pencolor</span><span class=3D"p">(</=
span><span class=3D"mi">240</span><span class=3D"p">,</span><span class=3D"=
mi">160</span><span class=3D"p">,</span><span class=3D"mi">80</span><span c=
lass=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.getcanvas">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">getcanvas</code><span class=3D"sig-paren">(</span><span clas=
s=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python=
.org/3/library/turtle.html#turtle.getcanvas" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dd><p>Return the Canvas of this TurtleScreen.  Useful for insiders who kno=
w what to
do with a Tkinter Canvas.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">cv</span> <span class=3D"o">=3D</span> <span class=3D"n">screen</span><sp=
an class=3D"o">.</span><span class=3D"n">getcanvas</span><span class=3D"p">=
()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">cv</span>
<span class=3D"go">&lt;turtle.ScrolledCanvas object ...&gt;</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.getshapes">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">getshapes</code><span class=3D"sig-paren">(</span><span clas=
s=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python=
.org/3/library/turtle.html#turtle.getshapes" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dd><p>Return a list of names of all currently available turtle shapes.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">getshapes</span>=
<span class=3D"p">()</span>
<span class=3D"go">['arrow', 'blank', 'circle', ..., 'turtle']</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.register_shape">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">register_shape</code><span class=3D"sig-paren">(</span><em c=
lass=3D"sig-param"><span class=3D"n">name</span></em>, <em class=3D"sig-par=
am"><span class=3D"n">shape</span><span class=3D"o">=3D</span><span class=
=3D"default_value">None</span></em><span class=3D"sig-paren">)</span><a cla=
ss=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html#tur=
tle.register_shape" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.addshape">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">addshape</code><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n">name</span></em>, <em class=3D"sig-param">=
<span class=3D"n">shape</span><span class=3D"o">=3D</span><span class=3D"de=
fault_value">None</span></em><span class=3D"sig-paren">)</span><a class=3D"=
headerlink" href=3D"https://docs.python.org/3/library/turtle.html#turtle.ad=
dshape" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>There are three different ways to call this function:</p>
<ol class=3D"arabic">
<li><p><em>name</em> is the name of a gif-file and <em>shape</em> is <code =
class=3D"docutils literal notranslate"><span class=3D"pre">None</span></cod=
e>: Install the
corresponding image shape.</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">screen</span><span class=3D"o">.</span><span class=3D"n">register_shape<=
/span><span class=3D"p">(</span><span class=3D"s2">"turtle.gif"</span><span=
 class=3D"p">)</span>
</pre></div>
</div>
<div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>Image shapes <em>do not</em> rotate when turning the turtle, so they do =
not
display the heading of the turtle!</p>
</div>
</li>
<li><p><em>name</em> is an arbitrary string and <em>shape</em> is a tuple o=
f pairs of
coordinates: Install the corresponding polygon shape.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">register_shape</=
span><span class=3D"p">(</span><span class=3D"s2">"triangle"</span><span cl=
ass=3D"p">,</span> <span class=3D"p">((</span><span class=3D"mi">5</span><s=
pan class=3D"p">,</span><span class=3D"o">-</span><span class=3D"mi">3</spa=
n><span class=3D"p">),</span> <span class=3D"p">(</span><span class=3D"mi">=
0</span><span class=3D"p">,</span><span class=3D"mi">5</span><span class=3D=
"p">),</span> <span class=3D"p">(</span><span class=3D"o">-</span><span cla=
ss=3D"mi">5</span><span class=3D"p">,</span><span class=3D"o">-</span><span=
 class=3D"mi">3</span><span class=3D"p">)))</span>
</pre></div>
</div>
</li>
<li><p><em>name</em> is an arbitrary string and shape is a (compound) <a cl=
ass=3D"reference internal" href=3D"https://docs.python.org/3/library/turtle=
.html#turtle.Shape" title=3D"turtle.Shape"><code class=3D"xref py py-class =
docutils literal notranslate"><span class=3D"pre">Shape</span></code></a>
object: Install the corresponding compound shape.</p></li>
</ol>
<p>Add a turtle shape to TurtleScreen=E2=80=99s shapelist.  Only thusly reg=
istered
shapes can be used by issuing the command <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">shape(shapename)</span></code>.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.turtles">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">turtles</code><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.turtles" title=3D"Permalink to this defini=
tion">=C2=B6</a></dt>
<dd><p>Return the list of turtles on the screen.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k=
">for</span> <span class=3D"n">turtle</span> <span class=3D"ow">in</span> <=
span class=3D"n">screen</span><span class=3D"o">.</span><span class=3D"n">t=
urtles</span><span class=3D"p">():</span>
<span class=3D"gp">... </span>    <span class=3D"n">turtle</span><span clas=
s=3D"o">.</span><span class=3D"n">color</span><span class=3D"p">(</span><sp=
an class=3D"s2">"red"</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.window_height">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">window_height</code><span class=3D"sig-paren">(</span><span =
class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.py=
thon.org/3/library/turtle.html#turtle.window_height" title=3D"Permalink to =
this definition">=C2=B6</a></dt>
<dd><p>Return the height of the turtle window.</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">screen</span><span class=3D"o">.</span><span class=3D"n">window_height</=
span><span class=3D"p">()</span>
<span class=3D"go">480</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.window_width">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">window_width</code><span class=3D"sig-paren">(</span><span c=
lass=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.pyt=
hon.org/3/library/turtle.html#turtle.window_width" title=3D"Permalink to th=
is definition">=C2=B6</a></dt>
<dd><p>Return the width of the turtle window.</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">screen</span><span class=3D"o">.</span><span class=3D"n">window_width</s=
pan><span class=3D"p">()</span>
<span class=3D"go">640</span>
</pre></div>
</div>
</dd></dl>

</section>
<section id=3D"methods-specific-to-screen-not-inherited-from-turtlescreen">
<span id=3D"screenspecific"></span><h3>Methods specific to Screen, not inhe=
rited from TurtleScreen<a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#methods-specific-to-screen-not-inherited-from-tur=
tlescreen" title=3D"Permalink to this headline">=C2=B6</a></h3>
<dl class=3D"py function">
<dt id=3D"turtle.bye">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">bye</code><span class=3D"sig-paren">(</span><span class=3D"s=
ig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3=
/library/turtle.html#turtle.bye" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Shut the turtlegraphics window.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.exitonclick">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">exitonclick</code><span class=3D"sig-paren">(</span><span cl=
ass=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.pyth=
on.org/3/library/turtle.html#turtle.exitonclick" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><p>Bind <code class=3D"docutils literal notranslate"><span class=3D"pre=
">bye()</span></code> method to mouse clicks on the Screen.</p>
<p>If the value =E2=80=9Cusing_IDLE=E2=80=9D in the configuration dictionar=
y is <code class=3D"docutils literal notranslate"><span class=3D"pre">False=
</span></code>
(default value), also enter mainloop.  Remark: If IDLE with the <code class=
=3D"docutils literal notranslate"><span class=3D"pre">-n</span></code> swit=
ch
(no subprocess) is used, this value should be set to <code class=3D"docutil=
s literal notranslate"><span class=3D"pre">True</span></code> in
<code class=3D"file docutils literal notranslate"><span class=3D"pre">turtl=
e.cfg</span></code>.  In this case IDLE=E2=80=99s own mainloop is active al=
so for the
client script.</p>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.setup">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">setup</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">width</span><span class=3D"o">=3D</span><span c=
lass=3D"default_value">_CFG['width']</span></em>, <em class=3D"sig-param"><=
span class=3D"n">height</span><span class=3D"o">=3D</span><span class=3D"de=
fault_value">_CFG['height']</span></em>, <em class=3D"sig-param"><span clas=
s=3D"n">startx</span><span class=3D"o">=3D</span><span class=3D"default_val=
ue">_CFG['leftright']</span></em>, <em class=3D"sig-param"><span class=3D"n=
">starty</span><span class=3D"o">=3D</span><span class=3D"default_value">_C=
FG['topbottom']</span></em><span class=3D"sig-paren">)</span><a class=3D"he=
aderlink" href=3D"https://docs.python.org/3/library/turtle.html#turtle.setu=
p" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set the size and position of the main window.  Default values of arg=
uments
are stored in the configuration dictionary and can be changed via a
<code class=3D"file docutils literal notranslate"><span class=3D"pre">turtl=
e.cfg</span></code> file.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>width</strong> =E2=80=93 if an integer, a size in pixels, if=
 a float, a fraction of the
screen; default is 50% of screen</p></li>
<li><p><strong>height</strong> =E2=80=93 if an integer, the height in pixel=
s, if a float, a fraction of
the screen; default is 75% of screen</p></li>
<li><p><strong>startx</strong> =E2=80=93 if positive, starting position in =
pixels from the left
edge of the screen, if negative from the right edge, if <code class=3D"docu=
tils literal notranslate"><span class=3D"pre">None</span></code>,
center window horizontally</p></li>
<li><p><strong>starty</strong> =E2=80=93 if positive, starting position in =
pixels from the top
edge of the screen, if negative from the bottom edge, if <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">None</span></code>,
center window vertically</p></li>
</ul>
</dd>
</dl>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">setup</span> <sp=
an class=3D"p">(</span><span class=3D"n">width</span><span class=3D"o">=3D<=
/span><span class=3D"mi">200</span><span class=3D"p">,</span> <span class=
=3D"n">height</span><span class=3D"o">=3D</span><span class=3D"mi">200</spa=
n><span class=3D"p">,</span> <span class=3D"n">startx</span><span class=3D"=
o">=3D</span><span class=3D"mi">0</span><span class=3D"p">,</span> <span cl=
ass=3D"n">starty</span><span class=3D"o">=3D</span><span class=3D"mi">0</sp=
an><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span>             <span class=3D"c1"># se=
ts window to 200x200 pixels, in upper left of screen</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">screen</span><span=
 class=3D"o">.</span><span class=3D"n">setup</span><span class=3D"p">(</spa=
n><span class=3D"n">width</span><span class=3D"o">=3D</span><span class=3D"=
mf">.75</span><span class=3D"p">,</span> <span class=3D"n">height</span><sp=
an class=3D"o">=3D</span><span class=3D"mf">0.5</span><span class=3D"p">,</=
span> <span class=3D"n">startx</span><span class=3D"o">=3D</span><span clas=
s=3D"kc">None</span><span class=3D"p">,</span> <span class=3D"n">starty</sp=
an><span class=3D"o">=3D</span><span class=3D"kc">None</span><span class=3D=
"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span>             <span class=3D"c1"># se=
ts window to 75% of screen by 50% of screen and centers</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py function">
<dt id=3D"turtle.title">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">title</code><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n">titlestring</span></em><span class=3D"sig-paren=
">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/library=
/turtle.html#turtle.title" title=3D"Permalink to this definition">=C2=B6</a=
></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>titlestring</strong> =E2=80=93 a string =
that is shown in the titlebar of the turtle
graphics window</p>
</dd>
</dl>
<p>Set title of turtle window to <em>titlestring</em>.</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">screen</span><span class=3D"o">.</span><span class=3D"n">title</span><spa=
n class=3D"p">(</span><span class=3D"s2">"Welcome to the turtle zoo!"</span=
><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

</section>
</section>
<section id=3D"public-classes">
<h2>Public classes<a class=3D"headerlink" href=3D"https://docs.python.org/3=
/library/turtle.html#public-classes" title=3D"Permalink to this headline">=
=C2=B6</a></h2>
<dl class=3D"py class">
<dt id=3D"turtle.RawTurtle">
<em class=3D"property">class </em><code class=3D"sig-prename descclassname"=
>turtle.</code><code class=3D"sig-name descname">RawTurtle</code><span clas=
s=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n">canvas</s=
pan></em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"=
https://docs.python.org/3/library/turtle.html#turtle.RawTurtle" title=3D"Pe=
rmalink to this definition">=C2=B6</a></dt>
<dt id=3D"turtle.RawPen">
<em class=3D"property">class </em><code class=3D"sig-prename descclassname"=
>turtle.</code><code class=3D"sig-name descname">RawPen</code><span class=
=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n">canvas</sp=
an></em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"h=
ttps://docs.python.org/3/library/turtle.html#turtle.RawPen" title=3D"Permal=
ink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>canvas</strong> =E2=80=93 a <code class=
=3D"xref py py-class docutils literal notranslate"><span class=3D"pre">tkin=
ter.Canvas</span></code>, a <a class=3D"reference internal" href=3D"https:/=
/docs.python.org/3/library/turtle.html#turtle.ScrolledCanvas" title=3D"turt=
le.ScrolledCanvas"><code class=3D"xref py py-class docutils literal notrans=
late"><span class=3D"pre">ScrolledCanvas</span></code></a> or a
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.TurtleScreen" title=3D"turtle.TurtleScreen"><code class=
=3D"xref py py-class docutils literal notranslate"><span class=3D"pre">Turt=
leScreen</span></code></a></p>
</dd>
</dl>
<p>Create a turtle.  The turtle has all methods described above as =E2=80=
=9Cmethods of
Turtle/RawTurtle=E2=80=9D.</p>
</dd></dl>

<dl class=3D"py class">
<dt id=3D"turtle.Turtle">
<em class=3D"property">class </em><code class=3D"sig-prename descclassname"=
>turtle.</code><code class=3D"sig-name descname">Turtle</code><a class=3D"h=
eaderlink" href=3D"https://docs.python.org/3/library/turtle.html#turtle.Tur=
tle" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Subclass of RawTurtle, has the same interface but draws on a default
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.Screen" title=3D"turtle.Screen"><code class=3D"xref py py=
-class docutils literal notranslate"><span class=3D"pre">Screen</span></cod=
e></a> object created automatically when needed for the first time.</p>
</dd></dl>

<dl class=3D"py class">
<dt id=3D"turtle.TurtleScreen">
<em class=3D"property">class </em><code class=3D"sig-prename descclassname"=
>turtle.</code><code class=3D"sig-name descname">TurtleScreen</code><span c=
lass=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n">cv</sp=
an></em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"h=
ttps://docs.python.org/3/library/turtle.html#turtle.TurtleScreen" title=3D"=
Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>cv</strong> =E2=80=93 a <code class=3D"x=
ref py py-class docutils literal notranslate"><span class=3D"pre">tkinter.C=
anvas</span></code></p>
</dd>
</dl>
<p>Provides screen oriented methods like <code class=3D"xref py py-func doc=
utils literal notranslate"><span class=3D"pre">setbg()</span></code> etc. t=
hat are described
above.</p>
</dd></dl>

<dl class=3D"py class">
<dt id=3D"turtle.Screen">
<em class=3D"property">class </em><code class=3D"sig-prename descclassname"=
>turtle.</code><code class=3D"sig-name descname">Screen</code><a class=3D"h=
eaderlink" href=3D"https://docs.python.org/3/library/turtle.html#turtle.Scr=
een" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Subclass of TurtleScreen, with <a class=3D"reference internal" href=
=3D"https://docs.python.org/3/library/turtle.html#screenspecific"><span cla=
ss=3D"std std-ref">four methods added</span></a>.</p>
</dd></dl>

<dl class=3D"py class">
<dt id=3D"turtle.ScrolledCanvas">
<em class=3D"property">class </em><code class=3D"sig-prename descclassname"=
>turtle.</code><code class=3D"sig-name descname">ScrolledCanvas</code><span=
 class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n">mast=
er</span></em><span class=3D"sig-paren">)</span><a class=3D"headerlink" hre=
f=3D"https://docs.python.org/3/library/turtle.html#turtle.ScrolledCanvas" t=
itle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>master</strong> =E2=80=93 some Tkinter w=
idget to contain the ScrolledCanvas, i.e.
a Tkinter-canvas with scrollbars added</p>
</dd>
</dl>
<p>Used by class Screen, which thus automatically provides a ScrolledCanvas=
 as
playground for the turtles.</p>
</dd></dl>

<dl class=3D"py class">
<dt id=3D"turtle.Shape">
<em class=3D"property">class </em><code class=3D"sig-prename descclassname"=
>turtle.</code><code class=3D"sig-name descname">Shape</code><span class=3D=
"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n">type_</span><=
/em>, <em class=3D"sig-param"><span class=3D"n">data</span></em><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.=
org/3/library/turtle.html#turtle.Shape" title=3D"Permalink to this definiti=
on">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>type_</strong> =E2=80=93 one of the stri=
ngs =E2=80=9Cpolygon=E2=80=9D, =E2=80=9Cimage=E2=80=9D, =E2=80=9Ccompound=
=E2=80=9D</p>
</dd>
</dl>
<p>Data structure modeling shapes.  The pair <code class=3D"docutils litera=
l notranslate"><span class=3D"pre">(type_,</span> <span class=3D"pre">data)=
</span></code> must follow this
specification:</p>
<div class=3D"responsive-table__container"><table class=3D"docutils align-d=
efault">
<colgroup>
<col style=3D"width: 16%">
<col style=3D"width: 84%">
</colgroup>
<thead>
<tr class=3D"row-odd"><th class=3D"head"><p><em>type_</em></p></th>
<th class=3D"head"><p><em>data</em></p></th>
</tr>
</thead>
<tbody>
<tr class=3D"row-even"><td><p>=E2=80=9Cpolygon=E2=80=9D</p></td>
<td><p>a polygon-tuple, i.e. a tuple of pairs of coordinates</p></td>
</tr>
<tr class=3D"row-odd"><td><p>=E2=80=9Cimage=E2=80=9D</p></td>
<td><p>an image  (in this form only used internally!)</p></td>
</tr>
<tr class=3D"row-even"><td><p>=E2=80=9Ccompound=E2=80=9D</p></td>
<td><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Non=
e</span></code> (a compound shape has to be constructed using the
<a class=3D"reference internal" href=3D"https://docs.python.org/3/library/t=
urtle.html#turtle.Shape.addcomponent" title=3D"turtle.Shape.addcomponent"><=
code class=3D"xref py py-meth docutils literal notranslate"><span class=3D"=
pre">addcomponent()</span></code></a> method)</p></td>
</tr>
</tbody>
</table></div>
<dl class=3D"py method">
<dt id=3D"turtle.Shape.addcomponent">
<code class=3D"sig-name descname">addcomponent</code><span class=3D"sig-par=
en">(</span><em class=3D"sig-param"><span class=3D"n">poly</span></em>, <em=
 class=3D"sig-param"><span class=3D"n">fill</span></em>, <em class=3D"sig-p=
aram"><span class=3D"n">outline</span><span class=3D"o">=3D</span><span cla=
ss=3D"default_value">None</span></em><span class=3D"sig-paren">)</span><a c=
lass=3D"headerlink" href=3D"https://docs.python.org/3/library/turtle.html#t=
urtle.Shape.addcomponent" title=3D"Permalink to this definition">=C2=B6</a>=
</dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>poly</strong> =E2=80=93 a polygon, i.e. a tuple of pairs of =
numbers</p></li>
<li><p><strong>fill</strong> =E2=80=93 a color the <em>poly</em> will be fi=
lled with</p></li>
<li><p><strong>outline</strong> =E2=80=93 a color for the poly=E2=80=99s ou=
tline (if given)</p></li>
</ul>
</dd>
</dl>
<p>Example:</p>
<div class=3D"highlight-pycon3 notranslate" style=3D"position: relative;"><=
div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the prompt=
s and output" style=3D"cursor: pointer; position: absolute; top: 0px; right=
: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width:=
 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2e=
m; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</spa=
n><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n=
">poly</span> <span class=3D"o">=3D</span> <span class=3D"p">((</span><span=
 class=3D"mi">0</span><span class=3D"p">,</span><span class=3D"mi">0</span>=
<span class=3D"p">),(</span><span class=3D"mi">10</span><span class=3D"p">,=
</span><span class=3D"o">-</span><span class=3D"mi">5</span><span class=3D"=
p">),(</span><span class=3D"mi">0</span><span class=3D"p">,</span><span cla=
ss=3D"mi">10</span><span class=3D"p">),(</span><span class=3D"o">-</span><s=
pan class=3D"mi">10</span><span class=3D"p">,</span><span class=3D"o">-</sp=
an><span class=3D"mi">5</span><span class=3D"p">))</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">s</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"n">Shape</span><span class=3D"p">(</span=
><span class=3D"s2">"compound"</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">s</span><span clas=
s=3D"o">.</span><span class=3D"n">addcomponent</span><span class=3D"p">(</s=
pan><span class=3D"n">poly</span><span class=3D"p">,</span> <span class=3D"=
s2">"red"</span><span class=3D"p">,</span> <span class=3D"s2">"blue"</span>=
<span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"c1"># ... add more co=
mponents and then use register_shape()</span>
</pre></div>
</div>
<p>See <a class=3D"reference internal" href=3D"https://docs.python.org/3/li=
brary/turtle.html#compoundshapes"><span class=3D"std std-ref">Compound shap=
es</span></a>.</p>
</dd></dl>

</dd></dl>

<dl class=3D"py class">
<dt id=3D"turtle.Vec2D">
<em class=3D"property">class </em><code class=3D"sig-prename descclassname"=
>turtle.</code><code class=3D"sig-name descname">Vec2D</code><span class=3D=
"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n">x</span></em>=
, <em class=3D"sig-param"><span class=3D"n">y</span></em><span class=3D"sig=
-paren">)</span><a class=3D"headerlink" href=3D"https://docs.python.org/3/l=
ibrary/turtle.html#turtle.Vec2D" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>A two-dimensional vector class, used as a helper class for implement=
ing
turtle graphics.  May be useful for turtle graphics programs too.  Derived
from tuple, so a vector is a tuple!</p>
<p>Provides (for <em>a</em>, <em>b</em> vectors, <em>k</em> number):</p>
<ul class=3D"simple">
<li><p><code class=3D"docutils literal notranslate"><span class=3D"pre">a</=
span> <span class=3D"pre">+</span> <span class=3D"pre">b</span></code> vect=
or addition</p></li>
<li><p><code class=3D"docutils literal notranslate"><span class=3D"pre">a</=
span> <span class=3D"pre">-</span> <span class=3D"pre">b</span></code> vect=
or subtraction</p></li>
<li><p><code class=3D"docutils literal notranslate"><span class=3D"pre">a</=
span> <span class=3D"pre">*</span> <span class=3D"pre">b</span></code> inne=
r product</p></li>
<li><p><code class=3D"docutils literal notranslate"><span class=3D"pre">k</=
span> <span class=3D"pre">*</span> <span class=3D"pre">a</span></code> and =
<code class=3D"docutils literal notranslate"><span class=3D"pre">a</span> <=
span class=3D"pre">*</span> <span class=3D"pre">k</span></code> multiplicat=
ion with scalar</p></li>
<li><p><code class=3D"docutils literal notranslate"><span class=3D"pre">abs=
(a)</span></code> absolute value of a</p></li>
<li><p><code class=3D"docutils literal notranslate"><span class=3D"pre">a.r=
otate(angle)</span></code> rotation</p></li>
</ul>
</dd></dl>

</section>
<section id=3D"help-and-configuration">
<h2>Help and configuration<a class=3D"headerlink" href=3D"https://docs.pyth=
on.org/3/library/turtle.html#help-and-configuration" title=3D"Permalink to =
this headline">=C2=B6</a></h2>
<section id=3D"how-to-use-help">
<h3>How to use help<a class=3D"headerlink" href=3D"https://docs.python.org/=
3/library/turtle.html#how-to-use-help" title=3D"Permalink to this headline"=
>=C2=B6</a></h3>
<p>The public methods of the Screen and Turtle classes are documented exten=
sively
via docstrings.  So these can be used as online-help via the Python help
facilities:</p>
<ul>
<li><p>When using IDLE, tooltips show the signatures and first lines of the
docstrings of typed in function-/method calls.</p></li>
<li><p>Calling <a class=3D"reference internal" href=3D"https://docs.python.=
org/3/library/functions.html#help" title=3D"help"><code class=3D"xref py py=
-func docutils literal notranslate"><span class=3D"pre">help()</span></code=
></a> on methods or functions displays the docstrings:</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">help</span><span class=3D"p">(</span><span class=3D"n">Screen</span><spa=
n class=3D"o">.</span><span class=3D"n">bgcolor</span><span class=3D"p">)</=
span>
<span class=3D"go">Help on method bgcolor in module turtle:</span>

<span class=3D"go">bgcolor(self, *args) unbound turtle.Screen method</span>
<span class=3D"go">    Set or return backgroundcolor of the TurtleScreen.</=
span>

<span class=3D"go">    Arguments (if given): a color string or three number=
s</span>
<span class=3D"go">    in the range 0..colormode or a 3-tuple of such numbe=
rs.</span>


<span class=3D"go">      &gt;&gt;&gt; screen.bgcolor("orange")</span>
<span class=3D"go">      &gt;&gt;&gt; screen.bgcolor()</span>
<span class=3D"go">      "orange"</span>
<span class=3D"go">      &gt;&gt;&gt; screen.bgcolor(0.5,0,0.5)</span>
<span class=3D"go">      &gt;&gt;&gt; screen.bgcolor()</span>
<span class=3D"go">      "#800080"</span>

<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">help</span><span c=
lass=3D"p">(</span><span class=3D"n">Turtle</span><span class=3D"o">.</span=
><span class=3D"n">penup</span><span class=3D"p">)</span>
<span class=3D"go">Help on method penup in module turtle:</span>

<span class=3D"go">penup(self) unbound turtle.Turtle method</span>
<span class=3D"go">    Pull the pen up -- no drawing when moving.</span>

<span class=3D"go">    Aliases: penup | pu | up</span>

<span class=3D"go">    No argument</span>

<span class=3D"go">    &gt;&gt;&gt; turtle.penup()</span>
</pre></div>
</div>
</li>
<li><p>The docstrings of the functions which are derived from methods have =
a modified
form:</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide the promp=
ts and output" style=3D"cursor: pointer; position: absolute; top: 0px; righ=
t: 0px; border-color: rgb(170, 204, 153); border-style: solid; border-width=
: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2=
em; padding-right: 0.2em; border-radius: 0px 3px 0px 0px;">&gt;&gt;&gt;</sp=
an><pre><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"=
n">help</span><span class=3D"p">(</span><span class=3D"n">bgcolor</span><sp=
an class=3D"p">)</span>
<span class=3D"go">Help on function bgcolor in module turtle:</span>

<span class=3D"go">bgcolor(*args)</span>
<span class=3D"go">    Set or return backgroundcolor of the TurtleScreen.</=
span>

<span class=3D"go">    Arguments (if given): a color string or three number=
s</span>
<span class=3D"go">    in the range 0..colormode or a 3-tuple of such numbe=
rs.</span>

<span class=3D"go">    Example::</span>

<span class=3D"go">      &gt;&gt;&gt; bgcolor("orange")</span>
<span class=3D"go">      &gt;&gt;&gt; bgcolor()</span>
<span class=3D"go">      "orange"</span>
<span class=3D"go">      &gt;&gt;&gt; bgcolor(0.5,0,0.5)</span>
<span class=3D"go">      &gt;&gt;&gt; bgcolor()</span>
<span class=3D"go">      "#800080"</span>

<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">help</span><span c=
lass=3D"p">(</span><span class=3D"n">penup</span><span class=3D"p">)</span>
<span class=3D"go">Help on function penup in module turtle:</span>

<span class=3D"go">penup()</span>
<span class=3D"go">    Pull the pen up -- no drawing when moving.</span>

<span class=3D"go">    Aliases: penup | pu | up</span>

<span class=3D"go">    No argument</span>

<span class=3D"go">    Example:</span>
<span class=3D"go">    &gt;&gt;&gt; penup()</span>
</pre></div>
</div>
</li>
</ul>
<p>These modified docstrings are created automatically together with the fu=
nction
definitions that are derived from the methods at import time.</p>
</section>
<section id=3D"translation-of-docstrings-into-different-languages">
<h3>Translation of docstrings into different languages<a class=3D"headerlin=
k" href=3D"https://docs.python.org/3/library/turtle.html#translation-of-doc=
strings-into-different-languages" title=3D"Permalink to this headline">=C2=
=B6</a></h3>
<p>There is a utility to create a dictionary the keys of which are the meth=
od names
and the values of which are the docstrings of the public methods of the cla=
sses
Screen and Turtle.</p>
<dl class=3D"py function">
<dt id=3D"turtle.write_docstringdict">
<code class=3D"sig-prename descclassname">turtle.</code><code class=3D"sig-=
name descname">write_docstringdict</code><span class=3D"sig-paren">(</span>=
<em class=3D"sig-param"><span class=3D"n">filename</span><span class=3D"o">=
=3D</span><span class=3D"default_value">'turtle_docstringdict'</span></em><=
span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"https://do=
cs.python.org/3/library/turtle.html#turtle.write_docstringdict" title=3D"Pe=
rmalink to this definition">=C2=B6</a></dt>
<dd><dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>filename</strong> =E2=80=93 a string, us=
ed as filename</p>
</dd>
</dl>
<p>Create and write docstring-dictionary to a Python script with the given
filename.  This function has to be called explicitly (it is not used by the
turtle graphics classes).  The docstring dictionary will be written to the
Python script <code class=3D"file docutils literal notranslate"><em><span c=
lass=3D"pre">filename</span></em><span class=3D"pre">.py</span></code>.  It=
 is intended to serve as a template
for translation of the docstrings into different languages.</p>
</dd></dl>

<p>If you (or your students) want to use <a class=3D"reference internal" hr=
ef=3D"https://docs.python.org/3/library/turtle.html#module-turtle" title=3D=
"turtle: An educational framework for simple graphics applications"><code c=
lass=3D"xref py py-mod docutils literal notranslate"><span class=3D"pre">tu=
rtle</span></code></a> with online help in your
native language, you have to translate the docstrings and save the resultin=
g
file as e.g. <code class=3D"file docutils literal notranslate"><span class=
=3D"pre">turtle_docstringdict_german.py</span></code>.</p>
<p>If you have an appropriate entry in your <code class=3D"file docutils li=
teral notranslate"><span class=3D"pre">turtle.cfg</span></code> file this d=
ictionary
will be read in at import time and will replace the original English docstr=
ings.</p>
<p>At the time of this writing there are docstring dictionaries in German a=
nd in
Italian.  (Requests please to <a class=3D"reference external" href=3D"mailt=
o:glingl%40aon.at">glingl<span>@</span>aon<span>.</span>at</a>.)</p>
</section>
<section id=3D"how-to-configure-screen-and-turtles">
<h3>How to configure Screen and Turtles<a class=3D"headerlink" href=3D"http=
s://docs.python.org/3/library/turtle.html#how-to-configure-screen-and-turtl=
es" title=3D"Permalink to this headline">=C2=B6</a></h3>
<p>The built-in default configuration mimics the appearance and behaviour o=
f the
old turtle module in order to retain best possible compatibility with it.</=
p>
<p>If you want to use a different configuration which better reflects the f=
eatures
of this module or which better fits to your needs, e.g. for use in a classr=
oom,
you can prepare a configuration file <code class=3D"docutils literal notran=
slate"><span class=3D"pre">turtle.cfg</span></code> which will be read at i=
mport
time and modify the configuration according to its settings.</p>
<p>The built in configuration would correspond to the following turtle.cfg:=
</p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><pre><span></span><span class=3D"n">width</span> <=
span class=3D"o">=3D</span> <span class=3D"mf">0.5</span>
<span class=3D"n">height</span> <span class=3D"o">=3D</span> <span class=3D=
"mf">0.75</span>
<span class=3D"n">leftright</span> <span class=3D"o">=3D</span> <span class=
=3D"kc">None</span>
<span class=3D"n">topbottom</span> <span class=3D"o">=3D</span> <span class=
=3D"kc">None</span>
<span class=3D"n">canvwidth</span> <span class=3D"o">=3D</span> <span class=
=3D"mi">400</span>
<span class=3D"n">canvheight</span> <span class=3D"o">=3D</span> <span clas=
s=3D"mi">300</span>
<span class=3D"n">mode</span> <span class=3D"o">=3D</span> <span class=3D"n=
">standard</span>
<span class=3D"n">colormode</span> <span class=3D"o">=3D</span> <span class=
=3D"mf">1.0</span>
<span class=3D"n">delay</span> <span class=3D"o">=3D</span> <span class=3D"=
mi">10</span>
<span class=3D"n">undobuffersize</span> <span class=3D"o">=3D</span> <span =
class=3D"mi">1000</span>
<span class=3D"n">shape</span> <span class=3D"o">=3D</span> <span class=3D"=
n">classic</span>
<span class=3D"n">pencolor</span> <span class=3D"o">=3D</span> <span class=
=3D"n">black</span>
<span class=3D"n">fillcolor</span> <span class=3D"o">=3D</span> <span class=
=3D"n">black</span>
<span class=3D"n">resizemode</span> <span class=3D"o">=3D</span> <span clas=
s=3D"n">noresize</span>
<span class=3D"n">visible</span> <span class=3D"o">=3D</span> <span class=
=3D"kc">True</span>
<span class=3D"n">language</span> <span class=3D"o">=3D</span> <span class=
=3D"n">english</span>
<span class=3D"n">exampleturtle</span> <span class=3D"o">=3D</span> <span c=
lass=3D"n">turtle</span>
<span class=3D"n">examplescreen</span> <span class=3D"o">=3D</span> <span c=
lass=3D"n">screen</span>
<span class=3D"n">title</span> <span class=3D"o">=3D</span> <span class=3D"=
n">Python</span> <span class=3D"n">Turtle</span> <span class=3D"n">Graphics=
</span>
<span class=3D"n">using_IDLE</span> <span class=3D"o">=3D</span> <span clas=
s=3D"kc">False</span>
</pre></div>
</div>
<p>Short explanation of selected entries:</p>
<ul class=3D"simple">
<li><p>The first four lines correspond to the arguments of the <code class=
=3D"xref py py-meth docutils literal notranslate"><span class=3D"pre">Scree=
n.setup()</span></code>
method.</p></li>
<li><p>Line 5 and 6 correspond to the arguments of the method
<code class=3D"xref py py-meth docutils literal notranslate"><span class=3D=
"pre">Screen.screensize()</span></code>.</p></li>
<li><p><em>shape</em> can be any of the built-in shapes, e.g: arrow, turtle=
, etc.  For more
info try <code class=3D"docutils literal notranslate"><span class=3D"pre">h=
elp(shape)</span></code>.</p></li>
<li><p>If you want to use no fillcolor (i.e. make the turtle transparent), =
you have
to write <code class=3D"docutils literal notranslate"><span class=3D"pre">f=
illcolor</span> <span class=3D"pre">=3D</span> <span class=3D"pre">""</span=
></code> (but all nonempty strings must not have quotes in
the cfg-file).</p></li>
<li><p>If you want to reflect the turtle its state, you have to use <code c=
lass=3D"docutils literal notranslate"><span class=3D"pre">resizemode</span>=
 <span class=3D"pre">=3D</span>
<span class=3D"pre">auto</span></code>.</p></li>
<li><p>If you set e.g. <code class=3D"docutils literal notranslate"><span c=
lass=3D"pre">language</span> <span class=3D"pre">=3D</span> <span class=3D"=
pre">italian</span></code> the docstringdict
<code class=3D"file docutils literal notranslate"><span class=3D"pre">turtl=
e_docstringdict_italian.py</span></code> will be loaded at import time (if
present on the import path, e.g. in the same directory as <a class=3D"refer=
ence internal" href=3D"https://docs.python.org/3/library/turtle.html#module=
-turtle" title=3D"turtle: An educational framework for simple graphics appl=
ications"><code class=3D"xref py py-mod docutils literal notranslate"><span=
 class=3D"pre">turtle</span></code></a>.</p></li>
<li><p>The entries <em>exampleturtle</em> and <em>examplescreen</em> define=
 the names of these
objects as they occur in the docstrings.  The transformation of
method-docstrings to function-docstrings will delete these names from the
docstrings.</p></li>
<li><p><em>using_IDLE</em>: Set this to <code class=3D"docutils literal not=
ranslate"><span class=3D"pre">True</span></code> if you regularly work with=
 IDLE and its -n
switch (=E2=80=9Cno subprocess=E2=80=9D).  This will prevent <a class=3D"re=
ference internal" href=3D"https://docs.python.org/3/library/turtle.html#tur=
tle.exitonclick" title=3D"turtle.exitonclick"><code class=3D"xref py py-fun=
c docutils literal notranslate"><span class=3D"pre">exitonclick()</span></c=
ode></a> to enter the
mainloop.</p></li>
</ul>
<p>There can be a <code class=3D"file docutils literal notranslate"><span c=
lass=3D"pre">turtle.cfg</span></code> file in the directory where <a class=
=3D"reference internal" href=3D"https://docs.python.org/3/library/turtle.ht=
ml#module-turtle" title=3D"turtle: An educational framework for simple grap=
hics applications"><code class=3D"xref py py-mod docutils literal notransla=
te"><span class=3D"pre">turtle</span></code></a> is
stored and an additional one in the current working directory.  The latter =
will
override the settings of the first one.</p>
<p>The <code class=3D"file docutils literal notranslate"><span class=3D"pre=
">Lib/turtledemo</span></code> directory contains a <code class=3D"file doc=
utils literal notranslate"><span class=3D"pre">turtle.cfg</span></code> fil=
e.  You can
study it as an example and see its effects when running the demos (preferab=
ly
not from within the demo-viewer).</p>
</section>
</section>
<section id=3D"module-turtledemo">
<span id=3D"turtledemo-demo-scripts"></span><h2><a class=3D"reference inter=
nal" href=3D"https://docs.python.org/3/library/turtle.html#module-turtledem=
o" title=3D"turtledemo: A viewer for example turtle scripts"><code class=3D=
"xref py py-mod docutils literal notranslate"><span class=3D"pre">turtledem=
o</span></code></a> =E2=80=94 Demo scripts<a class=3D"headerlink" href=3D"h=
ttps://docs.python.org/3/library/turtle.html#module-turtledemo" title=3D"Pe=
rmalink to this headline">=C2=B6</a></h2>
<p>The <a class=3D"reference internal" href=3D"https://docs.python.org/3/li=
brary/turtle.html#module-turtledemo" title=3D"turtledemo: A viewer for exam=
ple turtle scripts"><code class=3D"xref py py-mod docutils literal notransl=
ate"><span class=3D"pre">turtledemo</span></code></a> package includes a se=
t of demo scripts.  These
scripts can be run and viewed using the supplied demo viewer as follows:</p=
>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><pre><span></span><span class=3D"n">python</span> =
<span class=3D"o">-</span><span class=3D"n">m</span> <span class=3D"n">turt=
ledemo</span>
</pre></div>
</div>
<p>Alternatively, you can run the demo scripts individually.  For example,<=
/p>
<div class=3D"highlight-python3 notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><pre><span></span><span class=3D"n">python</span> =
<span class=3D"o">-</span><span class=3D"n">m</span> <span class=3D"n">turt=
ledemo</span><span class=3D"o">.</span><span class=3D"n">bytedesign</span>
</pre></div>
</div>
<p>The <a class=3D"reference internal" href=3D"https://docs.python.org/3/li=
brary/turtle.html#module-turtledemo" title=3D"turtledemo: A viewer for exam=
ple turtle scripts"><code class=3D"xref py py-mod docutils literal notransl=
ate"><span class=3D"pre">turtledemo</span></code></a> package directory con=
tains:</p>
<ul class=3D"simple">
<li><p>A demo viewer <code class=3D"file docutils literal notranslate"><spa=
n class=3D"pre">__main__.py</span></code> which can be used to view the sou=
rcecode
of the scripts and run them at the same time.</p></li>
<li><p>Multiple scripts demonstrating different features of the <a class=3D=
"reference internal" href=3D"https://docs.python.org/3/library/turtle.html#=
module-turtle" title=3D"turtle: An educational framework for simple graphic=
s applications"><code class=3D"xref py py-mod docutils literal notranslate"=
><span class=3D"pre">turtle</span></code></a>
module.  Examples can be accessed via the Examples menu.  They can also
be run standalone.</p></li>
<li><p>A <code class=3D"file docutils literal notranslate"><span class=3D"p=
re">turtle.cfg</span></code> file which serves as an example of how to writ=
e
and use such files.</p></li>
</ul>
<p>The demo scripts are:</p>
<div class=3D"responsive-table__container"><table class=3D"docutils align-d=
efault">
<colgroup>
<col style=3D"width: 23%">
<col style=3D"width: 43%">
<col style=3D"width: 33%">
</colgroup>
<thead>
<tr class=3D"row-odd"><th class=3D"head"><p>Name</p></th>
<th class=3D"head"><p>Description</p></th>
<th class=3D"head"><p>Features</p></th>
</tr>
</thead>
<tbody>
<tr class=3D"row-even"><td><p>bytedesign</p></td>
<td><p>complex classical
turtle graphics pattern</p></td>
<td><p><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">tracer()</span></code>, delay,
<code class=3D"xref py py-func docutils literal notranslate"><span class=3D=
"pre">update()</span></code></p></td>
</tr>
<tr class=3D"row-odd"><td><p>chaos</p></td>
<td><p>graphs Verhulst dynamics,
shows that computer=E2=80=99s
computations can generate
results sometimes against the
common sense expectations</p></td>
<td><p>world coordinates</p></td>
</tr>
<tr class=3D"row-even"><td><p>clock</p></td>
<td><p>analog clock showing time
of your computer</p></td>
<td><p>turtles as clock=E2=80=99s
hands, ontimer</p></td>
</tr>
<tr class=3D"row-odd"><td><p>colormixer</p></td>
<td><p>experiment with r, g, b</p></td>
<td><p><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">ondrag()</span></code></p></td>
</tr>
<tr class=3D"row-even"><td><p>forest</p></td>
<td><p>3 breadth-first trees</p></td>
<td><p>randomization</p></td>
</tr>
<tr class=3D"row-odd"><td><p>fractalcurves</p></td>
<td><p>Hilbert &amp; Koch curves</p></td>
<td><p>recursion</p></td>
</tr>
<tr class=3D"row-even"><td><p>lindenmayer</p></td>
<td><p>ethnomathematics
(indian kolams)</p></td>
<td><p>L-System</p></td>
</tr>
<tr class=3D"row-odd"><td><p>minimal_hanoi</p></td>
<td><p>Towers of Hanoi</p></td>
<td><p>Rectangular Turtles
as Hanoi discs
(shape, shapesize)</p></td>
</tr>
<tr class=3D"row-even"><td><p>nim</p></td>
<td><p>play the classical nim game
with three heaps of sticks
against the computer.</p></td>
<td><p>turtles as nimsticks,
event driven (mouse,
keyboard)</p></td>
</tr>
<tr class=3D"row-odd"><td><p>paint</p></td>
<td><p>super minimalistic
drawing program</p></td>
<td><p><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">onclick()</span></code></p></td>
</tr>
<tr class=3D"row-even"><td><p>peace</p></td>
<td><p>elementary</p></td>
<td><p>turtle: appearance
and animation</p></td>
</tr>
<tr class=3D"row-odd"><td><p>penrose</p></td>
<td><p>aperiodic tiling with
kites and darts</p></td>
<td><p><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">stamp()</span></code></p></td>
</tr>
<tr class=3D"row-even"><td><p>planet_and_moon</p></td>
<td><p>simulation of
gravitational system</p></td>
<td><p>compound shapes,
<code class=3D"xref py py-class docutils literal notranslate"><span class=
=3D"pre">Vec2D</span></code></p></td>
</tr>
<tr class=3D"row-odd"><td><p>round_dance</p></td>
<td><p>dancing turtles rotating
pairwise in opposite
direction</p></td>
<td><p>compound shapes, clone
shapesize, tilt,
get_shapepoly, update</p></td>
</tr>
<tr class=3D"row-even"><td><p>sorting_animate</p></td>
<td><p>visual demonstration of
different sorting methods</p></td>
<td><p>simple alignment,
randomization</p></td>
</tr>
<tr class=3D"row-odd"><td><p>tree</p></td>
<td><p>a (graphical) breadth
first tree (using generators)</p></td>
<td><p><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">clone()</span></code></p></td>
</tr>
<tr class=3D"row-even"><td><p>two_canvases</p></td>
<td><p>simple design</p></td>
<td><p>turtles on two
canvases</p></td>
</tr>
<tr class=3D"row-odd"><td><p>wikipedia</p></td>
<td><p>a pattern from the wikipedia
article on turtle graphics</p></td>
<td><p><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">clone()</span></code>,
<code class=3D"xref py py-func docutils literal notranslate"><span class=3D=
"pre">undo()</span></code></p></td>
</tr>
<tr class=3D"row-even"><td><p>yinyang</p></td>
<td><p>another elementary example</p></td>
<td><p><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">circle()</span></code></p></td>
</tr>
</tbody>
</table></div>
<p>Have fun!</p>
</section>
<section id=3D"changes-since-python-2-6">
<h2>Changes since Python 2.6<a class=3D"headerlink" href=3D"https://docs.py=
thon.org/3/library/turtle.html#changes-since-python-2-6" title=3D"Permalink=
 to this headline">=C2=B6</a></h2>
<ul class=3D"simple">
<li><p>The methods <code class=3D"xref py py-meth docutils literal notransl=
ate"><span class=3D"pre">Turtle.tracer()</span></code>, <code class=3D"xref=
 py py-meth docutils literal notranslate"><span class=3D"pre">Turtle.window=
_width()</span></code> and
<code class=3D"xref py py-meth docutils literal notranslate"><span class=3D=
"pre">Turtle.window_height()</span></code> have been eliminated.
Methods with these names and functionality are now available only
as methods of <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">Screen</span></code>. The functions derived from these=
 remain
available. (In fact already in Python 2.6 these methods were merely
duplications of the corresponding
<code class=3D"xref py py-class docutils literal notranslate"><span class=
=3D"pre">TurtleScreen</span></code>/<code class=3D"xref py py-class docutil=
s literal notranslate"><span class=3D"pre">Screen</span></code>-methods.)</=
p></li>
<li><p>The method <code class=3D"xref py py-meth docutils literal notransla=
te"><span class=3D"pre">Turtle.fill()</span></code> has been eliminated.
The behaviour of <code class=3D"xref py py-meth docutils literal notranslat=
e"><span class=3D"pre">begin_fill()</span></code> and <code class=3D"xref p=
y py-meth docutils literal notranslate"><span class=3D"pre">end_fill()</spa=
n></code>
have changed slightly: now  every filling-process must be completed with an
<code class=3D"docutils literal notranslate"><span class=3D"pre">end_fill()=
</span></code> call.</p></li>
<li><p>A method <code class=3D"xref py py-meth docutils literal notranslate=
"><span class=3D"pre">Turtle.filling()</span></code> has been added. It ret=
urns a boolean
value: <code class=3D"docutils literal notranslate"><span class=3D"pre">Tru=
e</span></code> if a filling process is under way, <code class=3D"docutils =
literal notranslate"><span class=3D"pre">False</span></code> otherwise.
This behaviour corresponds to a <code class=3D"docutils literal notranslate=
"><span class=3D"pre">fill()</span></code> call without arguments in
Python 2.6.</p></li>
</ul>
</section>
<section id=3D"changes-since-python-3-0">
<h2>Changes since Python 3.0<a class=3D"headerlink" href=3D"https://docs.py=
thon.org/3/library/turtle.html#changes-since-python-3-0" title=3D"Permalink=
 to this headline">=C2=B6</a></h2>
<ul class=3D"simple">
<li><p>The methods <code class=3D"xref py py-meth docutils literal notransl=
ate"><span class=3D"pre">Turtle.shearfactor()</span></code>, <code class=3D=
"xref py py-meth docutils literal notranslate"><span class=3D"pre">Turtle.s=
hapetransform()</span></code> and
<code class=3D"xref py py-meth docutils literal notranslate"><span class=3D=
"pre">Turtle.get_shapepoly()</span></code> have been added. Thus the full r=
ange of
regular linear transforms is now available for transforming turtle shapes.
<code class=3D"xref py py-meth docutils literal notranslate"><span class=3D=
"pre">Turtle.tiltangle()</span></code> has been enhanced in functionality: =
it now can
be used to get or set the tiltangle. <code class=3D"xref py py-meth docutil=
s literal notranslate"><span class=3D"pre">Turtle.settiltangle()</span></co=
de> has been
deprecated.</p></li>
<li><p>The method <code class=3D"xref py py-meth docutils literal notransla=
te"><span class=3D"pre">Screen.onkeypress()</span></code> has been added as=
 a complement to
<code class=3D"xref py py-meth docutils literal notranslate"><span class=3D=
"pre">Screen.onkey()</span></code> which in fact binds actions to the keyre=
lease event.
Accordingly the latter has got an alias: <code class=3D"xref py py-meth doc=
utils literal notranslate"><span class=3D"pre">Screen.onkeyrelease()</span>=
</code>.</p></li>
<li><p>The method  <code class=3D"xref py py-meth docutils literal notransl=
ate"><span class=3D"pre">Screen.mainloop()</span></code> has been added. So=
 when working only
with Screen and Turtle objects one must not additionally import
<code class=3D"xref py py-func docutils literal notranslate"><span class=3D=
"pre">mainloop()</span></code> anymore.</p></li>
<li><p>Two input methods has been added <code class=3D"xref py py-meth docu=
tils literal notranslate"><span class=3D"pre">Screen.textinput()</span></co=
de> and
<code class=3D"xref py py-meth docutils literal notranslate"><span class=3D=
"pre">Screen.numinput()</span></code>. These popup input dialogs and return
strings and numbers respectively.</p></li>
<li><p>Two example scripts <code class=3D"file docutils literal notranslate=
"><span class=3D"pre">tdemo_nim.py</span></code> and <code class=3D"file do=
cutils literal notranslate"><span class=3D"pre">tdemo_round_dance.py</span>=
</code>
have been added to the <code class=3D"file docutils literal notranslate"><s=
pan class=3D"pre">Lib/turtledemo</span></code> directory.</p></li>
</ul>
</section>
</section>


            <div class=3D"clearer"></div>
          </div>
        </div>
      </div>
      <div class=3D"sphinxsidebar" role=3D"navigation" aria-label=3D"main n=
avigation">
        <div class=3D"sphinxsidebarwrapper" style=3D"float: left; margin-ri=
ght: 0px; width: 217px;">
  <h3><a href=3D"https://docs.python.org/3/contents.html">Table of Contents=
</a></h3>
  <ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#"><code class=3D"xref py py-mod docutils literal notranslate=
"><span class=3D"pre">turtle</span></code> =E2=80=94 Turtle graphics</a><ul=
>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#introduction">Introduction</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#overview-of-available-turtle-and-screen-methods">Overview of=
 available Turtle and Screen methods</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#turtle-methods">Turtle methods</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#methods-of-turtlescreen-screen">Methods of TurtleScreen/Scre=
en</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#methods-of-rawturtle-turtle-and-corresponding-functions">Met=
hods of RawTurtle/Turtle and corresponding functions</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#turtle-motion">Turtle motion</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#tell-turtle-s-state">Tell Turtle=E2=80=99s state</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#settings-for-measurement">Settings for measurement</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#pen-control">Pen control</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#drawing-state">Drawing state</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#color-control">Color control</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#filling">Filling</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#more-drawing-control">More drawing control</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#turtle-state">Turtle state</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#visibility">Visibility</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#appearance">Appearance</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#using-events">Using events</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#special-turtle-methods">Special Turtle methods</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#compound-shapes">Compound shapes</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#methods-of-turtlescreen-screen-and-corresponding-functions">=
Methods of TurtleScreen/Screen and corresponding functions</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#window-control">Window control</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#animation-control">Animation control</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#using-screen-events">Using screen events</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#input-methods">Input methods</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#settings-and-special-methods">Settings and special methods</=
a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#methods-specific-to-screen-not-inherited-from-turtlescreen">=
Methods specific to Screen, not inherited from TurtleScreen</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#public-classes">Public classes</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#help-and-configuration">Help and configuration</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#how-to-use-help">How to use help</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#translation-of-docstrings-into-different-languages">Translat=
ion of docstrings into different languages</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#how-to-configure-screen-and-turtles">How to configure Screen=
 and Turtles</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#module-turtledemo"><code class=3D"xref py py-mod docutils li=
teral notranslate"><span class=3D"pre">turtledemo</span></code> =E2=80=94 D=
emo scripts</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#changes-since-python-2-6">Changes since Python 2.6</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.python.org/3/libra=
ry/turtle.html#changes-since-python-3-0">Changes since Python 3.0</a></li>
</ul>
</li>
</ul>

  <h4>Previous topic</h4>
  <p class=3D"topless"><a href=3D"https://docs.python.org/3/library/framewo=
rks.html" title=3D"previous chapter">Program Frameworks</a></p>
  <h4>Next topic</h4>
  <p class=3D"topless"><a href=3D"https://docs.python.org/3/library/cmd.htm=
l" title=3D"next chapter"><code class=3D"xref py py-mod docutils literal no=
translate"><span class=3D"pre">cmd</span></code> =E2=80=94 Support for line=
-oriented command interpreters</a></p>
  <div role=3D"note" aria-label=3D"source link">
    <h3>This Page</h3>
    <ul class=3D"this-page-menu">
      <li><a href=3D"https://docs.python.org/3/bugs.html">Report a Bug</a><=
/li>
      <li>
        <a href=3D"https://github.com/python/cpython/blob/3.10/Doc/library/=
turtle.rst" rel=3D"nofollow">Show Source
        </a>
      </li>
    </ul>
  </div>
        </div>
      <div id=3D"sidebarbutton" title=3D"Collapse sidebar" style=3D"border-=
radius: 0px 5px 5px 0px; color: rgb(68, 68, 68); background-color: rgb(204,=
 204, 204); font-size: 1.2em; cursor: pointer; height: 100%; padding-left: =
1px; margin-left: 218px;"><span style=3D"display: block; position: fixed; t=
op: 50%;">=C2=AB</span></div></div>
      <div class=3D"clearer"></div>
    </div> =20
    <div class=3D"related" role=3D"navigation" aria-label=3D"related naviga=
tion">
      <h3>Navigation</h3>
      <ul>
        <li class=3D"right" style=3D"margin-right: 10px">
          <a href=3D"https://docs.python.org/3/genindex.html" title=3D"Gene=
ral Index">index</a></li>
        <li class=3D"right">
          <a href=3D"https://docs.python.org/3/py-modindex.html" title=3D"P=
ython Module Index">modules</a> |</li>
        <li class=3D"right">
          <a href=3D"https://docs.python.org/3/library/cmd.html" title=3D"c=
md =E2=80=94 Support for line-oriented command interpreters">next</a> |</li=
>
        <li class=3D"right">
          <a href=3D"https://docs.python.org/3/library/frameworks.html" tit=
le=3D"Program Frameworks">previous</a> |</li>

          <li><img src=3D"https://docs.python.org/3/_static/py.svg" alt=3D"=
python logo" style=3D"vertical-align: middle; margin-top: -1px"></li>
          <li><a href=3D"https://www.python.org/">Python</a> =C2=BB</li>
          <li class=3D"switchers">
            <div class=3D"language_switcher_placeholder"><select id=3D"lang=
uage_select"><option value=3D"en" selected=3D"selected">English</option><op=
tion value=3D"es">Spanish</option><option value=3D"fr">French</option><opti=
on value=3D"ja">Japanese</option><option value=3D"ko">Korean</option><optio=
n value=3D"pt-br">Brazilian Portuguese</option><option value=3D"zh-cn">Simp=
lified Chinese</option><option value=3D"zh-tw">Traditional Chinese</option>=
</select></div>
            <div class=3D"version_switcher_placeholder"><select id=3D"versi=
on_select"><option value=3D"3.12">dev (3.12)</option><option value=3D"3.11"=
>pre (3.11)</option><option value=3D"3.10" selected=3D"selected">3.10.7</op=
tion><option value=3D"3.9">3.9</option><option value=3D"3.8">3.8</option><o=
ption value=3D"3.7">3.7</option><option value=3D"3.6">3.6</option><option v=
alue=3D"3.5">3.5</option><option value=3D"2.7">2.7</option></select></div>
          </li>
          <li>
             =20
          </li>
    <li id=3D"cpython-language-and-version">
      <a href=3D"https://docs.python.org/3/index.html">3.10.7 Documentation=
</a> =C2=BB
    </li>

          <li class=3D"nav-item nav-item-1"><a href=3D"https://docs.python.=
org/3/library/index.html">The Python Standard Library</a> =C2=BB</li>
          <li class=3D"nav-item nav-item-2"><a href=3D"https://docs.python.=
org/3/library/frameworks.html">Program Frameworks</a> =C2=BB</li>
        <li class=3D"nav-item nav-item-this"><a href=3D"https://docs.python=
.org/3/library/turtle.html"><code class=3D"xref py py-mod docutils literal =
notranslate"><span class=3D"pre">turtle</span></code> =E2=80=94 Turtle grap=
hics</a></li>
                <li class=3D"right">
                   =20

    <div class=3D"inline-search" role=3D"search">
        <form class=3D"inline-search" action=3D"https://docs.python.org/3/s=
earch.html" method=3D"get">
          <input placeholder=3D"Quick search" aria-label=3D"Quick search" t=
ype=3D"text" name=3D"q">
          <input type=3D"submit" value=3D"Go">
         =20
         =20
        </form>
    </div>
                     |
                </li>
           =20
      </ul>
    </div> =20
    <div class=3D"footer">
    =C2=A9 <a href=3D"https://docs.python.org/3/copyright.html">Copyright</=
a> 2001-2022, Python Software Foundation.
    <br>
    This page is licensed under the Python Software Foundation License Vers=
ion 2.
    <br>
    Examples, recipes, and other code in the documentation are additionally=
 licensed under the Zero Clause BSD License.
    <br>
    See <a href=3D"https://docs.python.org/license.html">History and Licens=
e</a> for more information.<br>
    <br>

    The Python Software Foundation is a non-profit corporation.
<a href=3D"https://www.python.org/psf/donations/">Please donate.</a>
<br>
    <br>

    Last updated on Oct 04, 2022.
    <a href=3D"https://docs.python.org/bugs.html">Found a bug</a>?
    <br>

    Created using <a href=3D"https://www.sphinx-doc.org/">Sphinx</a> 3.4.3.
    </div>

   =20
 =20
</body></html>
------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-96576a69-574d-4320-add6-579e2bbb4ff3@mhtml.blink

@charset "utf-8";

@media only screen {
  table.full-width-table { width: 100%; }
}
------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.python.org/3/_static/pygments.css

@charset "utf-8";

pre { line-height: 125%; }

td.linenos .normal { color: inherit; background-color: transparent; padding=
-left: 5px; padding-right: 5px; }

span.linenos { color: inherit; background-color: transparent; padding-left:=
 5px; padding-right: 5px; }

td.linenos .special { color: rgb(0, 0, 0); background-color: rgb(255, 255, =
192); padding-left: 5px; padding-right: 5px; }

span.linenos.special { color: rgb(0, 0, 0); background-color: rgb(255, 255,=
 192); padding-left: 5px; padding-right: 5px; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(248, 248, 248); }

.highlight .c { color: rgb(61, 123, 123); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(61, 123, 123); font-style: italic; }

.highlight .cm { color: rgb(61, 123, 123); font-style: italic; }

.highlight .cp { color: rgb(156, 101, 0); }

.highlight .cpf { color: rgb(61, 123, 123); font-style: italic; }

.highlight .c1 { color: rgb(61, 123, 123); font-style: italic; }

.highlight .cs { color: rgb(61, 123, 123); font-style: italic; }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(228, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 132, 0); }

.highlight .go { color: rgb(113, 113, 113); }

.highlight .gp { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .kd { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .kn { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .kp { color: rgb(0, 128, 0); }

.highlight .kr { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .kt { color: rgb(176, 0, 64); }

.highlight .m { color: rgb(102, 102, 102); }

.highlight .s { color: rgb(186, 33, 33); }

.highlight .na { color: rgb(104, 120, 34); }

.highlight .nb { color: rgb(0, 128, 0); }

.highlight .nc { color: rgb(0, 0, 255); font-weight: bold; }

.highlight .no { color: rgb(136, 0, 0); }

.highlight .nd { color: rgb(170, 34, 255); }

.highlight .ni { color: rgb(113, 113, 113); font-weight: bold; }

.highlight .ne { color: rgb(203, 63, 56); font-weight: bold; }

.highlight .nf { color: rgb(0, 0, 255); }

.highlight .nl { color: rgb(118, 118, 0); }

.highlight .nn { color: rgb(0, 0, 255); font-weight: bold; }

.highlight .nt { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .nv { color: rgb(25, 23, 124); }

.highlight .ow { color: rgb(170, 34, 255); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(102, 102, 102); }

.highlight .mf { color: rgb(102, 102, 102); }

.highlight .mh { color: rgb(102, 102, 102); }

.highlight .mi { color: rgb(102, 102, 102); }

.highlight .mo { color: rgb(102, 102, 102); }

.highlight .sa { color: rgb(186, 33, 33); }

.highlight .sb { color: rgb(186, 33, 33); }

.highlight .sc { color: rgb(186, 33, 33); }

.highlight .dl { color: rgb(186, 33, 33); }

.highlight .sd { color: rgb(186, 33, 33); font-style: italic; }

.highlight .s2 { color: rgb(186, 33, 33); }

.highlight .se { color: rgb(170, 93, 31); font-weight: bold; }

.highlight .sh { color: rgb(186, 33, 33); }

.highlight .si { color: rgb(164, 90, 119); font-weight: bold; }

.highlight .sx { color: rgb(0, 128, 0); }

.highlight .sr { color: rgb(164, 90, 119); }

.highlight .s1 { color: rgb(186, 33, 33); }

.highlight .ss { color: rgb(25, 23, 124); }

.highlight .bp { color: rgb(0, 128, 0); }

.highlight .fm { color: rgb(0, 0, 255); }

.highlight .vc { color: rgb(25, 23, 124); }

.highlight .vg { color: rgb(25, 23, 124); }

.highlight .vi { color: rgb(25, 23, 124); }

.highlight .vm { color: rgb(25, 23, 124); }

.highlight .il { color: rgb(102, 102, 102); }
------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.python.org/3/_static/pydoctheme.css?2022.1

@charset "utf-8";

@import url("default.css");

body { background-color: white; margin-left: 1em; margin-right: 1em; }

.mobile-nav, .menu-wrapper { display: none; }

div.related { margin-bottom: 1.2em; padding: 0.5em 0px; border-bottom: 1px =
solid rgb(204, 204, 204); margin-top: 0.5em; }

div.related a:hover { color: rgb(0, 149, 196); }

div.related ~ div.related { border-top: 1px solid rgb(204, 204, 204); borde=
r-bottom: none; }

.related .switchers { display: inline-flex; }

.switchers > div { margin-right: 5px; }

.version_switcher_placeholder, .language_switcher_placeholder { padding-lef=
t: 5px; background-color: white; }

.inline-search { display: inline; }

form.inline-search input { display: inline; }

form.inline-search input[type=3D"submit"] { width: 40px; }

div.document { display: flex; }

div.sphinxsidebar { float: none; position: sticky; top: 0px; max-height: 10=
0vh; background-color: rgb(238, 238, 238); border-radius: 5px; line-height:=
 130%; font-size: smaller; }

div.sphinxsidebar h3, div.sphinxsidebar h4 { margin-top: 1.5em; }

div.sphinxsidebarwrapper { box-sizing: border-box; height: 100%; overflow: =
hidden auto; }

div.sphinxsidebarwrapper > h3:first-child { margin-top: 0.2em; }

div.sphinxsidebarwrapper > ul > li > ul > li { margin-bottom: 0.4em; }

div.sphinxsidebar a:hover { color: rgb(0, 149, 196); }

form.inline-search input, div.sphinxsidebar input { font-family: "Lucida Gr=
ande", Arial, sans-serif; border: 1px solid rgb(153, 153, 153); font-size: =
smaller; border-radius: 3px; }

div.sphinxsidebar input[type=3D"text"] { max-width: 150px; }

div.body { padding: 0px 0px 0px 1.2em; }

div.body p, div.body dd, div.body li, div.body blockquote { text-align: lef=
t; line-height: 1.4; }

div.body h1, div.body h2, div.body h3, div.body h4, div.body h5, div.body h=
6 { margin: 0px; border: 0px; padding: 0.3em 0px; }

div.body hr { border: 0px; background-color: rgb(204, 204, 204); height: 1p=
x; }

div.body pre { border-radius: 3px; border: 1px solid rgb(170, 204, 153); }

div.body div.admonition, div.body div.impl-detail { border-radius: 3px; }

div.body div.impl-detail > p { margin: 0px; }

div.body div.seealso { border: 1px solid rgb(221, 221, 102); }

div.body a { color: rgb(0, 114, 170); }

div.body a:visited { color: rgb(99, 99, 187); }

div.body a:hover { color: rgb(0, 176, 228); }

tt, code, pre { font-family: "monospace", monospace; font-size: 96.5%; }

div.body tt, div.body code { border-radius: 3px; }

div.body tt.descname, div.body code.descname { font-size: 120%; }

div.body tt.xref, div.body a tt, div.body code.xref, div.body a code { font=
-weight: normal; }

table.docutils { border: 1px solid rgb(221, 221, 221); min-width: 20%; bord=
er-radius: 3px; margin-top: 10px; margin-bottom: 10px; }

table.docutils td, table.docutils th { border-radius: 3px; border: 1px soli=
d rgb(221, 221, 221) !important; }

table p, table li { text-align: left !important; }

table.docutils th { background-color: rgb(238, 238, 238); padding: 0.3em 0.=
5em; }

table.docutils td { background-color: white; padding: 0.3em 0.5em; }

table.footnote, table.footnote td { border: 0px !important; }

div.footer { line-height: 150%; margin-top: -2em; text-align: right; width:=
 auto; margin-right: 10px; }

div.footer a:hover { color: rgb(0, 149, 196); }

.refcount { color: rgb(0, 102, 0); }

.stableabi { color: rgb(34, 34, 153); }

.highlight { background: none !important; }

dl > dt span ~ em { font-family: "monospace", monospace; }

.toctree-wrapper ul { padding-left: 20px; }

@media (max-width: 1023px) {
  div.body { min-width: 100%; padding: 0px; font-size: 0.875rem; }
  div.bodywrapper { margin: 0px; }
  div.body h1 { font-size: 1.625rem; }
  div.body h2 { font-size: 1.25rem; }
  div.body h3, div.body h4, div.body h5 { font-size: 1rem; }
  div.body ul { padding-inline-start: 1rem; }
  div.body blockquote { margin-inline: 1rem 0px; }
  div.related, .sphinxsidebar { display: none; }
  html { scroll-padding-top: 40px; }
  .mobile-nav { display: block; height: 40px; width: 100%; position: fixed;=
 top: 0px; left: 0px; background-color: white; box-shadow: rgba(0, 0, 0, 0.=
25) 0px 0px 2px 0px; z-index: 1; }
  .mobile-nav * { box-sizing: border-box; }
  .nav-content { position: absolute; z-index: 2; left: 0px; top: 0px; heigh=
t: 40px; width: 100%; max-width: 100vw; padding: 0px 1rem 0px 45px; display=
: flex; align-items: center; background-color: white; }
  .nav-logo { margin-right: 0.7rem; display: flex; flex: 0 0 auto; }
  .nav-content img { width: 20px; height: auto; }
  .version_switcher_placeholder { flex: 0 1 0px; margin-right: 1rem; }
  .nav-content .search { display: flex; flex: 1 1 auto; align-items: center=
; padding: 0px 0px 0px 2px; border: 1px solid rgb(169, 169, 169); height: 3=
0px; overflow: hidden; }
  .nav-content .search:hover { box-shadow: rgba(32, 33, 36, 0.28) 0px 1px 6=
px 0px; border-color: rgba(223, 225, 229, 0); }
  .nav-content .search input[type=3D"text"] { border: 0px; outline: 0px; bo=
x-shadow: none; width: 40px; height: 28px; flex: 1 1 auto; }
  .nav-content .search input[type=3D"submit"] { height: 100%; appearance: n=
one; border-width: 1px; border-style: solid; border-color: transparent tran=
sparent transparent rgb(169, 169, 169); border-image: initial; box-shadow: =
none; cursor: pointer; background-color: rgb(240, 240, 240); margin-right: =
0px; }
  .nav-content .search input[type=3D"submit"]:hover { border-color: rgb(169=
, 169, 169); }
  .nav-content .search svg { flex: 0 0 20px; fill: rgb(51, 51, 51); }
  .toggler__input { width: 40px; height: 40px; left: 0px; opacity: 0; posit=
ion: absolute; z-index: 3; margin: 0px; }
  .toggler__label { width: 40px; height: 40px; margin: 0px; position: absol=
ute; cursor: pointer; top: 0px; left: 0px; background-color: transparent; b=
order: 1px solid white; box-shadow: none; z-index: 3; display: flex; align-=
items: center; justify-content: center; padding: 0px 8px; }
  .toggler__label:focus { background-color: rgb(238, 238, 238); border: 1px=
 solid rgb(237, 237, 237); box-shadow: rgba(0, 0, 0, 0.25) 1px 0px 2px 0px;=
 }
  .toggler__label:hover { background-color: rgb(238, 238, 238); border: 1px=
 solid rgb(237, 237, 237); box-shadow: rgba(0, 0, 0, 0.25) 1px 0px 2px 0px;=
 }
  .toggler__label > span { position: relative; flex: 0 0 auto; height: 2px;=
 width: 100%; background: rgb(68, 68, 68); transition: all 400ms ease 0s; }
  .toggler__label > span::before, .toggler__label > span::after { content: =
""; height: 2px; width: 100%; background: inherit; position: absolute; left=
: 0px; top: -8px; }
  .toggler__label > span::after { top: 8px; }
  .toggler__input:checked ~ .toggler__label span { transform: rotate(135deg=
); }
  .toggler__input:checked ~ .toggler__label span::before { transform: rotat=
e(90deg); }
  .toggler__input:checked ~ .toggler__label span::before, .toggler__input:c=
hecked ~ .toggler__label span::after { top: 0px; }
  .toggler__input:checked:hover ~ .toggler__label span { transform: rotate(=
315deg); }
  .toggler__input:checked ~ .menu-wrapper { visibility: visible; left: 0px;=
 }
  .menu-wrapper { display: block; position: fixed; top: 0px; transition: le=
ft 400ms ease 0s; left: -310px; width: 300px; height: 100%; background-colo=
r: rgb(238, 238, 238); box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 10px; overflo=
w-y: auto; }
  .menu-wrapper.open { visibility: visible; left: 0px; }
  .menu { padding: 40px 10px 30px 20px; }
  .menu-wrapper h3, .menu-wrapper h4 { margin-bottom: 0px; font-weight: nor=
mal; }
  .menu-wrapper h4 { font-size: 1.3em; }
  .menu-wrapper h3 { color: rgb(68, 68, 68); font-size: 1.4em; }
  .menu-wrapper h3 + p, .menu-wrapper h4 + p { margin-top: 0.5rem; }
  .menu a { font-size: smaller; color: rgb(68, 68, 68); text-decoration: no=
ne; }
  .menu ul { list-style: none; line-height: 1.4; overflow-wrap: break-word;=
 padding-left: 0px; }
  .menu ul ul { margin-left: 20px; list-style: square; }
  .menu ul li { margin-bottom: 0.5rem; }
  .language_switcher_placeholder, .version_switcher_placeholder { position:=
 relative; border: 1px solid rgb(168, 168, 168); height: 30px; padding-righ=
t: 7px; }
  .language_switcher_placeholder { margin-top: 2rem; }
  .language_switcher_placeholder::after, .version_switcher_placeholder::aft=
er { content: url("../_static/caret-down.svg"); position: absolute; top: 7p=
x; width: 15px; height: 15px; right: 0px; pointer-events: none; }
  .language_switcher_placeholder select, .version_switcher_placeholder sele=
ct { appearance: none; border: 0px; height: 100%; background-color: white; =
}
  .language_switcher_placeholder:focus-visible, .version_switcher_placehold=
er:focus-visible { outline-offset: 5px; }
  .language_switcher_placeholder select { width: 100%; }
  .document { padding-top: 40px; position: relative; z-index: 0; }
  .responsive-table__container { width: 100%; overflow-x: auto; }
}
------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.python.org/3/_static/default.css

@charset "utf-8";

@import url("classic.css");
------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.python.org/3/_static/classic.css

@charset "utf-8";

@import url("basic.css");

html { background-color: rgb(255, 255, 255); }

body { font-family: "Lucida Grande", Arial, sans-serif; font-size: 100%; ba=
ckground-color: white; color: rgb(0, 0, 0); margin: 0px; padding: 0px; }

div.document { background-color: white; }

div.documentwrapper { float: left; width: 100%; }

div.bodywrapper { margin: 0px 0px 0px 230px; }

div.body { background-color: white; color: rgb(34, 34, 34); padding: 0px 20=
px 30px; }

div.footer { color: rgb(85, 85, 85); width: 100%; padding: 9px 0px; text-al=
ign: center; font-size: 75%; }

div.footer a { color: rgb(85, 85, 85); text-decoration: underline; }

div.related { background-color: white; line-height: 30px; color: rgb(102, 1=
02, 102); }

div.related a { color: rgb(68, 68, 68); }

div.sphinxsidebar { }

div.sphinxsidebar h3 { font-family: "Lucida Grande", Arial, sans-serif; col=
or: rgb(68, 68, 68); font-size: 1.4em; font-weight: normal; margin: 0px; pa=
dding: 0px; }

div.sphinxsidebar h3 a { color: rgb(68, 68, 68); }

div.sphinxsidebar h4 { font-family: "Lucida Grande", Arial, sans-serif; col=
or: rgb(68, 68, 68); font-size: 1.3em; font-weight: normal; margin: 5px 0px=
 0px; padding: 0px; }

div.sphinxsidebar p { color: rgb(68, 68, 68); }

div.sphinxsidebar p.topless { margin: 5px 10px 10px; }

div.sphinxsidebar ul { margin: 10px; padding: 0px; color: rgb(68, 68, 68); =
}

div.sphinxsidebar a { color: rgb(68, 68, 68); }

div.sphinxsidebar input { border: 1px solid rgb(68, 68, 68); font-family: s=
ans-serif; font-size: 1em; }

div#sidebarbutton { background-color: rgb(60, 110, 131); }

a { color: rgb(0, 144, 192); text-decoration: none; }

a:visited { color: rgb(0, 96, 143); text-decoration: none; }

a:hover { text-decoration: underline; }

div.body h1, div.body h2, div.body h3, div.body h4, div.body h5, div.body h=
6 { font-family: "Lucida Grande", Arial, sans-serif; background-color: whit=
e; font-weight: normal; color: rgb(26, 26, 26); border-bottom: 1px solid rg=
b(204, 204, 204); margin: 20px -20px 10px; padding: 3px 0px 3px 10px; }

div.body h1 { margin-top: 0px; font-size: 200%; }

div.body h2 { font-size: 160%; }

div.body h3 { font-size: 140%; }

div.body h4 { font-size: 120%; }

div.body h5 { font-size: 110%; }

div.body h6 { font-size: 100%; }

a.headerlink { color: rgb(170, 170, 170); font-size: 0.8em; padding: 0px 4p=
x; text-decoration: none; }

a.headerlink:hover { background-color: rgb(170, 170, 170); color: white; }

div.body p, div.body dd, div.body li, div.body blockquote { text-align: jus=
tify; line-height: 130%; }

div.admonition p.admonition-title + p { display: inline; }

div.admonition p { margin-bottom: 5px; }

div.admonition pre { margin-bottom: 5px; }

div.admonition ul, div.admonition ol { margin-bottom: 5px; }

div.note { background-color: rgb(238, 238, 238); border: 1px solid rgb(204,=
 204, 204); }

div.seealso { background-color: rgb(255, 255, 204); border: 1px solid rgb(2=
55, 255, 102); }

div.topic { background-color: rgb(238, 238, 238); }

div.warning { background-color: rgb(255, 228, 228); border: 1px solid rgb(2=
55, 102, 102); }

p.admonition-title { display: inline; }

p.admonition-title::after { content: ":"; }

pre { padding: 5px; background-color: rgb(238, 255, 204); color: rgb(51, 51=
, 51); line-height: 120%; border-top: 1px solid rgb(170, 204, 153); border-=
bottom: 1px solid rgb(170, 204, 153); border-image: initial; border-left: n=
one; border-right: none; }

code { background-color: rgb(236, 240, 243); padding: 0px 1px; font-size: 0=
.95em; }

th, dl.field-list > dt { background-color: rgb(238, 221, 238); }

.warning code { background: rgb(239, 194, 194); }

.note code { background: rgb(214, 214, 214); }

.viewcode-back { font-family: "Lucida Grande", Arial, sans-serif; }

div.viewcode-block:target { background-color: rgb(244, 222, 191); border-to=
p: 1px solid rgb(170, 204, 153); border-bottom: 1px solid rgb(170, 204, 153=
); }

div.code-block-caption { color: rgb(239, 239, 239); background-color: rgb(2=
8, 78, 99); }
------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.python.org/3/_static/basic.css

@charset "utf-8";

div.clearer { clear: both; }

div.section::after { display: block; content: ""; clear: left; }

div.related { width: 100%; font-size: 90%; }

div.related h3 { display: none; }

div.related ul { margin: 0px; padding: 0px 0px 0px 10px; list-style: none; =
}

div.related li { display: inline; }

div.related li.right { float: right; margin-right: 5px; }

div.sphinxsidebarwrapper { padding: 10px 5px 0px 10px; }

div.sphinxsidebar { float: left; width: 230px; margin-left: -100%; font-siz=
e: 90%; overflow-wrap: break-word; }

div.sphinxsidebar ul { list-style: none; }

div.sphinxsidebar ul ul, div.sphinxsidebar ul.want-points { margin-left: 20=
px; list-style: square; }

div.sphinxsidebar ul ul { margin-top: 0px; margin-bottom: 0px; }

div.sphinxsidebar form { margin-top: 10px; }

div.sphinxsidebar input { border: 1px solid rgb(152, 219, 204); font-family=
: sans-serif; font-size: 1em; }

div.sphinxsidebar #searchbox form.search { overflow: hidden; }

div.sphinxsidebar #searchbox input[type=3D"text"] { float: left; width: 80%=
; padding: 0.25em; box-sizing: border-box; }

div.sphinxsidebar #searchbox input[type=3D"submit"] { float: left; width: 2=
0%; border-left: none; padding: 0.25em; box-sizing: border-box; }

img { border: 0px; max-width: 100%; }

ul.search { margin: 10px 0px 0px 20px; padding: 0px; }

ul.search li { padding: 5px 0px 5px 20px; background-image: url("file.png")=
; background-repeat: no-repeat; background-position: 0px 7px; }

ul.search li a { font-weight: bold; }

ul.search li div.context { color: rgb(136, 136, 136); margin: 2px 0px 0px 3=
0px; text-align: left; }

ul.keywordmatches li.goodmatch a { font-weight: bold; }

table.contentstable { width: 90%; margin-left: auto; margin-right: auto; }

table.contentstable p.biglink { line-height: 150%; }

a.biglink { font-size: 1.3em; }

span.linkdescr { font-style: italic; padding-top: 5px; font-size: 90%; }

table.indextable { width: 100%; }

table.indextable td { text-align: left; vertical-align: top; }

table.indextable ul { margin-top: 0px; margin-bottom: 0px; list-style-type:=
 none; }

table.indextable > tbody > tr > td > ul { padding-left: 0em; }

table.indextable tr.pcap { height: 10px; }

table.indextable tr.cap { margin-top: 10px; background-color: rgb(242, 242,=
 242); }

img.toggler { margin-right: 3px; margin-top: 3px; cursor: pointer; }

div.modindex-jumpbox { border-top: 1px solid rgb(221, 221, 221); border-bot=
tom: 1px solid rgb(221, 221, 221); margin: 1em 0px; padding: 0.4em; }

div.genindex-jumpbox { border-top: 1px solid rgb(221, 221, 221); border-bot=
tom: 1px solid rgb(221, 221, 221); margin: 1em 0px; padding: 0.4em; }

table.modindextable td { padding: 2px; border-collapse: collapse; }

div.body { min-width: 450px; max-width: 800px; }

div.body p, div.body dd, div.body li, div.body blockquote { hyphens: auto; =
}

a.headerlink { visibility: hidden; }

a.brackets::before, span.brackets > a::before { content: "["; }

a.brackets::after, span.brackets > a::after { content: "]"; }

h1:hover > a.headerlink, h2:hover > a.headerlink, h3:hover > a.headerlink, =
h4:hover > a.headerlink, h5:hover > a.headerlink, h6:hover > a.headerlink, =
dt:hover > a.headerlink, caption:hover > a.headerlink, p.caption:hover > a.=
headerlink, div.code-block-caption:hover > a.headerlink { visibility: visib=
le; }

div.body p.caption { text-align: inherit; }

div.body td { text-align: left; }

.first { margin-top: 0px !important; }

p.rubric { margin-top: 30px; font-weight: bold; }

img.align-left, .figure.align-left, object.align-left { clear: left; float:=
 left; margin-right: 1em; }

img.align-right, .figure.align-right, object.align-right { clear: right; fl=
oat: right; margin-left: 1em; }

img.align-center, .figure.align-center, object.align-center { display: bloc=
k; margin-left: auto; margin-right: auto; }

img.align-default, .figure.align-default { display: block; margin-left: aut=
o; margin-right: auto; }

.align-left { text-align: left; }

.align-center { text-align: center; }

.align-default { text-align: center; }

.align-right { text-align: right; }

div.sidebar { margin: 0px 0px 0.5em 1em; border: 1px solid rgb(221, 221, 18=
7); padding: 7px; background-color: rgb(255, 255, 238); width: 40%; float: =
right; clear: right; overflow-x: auto; }

p.sidebar-title { font-weight: bold; }

div.admonition, div.topic, blockquote { clear: left; }

div.topic { border: 1px solid rgb(204, 204, 204); padding: 7px; margin: 10p=
x 0px; }

p.topic-title { font-size: 1.1em; font-weight: bold; margin-top: 10px; }

div.admonition { margin-top: 10px; margin-bottom: 10px; padding: 7px; }

div.admonition dt { font-weight: bold; }

p.admonition-title { margin: 0px 10px 5px 0px; font-weight: bold; }

div.body p.centered { text-align: center; margin-top: 25px; }

div.sidebar > :last-child, div.topic > :last-child, div.admonition > :last-=
child { margin-bottom: 0px; }

div.sidebar::after, div.topic::after, div.admonition::after, blockquote::af=
ter { display: block; content: ""; clear: both; }

table.docutils { margin-top: 10px; margin-bottom: 10px; border: 0px; border=
-collapse: collapse; }

table.align-center { margin-left: auto; margin-right: auto; }

table.align-default { margin-left: auto; margin-right: auto; }

table caption span.caption-number { font-style: italic; }

table caption span.caption-text { }

table.docutils td, table.docutils th { padding: 1px 8px 1px 5px; border-wid=
th: 0px 0px 1px; border-top-style: initial; border-top-color: initial; bord=
er-left-style: initial; border-left-color: initial; border-right-style: ini=
tial; border-right-color: initial; border-bottom-style: solid; border-botto=
m-color: rgb(170, 170, 170); }

table.footnote td, table.footnote th { border: 0px !important; }

th { text-align: left; padding-right: 5px; }

table.citation { border-left: 1px solid gray; margin-left: 1px; }

table.citation td { border-bottom: none; }

th > :first-child, td > :first-child { margin-top: 0px; }

th > :last-child, td > :last-child { margin-bottom: 0px; }

div.figure { margin: 0.5em; padding: 0.5em; }

div.figure p.caption { padding: 0.3em; }

div.figure p.caption span.caption-number { font-style: italic; }

div.figure p.caption span.caption-text { }

table.field-list td, table.field-list th { border: 0px !important; }

.field-list ul { margin: 0px; padding-left: 1em; }

.field-list p { margin: 0px; }

.field-name { hyphens: manual; }

table.hlist { margin: 1em 0px; }

table.hlist td { vertical-align: top; }

ol.arabic { list-style: decimal; }

ol.loweralpha { list-style: lower-alpha; }

ol.upperalpha { list-style: upper-alpha; }

ol.lowerroman { list-style: lower-roman; }

ol.upperroman { list-style: upper-roman; }

:not(li) > ol > li:first-child > :first-child, :not(li) > ul > li:first-chi=
ld > :first-child { margin-top: 0px; }

:not(li) > ol > li:last-child > :last-child, :not(li) > ul > li:last-child =
> :last-child { margin-bottom: 0px; }

ol.simple ol p, ol.simple ul p, ul.simple ol p, ul.simple ul p { margin-top=
: 0px; }

ol.simple > li:not(:first-child) > p, ul.simple > li:not(:first-child) > p =
{ margin-top: 0px; }

ol.simple p, ul.simple p { margin-bottom: 0px; }

dl.footnote > dt, dl.citation > dt { float: left; margin-right: 0.5em; }

dl.footnote > dd, dl.citation > dd { margin-bottom: 0em; }

dl.footnote > dd::after, dl.citation > dd::after { content: ""; clear: both=
; }

dl.field-list { display: grid; grid-template-columns: fit-content(30%) auto=
; }

dl.field-list > dt { font-weight: bold; word-break: break-word; padding-lef=
t: 0.5em; padding-right: 5px; }

dl.field-list > dt::after { content: ":"; }

dl.field-list > dd { padding-left: 0.5em; margin-top: 0em; margin-left: 0em=
; margin-bottom: 0em; }

dl { margin-bottom: 15px; }

dd > :first-child { margin-top: 0px; }

dd ul, dd table { margin-bottom: 10px; }

dd { margin-top: 3px; margin-bottom: 10px; margin-left: 30px; }

dl > dd:last-child, dl > dd:last-child > :last-child { margin-bottom: 0px; =
}

dt:target, span.highlighted { background-color: rgb(251, 229, 78); }

rect.highlighted { fill: rgb(251, 229, 78); }

dl.glossary dt { font-weight: bold; font-size: 1.1em; }

.optional { font-size: 1.3em; }

.sig-paren { font-size: larger; }

.versionmodified { font-style: italic; }

.system-message { background-color: rgb(255, 221, 170); padding: 5px; borde=
r: 3px solid red; }

.footnote:target { background-color: rgb(255, 255, 170); }

.line-block { display: block; margin-top: 1em; margin-bottom: 1em; }

.line-block .line-block { margin-top: 0px; margin-bottom: 0px; margin-left:=
 1.5em; }

.guilabel, .menuselection { font-family: sans-serif; }

.accelerator { text-decoration: underline; }

.classifier { font-style: oblique; }

.classifier::before { font-style: normal; margin: 0.5em; content: ":"; }

abbr, acronym { border-bottom: 1px dotted; cursor: help; }

pre { overflow: auto hidden; }

pre, div[class*=3D"highlight-"] { clear: both; }

span.pre { hyphens: none; }

div[class*=3D"highlight-"] { margin: 1em 0px; }

td.linenos pre { border: 0px; background-color: transparent; color: rgb(170=
, 170, 170); }

table.highlighttable { display: block; }

table.highlighttable tbody { display: block; }

table.highlighttable tr { display: flex; }

table.highlighttable td { margin: 0px; padding: 0px; }

table.highlighttable td.linenos { padding-right: 0.5em; }

table.highlighttable td.code { flex: 1 1 0%; overflow: hidden; }

.highlight .hll { display: block; }

div.highlight pre, table.highlighttable pre { margin: 0px; }

div.code-block-caption + div { margin-top: 0px; }

div.code-block-caption { margin-top: 1em; padding: 2px 5px; font-size: smal=
l; }

div.code-block-caption code { background-color: transparent; }

table.highlighttable td.linenos, span.linenos, div.doctest > div.highlight =
span.gp { user-select: none; }

div.code-block-caption span.caption-number { padding: 0.1em 0.3em; font-sty=
le: italic; }

div.code-block-caption span.caption-text { }

div.literal-block-wrapper { margin: 1em 0px; }

code.descname { background-color: transparent; font-weight: bold; font-size=
: 1.2em; }

code.descclassname { background-color: transparent; }

code.xref, a code { background-color: transparent; font-weight: bold; }

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { background-color: tr=
ansparent; }

.viewcode-link { float: right; }

.viewcode-back { float: right; font-family: sans-serif; }

div.viewcode-block:target { margin: -1px -10px; padding: 0px 10px; }

img.math { vertical-align: middle; }

div.body div.math p { text-align: center; }

span.eqno { float: right; }

span.eqno a.headerlink { position: absolute; z-index: 1; }

div.math:hover a.headerlink { visibility: visible; }

@media print {
  div.document, div.documentwrapper, div.bodywrapper { width: 100%; margin:=
 0px !important; }
  div.sphinxsidebar, div.related, div.footer, #top-link { display: none; }
}
------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.python.org/3/_static/py.svg

<svg width=3D"16" height=3D"16" viewBox=3D"0 0 16 16" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg">
<path d=3D"M7.90472 0.00013087C7.24498 0.00316295 6.61493 0.0588153 6.06056=
 0.15584C4.42744 0.441207 4.13093 1.0385 4.13093 2.14002V3.59479H7.99018V4.=
07971H4.13093H2.68259C1.56098 4.07971 0.578874 4.7465 0.271682 6.01495C-0.0=
826595 7.4689 -0.0983765 8.37618 0.271682 9.89434C0.546011 11.0244 1.20115 =
11.8296 2.32275 11.8296H3.64965V10.0856C3.64965 8.82574 4.75178 7.71441 6.0=
6056 7.71441H9.91531C10.9883 7.71441 11.8449 6.84056 11.8449 5.77472V2.1400=
2C11.8449 1.10556 10.9626 0.328486 9.91531 0.15584C9.25235 0.046687 8.56447=
 -0.00290121 7.90472 0.00013087ZM5.81767 1.17017C6.2163 1.17017 6.54184 1.4=
9742 6.54184 1.89978C6.54184 2.30072 6.2163 2.62494 5.81767 2.62494C5.41761=
 2.62494 5.0935 2.30072 5.0935 1.89978C5.0935 1.49742 5.41761 1.17017 5.817=
67 1.17017Z" fill=3D"url(#paint0_linear)"/>
<path d=3D"M12.3262 4.07971V5.77472C12.3262 7.08883 11.1998 8.19488 9.9153 =
8.19488H6.06055C5.00466 8.19488 4.13092 9.0887 4.13092 10.1346V13.7693C4.13=
092 14.8037 5.04038 15.4122 6.06055 15.709C7.28217 16.0642 8.45364 16.1285 =
9.9153 15.709C10.8869 15.4307 11.8449 14.8708 11.8449 13.7693V12.3145H7.990=
17V11.8296H11.8449H13.7746C14.8962 11.8296 15.3141 11.0558 15.7042 9.89434C=
16.1071 8.69865 16.09 7.5488 15.7042 6.01495C15.427 4.91058 14.8976 4.07971=
 13.7746 4.07971H12.3262ZM10.1582 13.2843C10.5583 13.2843 10.8824 13.6086 1=
0.8824 14.0095C10.8824 14.4119 10.5583 14.7391 10.1582 14.7391C9.75955 14.7=
391 9.43402 14.4119 9.43402 14.0095C9.43402 13.6086 9.75955 13.2843 10.1582=
 13.2843Z" fill=3D"url(#paint1_linear)"/>
<defs>
<linearGradient id=3D"paint0_linear" x1=3D"1.25961e-08" y1=3D"1.08223e-08" =
x2=3D"8.81664" y2=3D"7.59597" gradientUnits=3D"userSpaceOnUse">
<stop stop-color=3D"#5A9FD4"/>
<stop offset=3D"1" stop-color=3D"#306998"/>
</linearGradient>
<linearGradient id=3D"paint1_linear" x1=3D"10.0654" y1=3D"13.8872" x2=3D"6.=
91912" y2=3D"9.42957" gradientUnits=3D"userSpaceOnUse">
<stop stop-color=3D"#FFD43B"/>
<stop offset=3D"1" stop-color=3D"#FFE873"/>
</linearGradient>
</defs>
</svg>=0A
------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://docs.python.org/3/_images/turtle-star.png

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
RU5ErkJggg==

------MultipartBoundary--Z4kBSLoIRuD9rkEuklauJBGtBEYtpH4WVAm25bg3IB------
